[{"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\index.js":"1","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Recovery.jsx":"2","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\Pdf.jsx":"3","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\road_to_map\\Roaptomap.jsx":"4","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\acerca\\Acerca.jsx":"5","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\navbar\\Navigation.jsx":"6","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\wallet\\HeaderCards.jsx":"7","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Review.jsx":"8","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\js\\encrypt.js":"9","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\App.js":"10","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Home.jsx":"11","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\proyectos\\Foco.jsx":"12","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\UploadImage.jsx":"13","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\WhitepaperHome.jsx":"14","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Video.jsx":"15","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\Particles-config.js":"16","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Dashboard.jsx":"17","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\contexts\\AuthContext.jsx":"18","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\SignInModal.jsx":"19","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\DollarMarktComponent.jsx":"20","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\PaymentForm.jsx":"21","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PurchaseHistory.jsx":"22","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\i18n.js":"23","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Checkout.jsx":"24","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\firebase.js":"25","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Banner.jsx":"26","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\TokenAmount.jsx":"27","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\cuentaregresiva.js":"28","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\PersonalData.jsx":"29","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PaymentComponent.jsx":"30","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Ventajas.jsx":"31","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\CheckConnection.jsx":"32","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PasswordRecoveryModal.jsx":"33","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Newsletter.jsx":"34"},{"size":318,"mtime":1620334582984,"results":"35","hashOfConfig":"36"},{"size":11202,"mtime":1620404893466,"results":"37","hashOfConfig":"36"},{"size":2283,"mtime":1620669519192,"results":"38","hashOfConfig":"36"},{"size":1742,"mtime":1620334582642,"results":"39","hashOfConfig":"36"},{"size":11440,"mtime":1620666415951,"results":"40","hashOfConfig":"36"},{"size":8824,"mtime":1620404893460,"results":"41","hashOfConfig":"36"},{"size":3422,"mtime":1620404893548,"results":"42","hashOfConfig":"36"},{"size":13565,"mtime":1620423927592,"results":"43","hashOfConfig":"36"},{"size":317,"mtime":1620404893481,"results":"44","hashOfConfig":"36"},{"size":2743,"mtime":1620409669186,"results":"45","hashOfConfig":"36"},{"size":1489,"mtime":1620334582620,"results":"46","hashOfConfig":"36"},{"size":496,"mtime":1620334582639,"results":"47","hashOfConfig":"36"},{"size":7912,"mtime":1620404893485,"results":"48","hashOfConfig":"36"},{"size":793,"mtime":1620334582633,"results":"49","hashOfConfig":"36"},{"size":632,"mtime":1620334582632,"results":"50","hashOfConfig":"36"},{"size":2358,"mtime":1620334582614,"results":"51","hashOfConfig":"36"},{"size":4003,"mtime":1620417468016,"results":"52","hashOfConfig":"36"},{"size":1464,"mtime":1620404893458,"results":"53","hashOfConfig":"36"},{"size":16099,"mtime":1620409520909,"results":"54","hashOfConfig":"36"},{"size":3775,"mtime":1620404893463,"results":"55","hashOfConfig":"36"},{"size":1586,"mtime":1620404893474,"results":"56","hashOfConfig":"36"},{"size":15231,"mtime":1620404893465,"results":"57","hashOfConfig":"36"},{"size":1645,"mtime":1615483048459,"results":"58","hashOfConfig":"36"},{"size":12515,"mtime":1620409520911,"results":"59","hashOfConfig":"36"},{"size":597,"mtime":1614706468740,"results":"60","hashOfConfig":"36"},{"size":2203,"mtime":1620334582616,"results":"61","hashOfConfig":"36"},{"size":4310,"mtime":1620409520912,"results":"62","hashOfConfig":"36"},{"size":1745,"mtime":1614722443860,"results":"63","hashOfConfig":"36"},{"size":16050,"mtime":1620409520914,"results":"64","hashOfConfig":"36"},{"size":2301,"mtime":1620409520908,"results":"65","hashOfConfig":"36"},{"size":3008,"mtime":1620334582630,"results":"66","hashOfConfig":"36"},{"size":1680,"mtime":1620404893460,"results":"67","hashOfConfig":"36"},{"size":5783,"mtime":1620404893463,"results":"68","hashOfConfig":"36"},{"size":721,"mtime":1620334582623,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1yc83er",{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\index.js",[],["157","158"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Recovery.jsx",["159","160","161","162"],"import React, {useEffect, useState} from 'react';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Card from \"@material-ui/core/Card\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Input from '@material-ui/core/Input';\nimport passwordValidator from \"password-validator\";\nimport swal2 from \"@sweetalert/with-react\";\nimport swal from \"sweetalert\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport axios from \"axios\";\n\n\nconst Recovery = () => {\n    const classes = useStyles();\n    const [values, setValues] = useState({\n        showPassword1: false,\n        showPassword2: false\n    });\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [ready, setReady] = useState(false);\n    const history = useHistory();\n    const {id} = useParams();\n\n    useEffect(() => {\n        verifyToken(id);\n    }, []);\n\n    const verifyToken = async token => {\n        axios.get(\"https://sunshine-ico.uc.r.appspot.com/reset\", {\n            params: {\n                resetPasswordToken: token\n            },\n        }).then(response => {\n            if(response.data.message === \"token-ok\"){\n                console.log(response.data.uid);\n                setReady(true);\n            } else {\n                console.log(\"No hay nada que mostrar\");\n                setReady(false);\n            }\n        }).catch(e => {\n            console.log(e.data);\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (password !== \"\" && password2 !== \"\") {\n            let schema = new passwordValidator();\n            schema\n                .is().min(8)\n                .is().max(100)\n                .has().uppercase()\n                .has().lowercase()\n                .has().digits(1)\n                .has().not().spaces();\n\n            if (schema.validate(password)) {\n                console.log(\"FORMATO VALIDO\");\n                if(password === password2){\n                    swal({\n                        title: \"Contraseña cambiada!\",\n                        text: \"Inicia sesión en tu cuenta con tu nueva contraseña\",\n                        icon: \"success\",\n                        button: \"Iniciar sesión!\",\n                        closeOnClickOutside: false\n                    }).then(confirm => {\n                        if(confirm){\n                            //CAMBIAR PASS EN FIRESTORE\n                            //ENVIAR AL LOGIN\n                            history.push(\"/Home\");\n                            document.getElementById(\"signInButton\").click();\n                        }\n                    });\n                } else {\n                    swal({\n                        title: \"Las contraseñas no coinciden\",\n                        text: \"Asegurate de escribir las mismas contraseñas en los campos correspondientes!\",\n                        icon: \"warning\",\n                        button: \"Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n            } else {\n                swal2({\n                    text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                    closeOnClickOutside: false,\n                    buttons: {\n                        cancel: \"Entendido\",\n                    },\n                    content: (\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <ul>\n                                    {\n                                        schema.validate(password, {list: true}).map((element, index) => {\n                                            console.log(element);\n                                            switch(element) {\n                                                case 'min':\n\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                    )\n\n                                                case 'max':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                    )\n\n                                                case 'uppercase':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo una letra mayuscula</p></li>\n                                                    )\n\n                                                case 'lowercase':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo 1 letra minuscula</p></li>\n                                                    )\n\n                                                case 'spaces':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">No debe contener espacios</p></li>\n                                                    )\n\n                                                case 'digits':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo 1 número</p></li>\n                                                    )\n\n                                            }\n\n                                        })\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        } else {\n            //LLENA TODOS LOS CAMPOS\n        }\n    }\n\n    const handleClickShowPassword = (id) => {\n        if (id === 1) {\n            setValues({...values, showPassword1: !values.showPassword1});\n        } else if (id === 2) {\n            setValues({...values, showPassword2: !values.showPassword2});\n        }\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n\n        <div className=\"container\">\n            <Card className={classes.root}>\n\n                <CardContent>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"row\">\n\n                            <div className=\"col-12\">\n                                <h3>Cambia tu contraseña</h3>\n                            </div>\n\n\n                            <div className=\"col-12 mt-5 mb-4\">\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Contraseña nueva</InputLabel>\n                                    <Input\n                                        required\n                                        id=\"standard-adornment-password\"\n                                        type={values.showPassword1 ? 'text' : 'password'}\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={() => handleClickShowPassword(1)}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {values.showPassword1 ? <Visibility/> : <VisibilityOff/>}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className=\"col-12 mb-5\">\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Repite tu contraseña</InputLabel>\n                                    <Input\n                                        required\n                                        id=\"standard-adornment-password\"\n                                        type={values.showPassword2 ? 'text' : 'password'}\n                                        value={password2}\n                                        onChange={e => setPassword2(e.target.value)}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={() => handleClickShowPassword(2)}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {values.showPassword2 ? <Visibility/> : <VisibilityOff/>}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className=\"col-12\">\n                                <Button variant=\"contained\" type=\"submit\" size=\"large\" color=\"primary\">\n                                    Enviar\n                                </Button>\n                            </div>\n\n                        </div>\n                    </form>\n\n                </CardContent>\n                <CardActions>\n                </CardActions>\n            </Card>\n        </div>\n\n    );\n};\n\nexport default Recovery;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 150\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        width: '25ch',\n    },\n}));","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\Pdf.jsx",["163"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\road_to_map\\Roaptomap.jsx",["164","165"],"import '../../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component} from \"react\";\nimport Footer from '../footer/Footer';\nimport DemoCarousel from './carussel.jsx';\nimport maparoad from '../../images/road-map.png';\nimport monedafinal from \"../../images/monedafinal.png\";\nimport {useTranslation} from 'react-i18next';\nimport lineascar from \"../../images/lineas.svg\";\n\nconst RoaptoMapa = () => {\n    const {t} = useTranslation();\n\n    return (\n\n        <div className=\" road \">\n            <div className=\"row \">\n            <img  className=\"img-fluid linea-car-1 d-flex d-md-none\"src={lineascar} alt=\"linacarrusel\"/>\n                <p className=\"text-roap-map  \">\n                    <h1 align=\"center\">ROAD MAP</h1>\n                   \n                    <p className=\"text-roap-1 d-none d-md-flex\">{t('RoadToMap.0')}</p>\n                    <p className=\"text-roap-2 d-none d-md-flex\">{t('RoadToMap.1')}</p>\n                    <p className=\"text-roap-3 d-none d-md-flex\">{t('RoadToMap.2')}</p>\n                    <p className=\"text-roap-4 d-none d-md-flex\">{t('RoadToMap.3')}</p>\n                    <p className=\"text-roap-5 d-none d-md-flex\">{t('RoadToMap.4')}</p>\n                    <p className=\"text-roap-6 d-none d-md-flex\">{t('RoadToMap.5')}</p>\n                    <p className=\"text-roap-7 d-none d-md-flex\">{t('RoadToMap.6')}</p>\n                    <p className=\"text-roap-8 d-none d-md-flex\">{t('RoadToMap.7')}</p>\n                    \n                </p>\n                \n                <img src={maparoad} className=\" d-none d-md-flex  maparoad \" alt=\"\"/>\n                 \n            </div>\n           \n<DemoCarousel/>\n            <Footer/>\n        </div>\n\n\n    )\n}\n\n\nexport default RoaptoMapa;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\acerca\\Acerca.jsx",["166","167","168","169","170","171","172","173","174","175"],"import React, {useState, useEffect} from \"react\";\nimport '../../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport EquipoSunshine from \"../../images/team.png\";\nimport Footer from '../footer/Footer';\nimport Linkecontact from \"../../images/linkecontact.svg\";\nimport Twitercontact from \"../../images/twitercontact.svg\";\nimport {db} from \"../config/firebase\";\nimport './css/styles.css';\nimport { useTranslation } from 'react-i18next';\nimport ACCESIBILIDAD from '../../images/Accesibilidad-01.png';\nimport PRIVACIDAD from '../../images/provacidad-04.png';\nimport SOLIDEZ from '../../images/solidez-02.png';\nimport TRABAJOEQUIPO from '../../images/trabajo en equipo-03.png';\nimport VIRY from '../../images/team/VIRY.jpg';\nimport JOSS from '../../images/team/JOS.jpg';\nimport CHRIS from '../../images/team/CHRIS.jpg';\nimport MANU from '../../images/team/MANU.jpg';\nimport CRIS from '../../images/team/CRIS.jpg';\nimport Fade from 'react-reveal/Fade';\nimport Zoom from 'react-reveal/Zoom';\nimport Cardsworkers from \"./cardsworkers.jsx\";\n\n\n\nconst Acerca = () => {\n\n    const { t } = useTranslation();\n    const [team, setTeam] = useState([]);\n    const [differencesItems, setDifferencesItems] = useState([]);\n\n    const fetchData = async() => {\n        const collections = ['team', 'differencesItems'];\n        await collections.forEach(element => {\n            db.collection(element)\n                .get()\n                .then(snapshot => {\n                    let tempArray = [];\n                    snapshot\n                        .docs.forEach(item => {\n                            tempArray.push(item.data());\n                        });\n                    //LA SIGUIENTE LINEA ES PARA GUARDAR LOS DATOS EN EL STATE CORRESPONDIENTE SEGUN CADA ELEMENTO DEL ARRAY \"collections\"\n                    // EJ. setTeam(tempArray) , setDifferencesItems(tempArray), etc...\n                    //NOTA: eval NO DEBERIA SER USADO PARA GUARDAR DATOS EN UNA COLECCION, AQUI SE USA PARA MOSTRAR DATOS EN EL LADO DEL CLIENTE SOLAMENTE\n                    eval(`set${element.charAt(0).toUpperCase() + element.slice(1)}`)(tempArray);\n                })\n        });\n    }\n\n    useEffect(() => {\n        //fetchData();\n    }, []);\n\n\n    const differences = [\n        {\n            image: ACCESIBILIDAD,\n            title: t('AboutSection.Differences.Items.0.Title'),\n            description: t('AboutSection.Differences.Items.0.Text')\n        },\n        {\n            image: PRIVACIDAD,\n            title: t('AboutSection.Differences.Items.1.Title'),\n            description: t('AboutSection.Differences.Items.1.Text')\n        },\n        {\n            image: SOLIDEZ,\n            title: t('AboutSection.Differences.Items.2.Title'),\n            description: t('AboutSection.Differences.Items.2.Text')\n        },\n        {\n            image: TRABAJOEQUIPO,\n            title: t('AboutSection.Differences.Items.3.Title'),\n            description: t('AboutSection.Differences.Items.3.Text')\n        }\n    ];\n\n    const team2 = [\n        {\n            image: VIRY,\n            name: t('AboutSection.Team.Items.0.Name'),\n            career: t('AboutSection.Team.Items.0.Career'),\n            description: t('AboutSection.Team.Items.0.Description'),\n            social: {\n                linkedin: \"https://mx.linkedin.com/in/viry-uribe-879b68163/\",\n                twitter: \"https://twitter.com/home?lang=es\"\n            }\n        },\n        {\n            image: JOSS,\n            name: t('AboutSection.Team.Items.1.Name'),\n            career: t('AboutSection.Team.Items.1.Career'),\n            description: t('AboutSection.Team.Items.1.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jocelyn-uribe-maldonado-720a90203/\",\n                twitter: \"https://twitter.com/jocelyn_um\"\n            }\n        },\n        {\n            image: CHRIS,\n            name: t('AboutSection.Team.Items.2.Name'),\n            career: t('AboutSection.Team.Items.2.Career'),\n            description: t('AboutSection.Team.Items.2.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/ahtziri-antonio-pe%C3%B1a-142705179/\",\n                twitter: \"\"\n            }\n        },\n        {\n            image: MANU,\n            name: t('AboutSection.Team.Items.3.Name'),\n            career: t('AboutSection.Team.Items.3.Career'),\n            description: t('AboutSection.Team.Items.3.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jose-manuel-viniegra-molina-aab9a51a8/\",\n                twitter: \"https://twitter.com/manuel87129931\"\n            }\n        },\n        {\n            image: CRIS,\n            name: t('AboutSection.Team.Items.4.Name'),\n            career: t('AboutSection.Team.Items.4.Career'),\n            description: t('AboutSection.Team.Items.4.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/cristian-augusto-armenta-garcia/\",\n                twitter: \"https://twitter.com/CRISTIANAUGUS14\"\n            }\n        }\n    ]\n\n    return (\n        <div className=\"\">\n           \n\n\n            <div className=\"container-fluid\">\n            <Fade left cascade>\n                <div className=\"row mt-5 mb-5 pt-5 pb-5 pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5 bg-about2\">\n                    <div className=\"col-12 mt-5  pb-5\">\n                        <h1 className=\"text-center text-preview text-size-banner\">\n                            {t('AboutSection.Title')}\n                        </h1>\n                        <hr/>\n                    </div>\n                    <div className=\"col-12 mb-5\">\n                        <p className=\"text-center mb-5 text-preview pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5\" style={{fontSize: 30}}>\n                            {t('AboutSection.Introduction.0')}\n                        </p>\n                       \n                    </div>\n\n                </div>\n\n                <div className=\"row justify-content-center\">\n               \n                <div  className=\"  col-md-3 cont-card-mision  p-5 \">\n                       \n                        <div className=\" d-flex justify-content-center mt-5    \">\n                            <h3 className=\"title-vision \">   {t('AboutSection.Mision.Title')}</h3>\n                        </div>\n                        <div className=\"col-12 d-flex text-center \">\n                            <h5 className=\"parrafo-vision p-1\"> {t('AboutSection.Mision.description')}</h5>\n                        </div>\n                    </div>\n\n\n                    \n                    <div  className=\"  col-md-3  cont-card-mision p-5 \">\n                       \n                       <div className=\"d-flex  justify-content-center mt-5  \">\n                           <h3 className=\"title-vision \"> {t('AboutSection.Vision.Title')}</h3>\n                       </div>\n                       <div className=\"col-12 d-flex text-center \">\n                           <h5 className=\"parrafo-vision p-1\">{t('AboutSection.Vision.description')}\n\n</h5>\n                       </div>\n                   </div>\n                    </div>\n                </Fade>\n\n                <div className=\"  row  pb-5  justify-content-center\">\n                    <div className=\"col-12  pt-4 pb-4\">\n                        <h1 className=\"text-size-title-differences text-center\"> <Fade left cascade>{t('AboutSection.Differences.Title')}</Fade></h1>\n                    </div>\n                    {\n                        differences.map((value, index) => (\n                            <Zoom>\n                            <div id={index} \n                            className=\" col-12 col-sm-12 row col-lg-4 col-xl-4 cont-diferencia    \">\n                                <img src={value.image} alt=\"\" className=\"icons-differences \"/>\n                                <h3 className=\"text-center\">{value.title}</h3>\n                                <p  className=\"text-center\">{value.description}</p>\n                            </div>\n                            </Zoom>\n                        ))\n                    }\n \n                          \n                   \n                </div>\n          \n                \n            <Cardsworkers/>\n            \n            <div className=\"container-fluid pb-5 d-block d-md-none\">\n            \n                <div className=\"container \">\n                    <div className=\"row pb-5\">\n                        {\n                            team2.map((value, index) => (\n                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4\">\n                                    <div className=\"card text-light text-center mt-5 mb-5 bg-cards\">\n\n                                        <div className=\"card-img-top mt-5\"> \n                                            <img className=\"rounded-circle img-fluid teams-images w-50\" src={value.image} alt=\"Card image cap\"/>\n                                        </div>\n\n                                        <div className=\"card-body mt-3 d-block\">\n                                            <h3 className=\"card-title mb-3\">{value.name}</h3>\n                                            <h6 className=\"card-subtitle mb-4\">{value.career}</h6>\n                                            <div style={{height: 120}}>\n                                                <p className=\"card-text mb-4\">{value.description}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"card-body border-top\">\n                                            <div className=\"row\">\n                                                <div className=\"col-6\">\n                                                    <a href={value.social.linkedin} target=\"_blank\">\n                                                        <img src={Linkecontact} alt=\"face\"/>\n                                                    </a>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <a href={value.social.twitter || \"#\"} className={value.social.twitter || \"disabled\"} target=\"_blank\">\n                                                        <img src={Twitercontact} alt=\"face\"/>\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <button className=\"btn bg-cards text-light btn-lg btn-block\" data-toggle=\"modal\"\n                                    data-target=\"#staticBackdropcon\">{t('AboutSection.ButtonText')}</button>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n              \n            </div>\n            \n            <div className=\"container-fluid\">\n                <Footer/>\n            </div>\n\n\n                                   \n        </div>\n\n\n    )\n}\n\n\nexport default Acerca;",["176","177"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\navbar\\Navigation.jsx",["178","179","180","181","182","183","184","185","186","187","188"],"import '../../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport logonav from '../../icons/logonav.svg';\nimport React, {useState, useEffect} from 'react';\nimport \"firebase/auth\";\nimport {NavLink, useHistory} from 'react-router-dom';\nimport 'firebase/firestore';\nimport SignUpModal from \"../user/SignUpModal\";\nimport SignInModal from \"../user/SignInModal\";\nimport './mostrarmenu';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport USAFLAG from \"../../images/usa_flag_icon.svg\";\nimport MEXICOFLAG from \"../../images/mexico_flag_icon.svg\";\nimport {useAuth} from \"../contexts/AuthContext\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PasswordRecoveryModal from \"../user/PasswordRecoveryModal\";\n\nconst Navigation = () => {\n    const { t } = useTranslation();\n    const history = useHistory();\n    const {currentUser, logout} = useAuth();\n    const [logged, setLogged] = useState(currentUser ? true : false);\n\n    function handleClick(lang) {\n        i18next.changeLanguage(lang)\n    }\n\n    async function handleLogout() {\n        try {\n            await logout();\n            window.location.reload();\n            history.push(\"/Home\");\n        } catch {\n        }\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick2 = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (e) => {\n        setAnchorEl(null);\n        console.log(e);\n        switch (e) {\n            case \"profile\":\n                history.push(\"./Profile\");\n                break;\n            case \"logout\":\n                handleLogout();\n                break;\n            case \"settings\":\n                break;\n        }\n    };\n\n    const renderNavbar = () => {\n        if(logged) {\n\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top bg-light\" id=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img className=\"  \" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\" >\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <h5>SUNSHINE</h5>\n                                </li>\n\n                            </ul>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')} data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')} data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <div>\n                                <Button aria-controls=\"simple-menu\" variant=\"contained\" color=\"primary\" aria-haspopup=\"true\" onClick={handleClick2}>\n                                    {currentUser ? currentUser.email : \"Invitado\"} <ExpandMoreIcon />\n                                </Button>\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={handleClose}\n                                >\n                                    <MenuItem id=\"profile\" onClick={e => handleClose(e.target.id)}>Perfil</MenuItem>\n                                    <MenuItem id=\"settings\" onClick={e => handleClose(e.target.id)}>Ajustes</MenuItem>\n                                    <MenuItem id=\"logout\" onClick={e => handleClose(e.target.id)}>Cerrar sesión</MenuItem>\n                                </Menu>\n                            </div>\n\n                        </div>\n                    </div>\n                </nav>\n            )\n\n        } else {\n            return(\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"navbar\" >\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img className=\"  \" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\" >\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"\n                                             to=\"./Acerca\">{t('Navbar.Acerca')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" tap-index=\"-1\"\n                                             activeClassName=\"active\" area-disabled=\"true\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"\n                                             to=\"./Roaptomap\">{t('Navbar.RoadToMap')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" activeClassName=\"active\"\n                                             area-disabled=\"true\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"\n                                             to=\"./Proyectos\">{t('Navbar.Proyectos')}\n                                    </NavLink>\n                                </li>\n                            </ul>\n                            <a href=\"#\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <button type=\"button\" id=\"signInButton\" className=\"navsesion btn btn-link\" data-toggle=\"modal\" data-target=\"#signInModal\"\n                                >{t('Navbar.SignIn')}\n                                </button>\n                            </a>\n\n                            <a href=\"#\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <button type=\"button\" className=\"navsesion btn btn-link\" data-toggle=\"modal\" data-target=\"#signUpModal\"\n                                >\n                                    {t('Navbar.SignUp')}\n                                </button>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')} data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')} data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                        </div>\n                        <SignUpModal />\n                        <SignInModal />\n                        <PasswordRecoveryModal/>\n                    </div>\n                </nav>\n            )\n        }\n    }\n\n    return (\n\n        <>\n            {renderNavbar()}\n        </>\n    )\n}\nexport default Navigation;",["189","190"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\wallet\\HeaderCards.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Review.jsx",["191","192","193"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\js\\encrypt.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\App.js",["194"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Home.jsx",["195","196"],"import React, {Suspense, lazy} from 'react';\nimport '../../App.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport monedag from \"../../images/moneda.gif\";\nimport Banner from \"./Banner\";\n\n\n\n/*const Banner =lazy(()=>import ('./Banner'));*/\nconst Video =lazy(()=>import ('./Video'));\nconst Countdown =lazy(()=>import ('./Countdown'));\nconst Proyectos =lazy(()=>import ('../proyectos/Proyectos'));\nconst Soporte =lazy(()=>import ('./Soporte'));\nconst PreguntasFrecuentes  =lazy(()=>import ('./PreguntasFrecuentes'));\nconst Newsletter =lazy(()=>import ('./Newsletter'));\nconst MapaApp =lazy(()=>import ('./MapaApp'));\nconst Ventajas =lazy(()=>import ('./Ventajas'));\nconst WhitepaperHome =lazy(()=>import ('./WhitepaperHome'));\nconst Footer =lazy(()=>import ('../footer/Footer'));\n\n\n\nconst Home = () => {\n\n    return (\n        <div className=\"container-fluid\" className=\"\" >\n            <Banner/>\n<Suspense fallback={\n<div className=\"  container mt-5 text-center   justify-content-center\">\n\n<img className=\"moneda-carga\" align=\"top\"src={monedag}/><p className=\"\">CARGANDO...</p> \n    \n</div>\n}>\n            \n            <Video/>\n            <Countdown/>\n            <WhitepaperHome />\n            <Ventajas />\n            <Proyectos />\n            <MapaApp />\n            <Soporte />\n            <PreguntasFrecuentes />\n            <Newsletter />\n            <Footer/>\n\n            </Suspense>\n        </div>\n    )\n}\n\n\nexport default Home;\n\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\proyectos\\Foco.jsx",["197","198","199","200"],"import '../../App.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component, useEffect, useState} from 'react';\nimport Footer from '../footer/Footer';\nimport Proyectos from \"./Proyectos\";\nimport Roll from 'react-reveal/Roll';\n\n\n\nconst Foco = () => {\n    return (\n        \n        <div className=\"mt-5\">\n           \n            <Proyectos />\n           \n            <Footer/>\n        </div>\n       \n    )\n}\n\nexport default Foco\n    ",["201","202"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\UploadImage.jsx",["203","204"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\WhitepaperHome.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Video.jsx",["205"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\Particles-config.js",[],["206","207"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Dashboard.jsx",["208","209","210","211","212","213"],"import React, {useState, useEffect} from 'react';\nimport {useAuth} from \"../contexts/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\nimport moneda_dashboard from \"../../images/moneda-dashboard.svg\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DollarMarktComponent from \"./DollarMarktComponent\";\nimport PaymentComponent from \"./PaymentComponent\";\nimport {db} from \"../config/firebase\";\nimport PurchaseHistory from \"./PurchaseHistory\";\nimport CheckConnection from \"./CheckConnection\";\nimport NumberFormat from \"react-number-format\";\n\nconst Dashboard = () => {\n    const {currentUser, logout} = useAuth();\n    const [signinEmail, setSigninEmail] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const [logged, setLogged] = useState(false);\n    const [cryptoData, setCryptoData] = useState([{}]);\n    const [userInfo, setUserInfo] = useState({});\n    const history = useHistory();\n\n    const getUserData = async(id) => {\n        try{\n            let docRef = db.collection('credentials').doc(id);\n            await docRef.onSnapshot(doc => {\n                if(doc.exists){\n                    setUserInfo(doc.data());\n                    setAmount(doc.data().suns);\n                }\n            })\n        } catch (e) {\n            console.log(\"Dashboard.jsx - getUserData()\" + e);\n        }\n    }\n\n    useEffect(() => {\n        try{\n            let email = currentUser.email;\n            let id = currentUser.uid;\n            setSigninEmail(email);\n            setUid(id);\n            setLogged(true);\n            history.push(\"/\");\n            getUserData(id);\n        } catch (e) {\n            console.log(\"ACASO SERE YO SEÑOR?\");\n            setSigninEmail(\"\");\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    },[]);\n\n    const renderData = () => {\n        if(logged && Object.keys(userInfo).length !== 0){\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"row mt-5\">\n\n                        <div className=\"col-12 mt-5 d-flex justify-content-center\">\n                            <img src={moneda_dashboard} className=\"img-fluid\" style={{width: 400}} alt=\"MONEDA-SUNSHINE\"/>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center\">\n                            <h1>\n                                <NumberFormat\n                                    type=\"text\"\n                                    displayType=\"text\"\n                                    value={amount}\n                                    thousandSeparator={true}\n                                />\n                                <br/>SUNIS</h1>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center mt-5\">\n                            <button className=\"material\" data-toggle=\"modal\" data-target=\"#exampleModal\">Mercado de criptos<ExpandMoreIcon style={{ fontSize: 40 }} /> </button>\n                        </div>\n\n                        <div className=\"col-12\">\n                            <button className=\"btn material2 ml-3 mr-3\" data-toggle=\"modal\" data-target=\"#paymentModal\" data-backdrop='static' data-keyboard='false'>Comprar</button>\n                            <a className=\"btn material2 ml-3 mr-3\" href=\"Wallet\">Wallet</a>\n                        </div>\n\n                        <DollarMarktComponent />\n                        <PaymentComponent email={currentUser.email} userData={uid} allData={userInfo} />\n\n                    </div>\n\n                    <div className=\"row mt-5\">\n                    \n                        <PurchaseHistory uid={uid} />\n                    </div>\n\n                </div>\n\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <div className=\"container-fluid fondo-dashboard\">\n            {renderData()}\n        </div>\n    )\n\n};\n\nexport default Dashboard;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\contexts\\AuthContext.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\SignInModal.jsx",["214","215","216","217"],"import React, {useState} from 'react';\nimport \"firebase/auth\";\nimport swal from 'sweetalert';\nimport {useAuth} from \"../contexts/AuthContext\";\nimport {NavLink, useHistory} from 'react-router-dom';\nimport \"./css/styles.css\";\nimport GoogleButton from 'react-google-button'\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport firebase from 'firebase';\nimport {auth, db} from \"../config/firebase\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FilledInput from '@material-ui/core/FilledInput';\n\nconst SignInModal = () => {\n\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [pass, setPass] = useState(\"\");\n    const {login, currentUser, logout} = useAuth();\n    const [verifiedCaptcha, setVerifiedCaptcha] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n\n    const searchDataInFirestore = async id => {\n        let result = null;\n        await db.collection('credentials').doc(id).get().then(doc => {\n            result = doc.exists ? \"exists\" : \"not-exists\";\n        }).catch(error => {\n            result = \"error\";\n            console.log(\"ERROR AL BUSCAR EL UID\");\n        });\n        return result;\n    }\n\n    const saveDataInFirestore = (uid, data = {}) => {\n        if (Object.keys(data).length > 0) {\n            /*============GUARDAR DATOS EN FIRESTORE CON GOOGLE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: data.city.replace(/<[^>]+>/g, ''),\n                doc: \"Pending\".replace(/<[^>]+>/g, ''),\n                email: data.email.replace(/<[^>]+>/g, ''),\n                name: data.name.replace(/<[^>]+>/g, ''),\n                phone: data.phone === null ? \"Pending\".replace(/<[^>]+>/g, '') : data.phone.replace(/<[^>]+>/g, ''),\n                authType: data.authType.replace(/<[^>]+>/g, ''),\n                birthday: data.birthday.replace(/<[^>]+>/g, ''),\n                country: data.country.replace(/<[^>]+>/g, ''),\n                state: data.state.replace(/<[^>]+>/g, ''),\n                address: data.address.replace(/<[^>]+>/g, ''),\n                suns: 0,\n                countryComplete: data.countryComplete.replace(/<[^>]+>/g, ''),\n                profileStatus: data.profileStatus,\n                addressToken: \"\",\n                privateKey: \"\",\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n            }).then(docRef => {\n                history.push(\"/\");\n                window.location.reload();\n            }).catch((error) => {\n                console.log(error);\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        }\n    }\n\n    const signUpWithGoogle = () => {\n\n        let provider = new firebase.auth.GoogleAuthProvider();\n        provider.addScope('https://www.googleapis.com/auth/userinfo.profile');\n        auth.languageCode = 'es';\n        auth.signInWithPopup(provider).then(async (result) => {\n            console.log(result);\n            let user = result.user;\n            console.log(user.uid);\n            if (user.emailVerified) {\n\n                let userStatus = await searchDataInFirestore(user.uid);\n                if (userStatus === \"exists\") {\n                    history.push(\"/\");\n                    window.location.reload();\n                } else if (userStatus === \"not-exists\") {\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\"\n                    });\n                } else {\n                    swal({\n                        title: \"Ocurrió un error\",\n                        text: \"Ocurrió un error inesperado, inténtalo de nuevo más tarde\",\n                        icon: \"error\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                user.sendEmailVerification().then(r => {\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\"\n                    });\n                }, (error) => {\n                    console.log(error.code, error.message);\n                });\n                auth.signOut();\n            }\n        }).catch((error) => {\n            auth.signOut();\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            console.log(errorCode, errorMessage);\n\n            switch (errorCode) {\n                case \"auth/network-request-failed\":\n                    swal({\n                        title: \"Error de red\",\n                        text: \"Un error de red (como tiempo de espera, conexión interrumpida o host inalcanzable) ocurrió\",\n                        icon: \"error\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n            }\n        })\n\n    }\n\n    const sendReCAPTCHAValue = async (value) => {\n        const response = await axios.post(\"https://sunshine-ico.uc.r.appspot.com/api/recaptcha\", {\n            captchaValue: value\n        });\n\n        if (response.data.status === \"success\") {\n            setVerifiedCaptcha(true);\n        }\n\n    }\n\n    const signIn = async (e) => {\n        e.preventDefault();\n\n        try {\n            await setLoading(true);\n            await login(email, pass).then(r => {\n\n                if (r.user.emailVerified) {\n                    if (verifiedCaptcha) {\n                        setTimeout(() => {\n                            history.push(\"/\");\n                            window.location.reload();\n                        }, 2000);\n                    } else {\n                        let error = new Error(\"captcha_not_verified\");\n                        error.code = \"captcha_not_verified\";\n                        throw error;\n                    }\n\n                } else {\n                    logout();\n                    let error = new Error(\"email_not_verified\");\n                    error.code = \"email_not_verified\";\n                    throw error;\n                }\n            });\n        } catch (error) {\n            setLoading(false);\n            let errorCode = error.code;\n            logout();\n            switch (errorCode) {\n                case \"auth/user-not-found\":\n                    swal(\"Usuario no encontrado\", \"La cuenta de correo proporcionada no está registrada\", \"warning\");\n                    break;\n\n                case \"auth/wrong-password\":\n                    swal(\"Datos incorrectos\", \"Contraseña incorrecta\", \"warning\");\n                    break;\n\n                case \"auth/invalid-email\":\n                    swal(\"Datos incorrectos\", \"Solo puedes ingresar una cuenta de correo válida\", \"warning\");\n                    break;\n\n                case \"email_not_verified\":\n                    swal(\"Correo no verificado\", \"Revisa tu bandeja de entrada de tu correo y verifica tu cuenta\", \"warning\");\n                    break;\n\n                case \"auth/too-many-requests\":\n                    swal(\"Cuenta desactivada\", \"El acceso a esta cuenta ha sido desactivado temporalmente debido a los intentos de inicio de sesión fallidos, puedes recuperarla reestableciendo tu contraseña o intentarlo más tarde\", \"warning\");\n                    break;\n\n                case \"captcha_not_verified\":\n                    swal(\"Verifica el CAPTCHA\", \"Verifica el CAPTCHA de nuevo para poder continuar\", \"warning\");\n                    break;\n\n                default:\n                    let errorMessage = error.message;\n                    console.log(errorCode, errorMessage);\n            }\n        }\n\n        //setLoading(false);\n    }\n\n    const [values, setValues] = useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n\n    const handleClickShowPassword = () => {\n        setValues({...values, showPassword: !values.showPassword});\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const openForgetPass = async () => {\n        await document.getElementById(\"closeSignInModal\").click();\n    }\n\n    return (\n\n        <div className=\"modal fade\" id=\"signInModal\" data-backdrop=\"static\"\n             data-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\"\n             aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-xl modal-dialog-centered pl-xl-5 pr-xl-5 \">\n                <div className=\"modal-content registrobody   pl-xl-5 pr-xl-5 \">\n\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title col-12 text-light\" id=\"staticBackdropLabel\">Tu cuenta</h5>\n                        <button type=\"button\" id=\"closeSignInModal\" className=\"close\" data-dismiss=\"modal\"\n                                aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n                    <div className=\"modal-body col-12 pl-xl-5 pr-xl-5\">\n\n                        <div className=\"form-group col-12 d-flex justify-content-center\">\n                            <GoogleButton\n                                label='Iniciar sesión con Google'\n                                onClick={signUpWithGoogle}\n                                style={{width: 500, borderRadius: 3}}\n                            />\n                        </div>\n\n                        <hr/>\n\n                        <form className=\"form\" onSubmit={signIn}>\n                            <div className=\"container mt-5 pl-xl-5 pr-xl-5\">\n                                <div className=\"row pl-xl-5 pr-xl-5\">\n\n                                    <div\n                                        className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"email\"\n                                                   name=\"email\"\n                                                   value={email}\n                                                   label=\"Correo electrónico\"\n                                                   type=\"text\"\n                                                   onChange={e => setEmail(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Contraseña *</InputLabel>\n                                            <FilledInput\n                                                id=\"signin-password\"\n                                                type={values.showPassword ? 'text' : 'password'}\n                                                value={pass}\n                                                onChange={e => setPass(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={handleClickShowPassword}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div\n                                        className=\"input-group col-12 d-flex justify-content-center pl-xl-5 pr-xl-5 mt-3\">\n                                        <ReCAPTCHA sitekey=\"6LceM4oaAAAAAJhirPQbyXB2KERNzwHUyoAspql-\"\n                                                   onChange={sendReCAPTCHAValue}/>\n                                    </div>\n\n                                    <div className=\"form-group col-12 mt-4 mb-5\">\n                                        <button type=\"submit\"\n                                                className=\"btn btn-registro\"\n                                                id=\"signInButton\"\n                                                disabled={loading}>\n                                            {loading ? (\n                                                <div className=\"spinner-border text-dark\" role=\"status\">\n                                                    <span className=\"sr-only\">Entrando...</span>\n                                                </div>\n                                            ) : \"ENTRAR\"}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n\n                        <div className=\"container pl-xl-5 pr-xl-5\">\n                            <div className=\"row pl-xl-5 pr-xl-5\">\n                                <div className=\"col-12 mb-5\">\n\n                                    <a style={{color: \"white\"}} href=\"#\" onClick={openForgetPass} data-toggle=\"modal\"\n                                       data-target=\"#recoveryModal\">\n                                        <h6>\n                                            ¿Olvidaste la contraseña?\n                                        </h6>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"modal-footer col-12 btn-footer\"></div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default SignInModal;",["218","219"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\DollarMarktComponent.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\PaymentForm.jsx",["220"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport CREDIT from './../../../images/credit_card.png'\nimport OXXO from './../../../images/store.png';\nimport Link from '@material-ui/core/Link';\n\nexport default function PaymentForm({handleNext}) {\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Método de pago\n            </Typography>\n\n            <Grid container spacing={5} className=\"mt-3\">\n\n                <Grid item xs={12} md={12}>\n\n                    <Link onClick={() => handleNext(false, \"card\")} style={{cursor: \"pointer\", textDecoration: \"none\"}}>\n                        <Paper elevation={5}>\n                            <img src={CREDIT} className=\"img-fluid\" width=\"10%\" alt=\"\"/>\n                            <Typography variant=\"h6\">Tarjeta crédito / débito</Typography>\n                        </Paper>\n                    </Link>\n\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                    <Link onClick={() => handleNext(false, \"oxxo\")} style={{cursor: \"pointer\", textDecoration: \"none\"}}>\n                        <Paper elevation={5}>\n                            <img src={OXXO} className=\"img-fluid\" width=\"10%\" alt=\"\"/>\n                            <Typography variant=\"h6\">Pago en oxxo</Typography>\n                        </Paper>\n                    </Link>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PurchaseHistory.jsx",["221"],"import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {db} from \"../config/firebase\";\nimport NumberFormat from \"react-number-format\";\n\nconst createData = (id, tokens, price, datetime, cardDetails) => {\n    return {id, tokens, price, datetime, cardDetails};\n}\n\nconst descendingComparator = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nconst getComparator = (order, orderBy) => {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nconst stableSort = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {id: 'id', numeric: false, disablePadding: true, label: 'ID'},\n    {id: 'tokens', numeric: true, disablePadding: false, label: 'Tokens'},\n    {id: 'price', numeric: true, disablePadding: false, label: 'Precio (USD)'},\n    {id: 'datetime', numeric: true, disablePadding: false, label: 'Fecha'},\n    {id: 'cardDetails', numeric: true, disablePadding: false, label: 'Forma de pago'},\n];\n\nconst EnhancedTableHead = (props) => {\n    const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{'aria-label': 'select all desserts'}}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const {numSelected} = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} {numSelected === 1 ? \"seleccionado\" : \"seleccionados\"}\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    Historial de compra\n                </Typography>\n            )}\n\n        </Toolbar>\n    );\n}\n\n\nexport default function PurchaseHistory({uid}) {\n    const classes = useStyles();\n    const [order, setOrder] = useState('desc');\n    const [orderBy, setOrderBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rows, setRows] = useState([]);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    useEffect(() => {\n        getData(uid);\n    }, []);\n\n    const timeConverter = (UNIX_timestamp) => {\n        let a = new Date(UNIX_timestamp * 1000);\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let year = a.getFullYear();\n        let month = months[a.getMonth()];\n        let date = a.getDate();\n        let hour = a.getHours();\n        let min = a.getMinutes();\n        let sec = a.getSeconds();\n        let time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n        return time;\n    }\n\n    const getData = (id) => {\n        let docRef = db.collection('credentials').doc(id).collection('transactions');\n        docRef\n            .orderBy(\"dateField\", 'desc')\n            .onSnapshot((querySnapshot) => {\n                let elements = [];\n                querySnapshot.forEach((doc) => {\n                    try {\n                        let id = null;\n                        let tokens = null;\n                        let price = null;\n                        let date = null;\n                        let paymentMethod = null;\n                        if (doc.data().payment_method_types[0] === \"card\") {\n                            if (doc.data().currency === \"usd\") {\n                                price = \"$\" + (doc.data().amount / 100) || \"PENDING\";\n                            } else if (doc.data().currency === \"mxn\") {\n                                price = \"$\" + doc.data().final_amount || \"PENDING\";\n                            }\n                            id = doc.data().charges.data[0].id || \"PENDING\";\n                            tokens = doc.data().tokens_number || \"PENDING\";\n                            date = timeConverter(doc.data().created) || \"PENDING\";\n                            paymentMethod = doc.data().charges.data[0].payment_method_details.card.network + \" \" + doc.data().charges.data[0].payment_method_details.type + \" \" + \"*\".repeat(12) + doc.data().charges.data[0].payment_method_details.card.last4 || \"PENDING\";\n                        } else if (doc.data().payment_method_types[0] === \"oxxo\") {\n                            id = doc.data().charges.data[0].id || \"PENDING\";\n                            tokens = doc.data().tokens_number || \"PENDING\";\n                            price = \"$\" + doc.data().final_amount || \"PENDING\";\n                            date = timeConverter(doc.data().created) || \"PENDING\";\n                            paymentMethod = doc.data().payment_method_types[0] || \"PENDING\";\n                        }\n                        elements.push(createData(id, tokens, price, date, paymentMethod));\n                    } catch (e) {\n                        console.log(e.code);\n                    }\n                });\n                setRows(elements);\n            })\n    }\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length}/>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size='medium'\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.id);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.id)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.id}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{'aria-labelledby': labelId}}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.tokens}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <NumberFormat\n                                                    type=\"text\"\n                                                    displayType=\"text\"\n                                                    value={row.price}\n                                                    thousandSeparator={true}\n                                                    prefix='$'\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.datetime}</TableCell>\n                                            <TableCell align=\"right\">{row.cardDetails}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{height: 53 * emptyRows}}>\n                                    <TableCell colSpan={6}/>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'dark'\n            ? {\n                color: theme.palette.success.main,\n                backgroundColor: lighten(theme.palette.success.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.success.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\i18n.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Checkout.jsx",["222","223","224","225","226","227","228","229"],"import React, {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport './css/style.css';\nimport TokenAmount from \"./TokenAmount\";\nimport DONE from './../../../images/done.png';\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\nconst steps = ['Token', 'Método', 'Datos', 'Compra'];\n\nexport default function Checkout({uid, email, allData}) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const [currency, setCurrency] = useState(null);\n    const [usdToMxn, setUsdToMxn] = useState(0);\n    const [mxnToUsd, setMxnToUsd] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [stateLocation, setStateLocation] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [paymentID, setPaymentID] = useState(\"\");\n    const [paymentDone, setPaymentDone] = useState(false);\n    const [currencyType, setCurrencyType] = useState('USD');\n    const [paymentMethod, setPaymentMethod] = useState('');\n    //SI TU EDITOR DE TEXTO TE INDICA QUE DICHOS ESTADOS NO ESTAN SIENDO UTILIZADOS REVISA LAS 2 FUNCIONES DE ABAJO\n\n    useEffect(() => {\n        currencyConversor(\"USD\", \"MXN\");\n        currencyConversor(\"MXN\", \"USD\");\n        setName(allData.name);\n        setLastname(allData.lastname);\n        setAddress(allData.address);\n        setCity(allData.city);\n        setStateLocation(allData.state);\n        setCountry(allData.country);\n    }, []);\n\n    const currencyConversor = async (from, to) => {\n        try {\n            const result = await axios.get(`https://free.currconv.com/api/v7/convert?q=${from}_${to}&compact=ultra&apiKey=8a57011799b9d69fa40a`);\n            if (from === \"USD\" && to === \"MXN\") {\n                setUsdToMxn(result.data[`${from}_${to}`]);\n            } else if (from === \"MXN\" && to === \"USD\") {\n                setMxnToUsd(result.data[`${from}_${to}`]);\n            }\n        } catch (e) {\n            console.log(\"NO AGARRA LA API DE INTERCAMBIO DE MONEDA = \", e);\n        }\n    }\n\n    const setStates = (state, value) => {\n        eval(state)(value);\n    }\n\n    const getStates = (state) => {\n        return eval(state);\n    }\n\n    const getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <TokenAmount currency={currency} setCurrency={setCurrency} setStates={setStates}\n                                    getStates={getStates}/>;\n            case 1:\n                return <PaymentForm handleNext={handleNext}/>;\n            case 2:\n                return <AddressForm getStates={getStates}/>;\n            case 3:\n                return <Review getStates={getStates} uid={uid} handleNext={handleNext} email={email}/>;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const handleNext = (payment = false, paymentOption = \"\") => {\n        switch (activeStep) {\n            case 0:\n\n                if (allData.profileStatus === 4) {\n                    if (currencyType === \"USD\") {\n                        if (parseFloat(currency) >= 1) {\n                            if (parseFloat(currency) <= 999999) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad muy grande\", \"El monto no debe ser mayor a $999,999.99\", \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    } else if (currencyType === \"MX\") {\n                        if (parseFloat(currency) >= usdToMxn.toFixed(2)) {\n                            if (parseFloat(currency) <= 999999) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad muy grande\", \"El monto no debe ser mayor a $999,999.99\", \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", `Debes pagar la mínima cantidad de $${usdToMxn.toFixed(2)} MXN`, \"warning\");\n                        }\n                    } else if (currencyType === \"SUN\") {\n                        if (parseFloat(currency) >= 1) {\n                            setActiveStep(activeStep + 1);\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    }\n                } else {\n\n                    if (currencyType === \"USD\") {\n                        if (parseFloat(currency) >= 1) {\n                            if (parseFloat(currency) <= 1000) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad limitada\", \"Tu límite es de $1000 USD, si deseas incrementar tu límite de depósito debes ir a tu perfíl y verificar tu cuenta\", \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    } else if (currencyType === \"MX\") {\n                        console.log(typeof currency);\n                        if (parseFloat(currency) >= usdToMxn.toFixed(2)) {\n                            if (parseFloat(currency) <= usdToMxn.toFixed(2) * 1000) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad limitada\", `Tu límite es de $${usdToMxn.toFixed(2) * 1000} MXN, si deseas incrementar tu límite de depósito debes ir a tu perfíl y verificar tu cuenta`, \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", `Debes pagar la mínima cantidad de $${usdToMxn.toFixed(2)} MXN`, \"warning\");\n                        }\n                    } else if (currencyType === \"SUN\") {\n                        if (parseFloat(currency) >= 1) {\n                            setActiveStep(activeStep + 1);\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    }\n\n                }\n\n                break;\n            case 1:\n                if (paymentOption === \"card\") {\n                    setPaymentMethod(paymentOption);\n                    setActiveStep(activeStep + 1);\n                } else if (paymentOption === \"oxxo\") {\n                    if (currencyType === \"USD\") {\n                        swal(\"Pago con dolar inválido\", \"No puedes pagar en oxxo con dolar, tienes que cambiar la divisa a pesos mexicanos\", \"warning\");\n                    } else {\n                        setPaymentMethod(paymentOption);\n                        setActiveStep(activeStep + 1);\n                    }\n                }\n                break;\n            case 2:\n                if (name !== \"\" && lastname !== \"\" && address !== \"\" && city !== \"\" && stateLocation !== \"\" && country !== \"\") {\n                    setActiveStep(activeStep + 1);\n                }\n                break;\n            case 3:\n                if (payment) {\n                    setActiveStep(activeStep + 1);\n                }\n                break;\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    const buyAgain = () => {\n        setActiveStep(0);\n        setCurrencyType('USD');\n        setPaymentMethod('');\n        setCurrency(null);\n        setLoading(false);\n        setPaymentID(\"\");\n        setPaymentDone(false);\n    }\n\n    return (\n        <div className=\"mt-0\">\n            <React.Fragment>\n                <CssBaseline/>\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        <Stepper activeStep={activeStep} className={classes.stepper}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                        <React.Fragment>\n                            {activeStep === steps.length ? (\n                                <React.Fragment>\n                                    <Typography variant=\"h5\" gutterBottom>\n                                        {paymentMethod === \"card\" ? \"¡Gracias por tu compra!\" : \"¡Referencia de oxxo generada!\"}\n                                    </Typography>\n                                    <img src={DONE} className=\"img-fluid mb-3\" width=\"13%\" alt=\"PAGO REALIZADO\"/>\n                                    <Typography variant=\"subtitle1\">\n                                        {paymentMethod === \"card\" ? \"¡Hemos enviado tu comprobante de pago al correo electrónico que registraste!\" : \"¡Tienes 24 hrs para realizar el pago en oxxo!\"}\n                                    </Typography>\n                                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={buyAgain}>\n                                        Comprar de nuevo\n                                    </Button>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    {getStepContent(activeStep)}\n                                    <div className={classes.buttons}>\n                                        {activeStep !== 0 && (\n                                            <Button onClick={handleBack} className={classes.button}>\n                                                Atrás\n                                            </Button>\n                                        )}\n                                        {activeStep === steps.length - 1  ? null : (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleNext}\n                                                className={classes.button}\n                                            >\n                                                Siguiente\n                                            </Button>\n                                        )\n                                        }\n                                    </div>\n                                </React.Fragment>\n                            )}\n                        </React.Fragment>\n                    </Paper>\n                </main>\n            </React.Fragment>\n        </div>\n\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        padding: theme.spacing(1),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(0),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n}));","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\firebase.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Banner.jsx",["230","231","232","233","234","235"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\TokenAmount.jsx",["236","237","238","239","240","241"],"import React, {useState, useEffect} from 'react';\nimport finalCoin from \"../../../images/monedafinal.png\";\nimport NumberFormat from 'react-number-format';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n    {\n        value: \"USD\",\n        label: \"USD\",\n    },\n    {\n        value: \"MX\",\n        label: \"MX\",\n    },\n    {\n        value: \"SUN\",\n        label: \"SUN\",\n    },\n];\n\nconst TokenAmount = ({currency, setCurrency, setStates, getStates}) => {\n\n    const conversor = (type, amount = \"USD\") => {\n        switch (type) {\n            case \"USD\":\n                return `${amount || 0} USD - ${amount * 1 || 0} SUNI - ${(amount * getStates(\"usdToMxn\")).toFixed(2) || 0} MXN`;\n                break;\n\n            case \"SUN\":\n                return `${amount * 1 || 0} USD - ${amount || 0} SUNI - ${(amount * getStates(\"usdToMxn\")).toFixed(2) || 0} MXN`;\n                break;\n\n            case \"MX\":\n                return `${(amount * getStates(\"mxnToUsd\")) || 0} USD - ${(amount * getStates(\"mxnToUsd\")) || 0} SUN - ${amount || 0} MXN`;\n                break;\n            default:\n                return `${amount || 0} USD - ${amount * 1 || 0} SUNI - ${(amount * getStates(\"usdToMxn\").toFixed(2))} MXN`;\n        }\n    }\n\n    const typeCurrency = (val) => {\n        setCurrency(val);\n        let dollar = parseFloat(getStates(\"usdToMxn\").toFixed(2));\n        val = parseFloat(val);\n        if ( (val >= 1 && val<=999999 && getStates(\"currencyType\") === \"USD\") || (val >= dollar && val<=999999 && getStates(\"currencyType\") === \"MX\") || (val >= 1 && val<=999999 && getStates(\"currencyType\") === \"SUN\")) {\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.remove(\"is-invalid\");\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.add(\"is-valid\");\n        } else {\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.remove(\"is-valid\");\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.add(\"is-invalid\");\n        }\n    }\n\n    const handleChange = (event) => {\n        setStates(\"setCurrencyType\", event.target.value);\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <img src={finalCoin} style={{width: 150}} className=\"img-fluid\" alt=\"SUNSHINE COIN IMAGE\"/>\n                        <h5 className=\"currency-value-title font-weight-bold mt-3\">{conversor(getStates(\"currencyType\"), currency)}</h5>\n                    </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                    <div className=\"col-12 col-md-3 mb-3 mb-md-0\">\n                        <TextField\n                            id=\"outlined-select-currency-native\"\n                            select\n                            value={getStates(\"currencyType\")}\n                            onChange={handleChange}\n                            SelectProps={{\n                                native: true,\n                            }}\n                            fullWidth\n                            helperText=\"Selecciona tu divisa\"\n                        >\n                            {currencies.map((option) => (\n                                <option key={option.value} value={option.value}>\n                                    {option.label}\n                                </option>\n                            ))}\n                        </TextField>\n                    </div>\n\n                    <div className=\"col-12 col-md-9\">\n                        <NumberFormat\n                            className=\"form-control\"\n                            id=\"inlineFormInputGroupCurrency\"\n                            name=\"input-name\"\n                            placeholder=\"Cantidad en dolares\"\n                            value={currency}\n                            thousandSeparator={getStates(\"currencyType\") !== \"SUN\"}\n                            onValueChange={(values) => typeCurrency(values.value)}\n                            prefix={getStates(\"currencyType\") === \"SUN\" ? '' : '$'}\n                        />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default TokenAmount;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\cuentaregresiva.js",["242","243","244","245"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\PersonalData.jsx",["246","247","248","249"],"import 'date-fns';\nimport React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button, TextField, Avatar} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport SaveIcon from '@material-ui/icons/Save';\nimport swal from \"sweetalert\";\nimport {db, useStorage} from \"../../config/firebase\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PhoneInput from 'react-phone-input-2';\nimport UploadImage from \"./UploadImage\";\nimport 'react-phone-input-2/lib/material.css'\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nconst PersonalData = ({getStates, setStates, uid, profilePictureStatus}) => {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const masterCondition = getStates(\"profileStatus\") === 0 || getStates(\"profileStatus\") === 6 || getStates(\"profileStatus\") === 7;\n\n    const getAge = (birthDateString) => {\n        let today = new Date();\n        let birthDate = new Date(birthDateString);\n        let age = today.getFullYear() - birthDate.getFullYear();\n        let m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        return age;\n    }\n\n    const handleDateChange = (date) => {\n        setStates(\"setBirthday\", date);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (masterCondition) {\n                if (getStates(\"name\") !== \"\" && getStates(\"lastname\") !== \"\" && getStates(\"birthday\") !== \"\" && getStates(\"country\") !== \"\" && getStates(\"stateLocation\") !== \"\" && getStates(\"city\") !== \"\" && getStates(\"phone\") !== \"\" && getStates(\"address\") !== \"\") {\n                    if (getAge(getStates(\"birthday\")) >= 18) {\n                        swal({\n                            title: \"¿Estas seguro de subir la información?\",\n                            text: \"Una vez enviada la información no se podrá modificar\",\n                            icon: \"warning\",\n                            buttons: true,\n                            dangerMode: true,\n                        })\n                            .then((willConfirm) => {\n                                if (willConfirm) {\n                                    setOpen(true);\n                                    db.collection('credentials').doc(uid).update({\n                                        birthday: getStates(\"birthday\"),\n                                        city: getStates(\"city\"),\n                                        country: getStates(\"country\"),\n                                        lastname: getStates(\"lastname\"),\n                                        name: getStates(\"name\"),\n                                        phone: getStates(\"phone\"),\n                                        state: getStates(\"stateLocation\"),\n                                        countryComplete: getStates(\"countryCompleteName\"),\n                                        address: getStates(\"address\"),\n                                        profileStatus: 1,\n                                    }).then(() => {\n                                        swal(\"Información actualizada\", \"¡La información de tu perfil ha sido actualizada con éxito!\", \"success\");\n                                        setOpen(false);\n                                    });\n                                }\n                            });\n\n                    } else {\n                        swal(\"Debes ser mayor de edad\", \"Para poder continuar con la verificación de tus datos debes contar con la mayoria de edad\", \"warning\");\n                    }\n\n                } else {\n                    swal(\"Información incompleta\", \"Llena todos los campos correspondientes para poder continuar\", \"warning\");\n                }\n\n            }\n\n        } catch (e) {\n            console.log(\"Profile.jsx - handleSubmit() -> \" + e);\n        }\n    }\n\n    return (\n        <div>\n\n            <Typography className={classes.title} variant=\"h4\" component=\"h4\">\n                Datos personales\n            </Typography>\n            <form className={classes.root}\n                  id={(masterCondition) ? \"profileform\" : \"\"}\n                  onSubmit={(masterCondition) ? handleSubmit : () => false}>\n                <Typography className={classes.title} variant=\"subtitle2\" component=\"h2\"\n                            color=\"textSecondary\">\n                    Verifica que tus datos y foto coincidan con tu identificación oficial\n                </Typography>\n                <div className=\"row mt-3\">\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <TextField variant=\"outlined\" required\n                                   disabled={!(masterCondition)}\n                                   fullWidth id=\"outlined-basic\" label=\"Nombre(s)\"\n                                   style={{alignContent: \"center\"}} value={getStates(\"name\")}\n                                   onChange={(masterCondition) ? e => setStates(\"setName\", e.target.value) : () => false}/>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <TextField variant=\"outlined\" required\n                                   disabled={!(masterCondition)}\n                                   fullWidth id=\"outlined-basic\" label=\"Apellido(s)\" value={getStates(\"lastname\")}\n                                   onChange={(masterCondition) ? e => setStates(\"setLastname\", e.target.value) : () => false}/>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                inputVariant=\"outlined\"\n                                required\n                                id=\"date-picker-dialog\"\n                                disabled={!(masterCondition)}\n                                fullWidth\n                                label=\"Fecha nacimiento\"\n                                format=\"dd/MM/yyyy\"\n                                value={getStates(\"birthday\") ? getStates(\"birthday\") : null}\n                                onChange={(masterCondition) ? handleDateChange : () => false}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n                            {\n                                (masterCondition) ? (\n                                    <>\n                                        <InputLabel id=\"demo-simple-select-label\">País</InputLabel>\n                                        <Select\n                                            required\n                                            disabled={!(masterCondition)}\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={(masterCondition) ? getStates(\"country\") : false}\n                                            onChange={\n                                                (masterCondition) ?\n                                                    e => {\n                                                        setStates(\"setCountry\", e.target.value)\n                                                        setStates(\"setStateLocation\", \"\")\n                                                        setStates(\"setCity\", \"\")\n                                                        setStates(\"getStatesAPI\", e.currentTarget.id)\n                                                        setStates(\"setCountryCompleteName\", e.currentTarget.id)\n                                                    } : () => false}>\n                                            {\n                                                getStates(\"countriesAPI\").map((value, index) => (\n                                                    <MenuItem key={index} id={value.country_name}\n                                                              value={value.country_short_name}>{value.country_name}</MenuItem>\n                                                ))\n                                            }\n                                        </Select>\n                                    </>\n                                ) : (\n                                    <TextField variant=\"outlined\" required\n                                               disabled={!(masterCondition)}\n                                               fullWidth id=\"outlined-basic\" label=\"País\" value={getStates(\"country\")}\n                                    />\n                                )\n                            }\n\n                        </FormControl>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n\n                            {\n                                (masterCondition) ? (\n                                    <>\n                                        <InputLabel id=\"demo-simple-select-label\">Estado</InputLabel>\n                                        <Select\n                                            required\n                                            disabled={!(masterCondition)}\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select-state\"\n                                            value={(masterCondition) ? getStates(\"stateLocation\") : false}\n                                            onChange={\n                                                (masterCondition) ?\n                                                    e => {\n                                                        setStates(\"setStateLocation\", e.target.value)\n                                                        setStates(\"setCity\", \"\")\n                                                    } : () => false}>\n                                            {\n                                                getStates(\"statesAPI\").map((value, index) => (\n                                                    <MenuItem key={index}\n                                                              value={value.state_name}>{value.state_name}</MenuItem>\n                                                ))\n                                            }\n                                        </Select>\n                                    </>\n                                ) : (\n                                    <TextField variant=\"outlined\" required\n                                               disabled={!(masterCondition)}\n                                               fullWidth id=\"outlined-basic\" label=\"Estado\"\n                                               value={getStates(\"stateLocation\")}\n                                    />\n                                )\n                            }\n\n                        </FormControl>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <TextField variant=\"outlined\" required\n                                   disabled={!(masterCondition)}\n                                   fullWidth id=\"outlined-basic\" label=\"Ciudad\" value={getStates(\"city\")}\n                                   onChange={(masterCondition) ? e => setStates(\"setCity\", e.target.value) : () => false}/>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        {!(masterCondition) ?\n                            <TextField required variant=\"outlined\"\n                                       disabled={!(masterCondition)}\n                                       fullWidth id=\"outlined-basic\" label=\"Número telefonico\"\n                                       value={\"+\" + getStates(\"phone\")}\n                                       onChange={(masterCondition) ? e => setStates(\"setPhone\", e.target.value) : () => false}/> :\n                            <PhoneInput\n                                disabled={!(masterCondition)}\n                                country={'mx'}\n                                inputStyle={{height: 56, width: \"100%\"}}\n                                value={getStates(\"phone\")}\n                                onChange={(masterCondition) ? e => setStates(\"setPhone\", e) : () => false}\n                            />}\n\n                    </div>\n\n                    <div className=\"row mt-5 mb-5 px-5 mt-5\">\n                        <div className=\"col-12\">\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                disabled={!(masterCondition)}\n                                fullWidth\n                                id=\"standard-multiline-static\"\n                                label=\"Dirección\"\n                                multiline\n                                rows={4}\n                                value={getStates(\"address\")}\n                                onChange={(masterCondition) ? e => setStates(\"setAddress\", e.target.value) : () => false}\n                            />\n                        </div>\n                    </div>\n\n\n                </div>\n\n\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justify-content-center\">\n                        <Button\n                            disabled={!(masterCondition)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            className={classes.button}\n                            startIcon={<SaveIcon/>}\n                            type={(masterCondition) ? \"submit\" : \"button\"}\n                        >\n                            Enviar\n                        </Button>\n                    </div>\n                </div>\n            </form>\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        marginTop: 20,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    cardActions: {},\n    large: {\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: 10\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nexport default PersonalData;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PaymentComponent.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Ventajas.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\CheckConnection.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PasswordRecoveryModal.jsx",["250"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Newsletter.jsx",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":29,"column":12,"nodeType":"257","messageId":"258","endLine":29,"endColumn":17},{"ruleId":"259","severity":1,"message":"260","line":35,"column":8,"nodeType":"261","endLine":35,"endColumn":10,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":105,"column":102,"nodeType":"265","messageId":"266","endLine":105,"endColumn":104},{"ruleId":"267","severity":1,"message":"268","line":107,"column":45,"nodeType":"269","messageId":"270","endLine":139,"endColumn":46},{"ruleId":"271","severity":1,"message":"272","line":46,"column":13,"nodeType":"273","endLine":46,"endColumn":307},{"ruleId":"255","severity":1,"message":"274","line":3,"column":16,"nodeType":"257","messageId":"258","endLine":3,"endColumn":25},{"ruleId":"255","severity":1,"message":"275","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":19},{"ruleId":"255","severity":1,"message":"276","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":22},{"ruleId":"255","severity":1,"message":"277","line":29,"column":12,"nodeType":"257","messageId":"258","endLine":29,"endColumn":16},{"ruleId":"255","severity":1,"message":"278","line":29,"column":18,"nodeType":"257","messageId":"258","endLine":29,"endColumn":25},{"ruleId":"255","severity":1,"message":"279","line":30,"column":12,"nodeType":"257","messageId":"258","endLine":30,"endColumn":28},{"ruleId":"255","severity":1,"message":"280","line":30,"column":30,"nodeType":"257","messageId":"258","endLine":30,"endColumn":49},{"ruleId":"255","severity":1,"message":"281","line":32,"column":11,"nodeType":"257","messageId":"258","endLine":32,"endColumn":20},{"ruleId":"282","severity":1,"message":"283","line":46,"column":21,"nodeType":"284","messageId":"285","endLine":46,"endColumn":25},{"ruleId":"286","severity":1,"message":"287","line":217,"column":45,"nodeType":"273","endLine":217,"endColumn":145},{"ruleId":"288","severity":1,"message":"289","line":230,"column":85,"nodeType":"290","endLine":230,"endColumn":100},{"ruleId":"288","severity":1,"message":"289","line":235,"column":138,"nodeType":"290","endLine":235,"endColumn":153},{"ruleId":"251","replacedBy":"291"},{"ruleId":"253","replacedBy":"292"},{"ruleId":"255","severity":1,"message":"293","line":5,"column":26,"nodeType":"257","messageId":"258","endLine":5,"endColumn":35},{"ruleId":"255","severity":1,"message":"294","line":27,"column":20,"nodeType":"257","messageId":"258","endLine":27,"endColumn":29},{"ruleId":"267","severity":1,"message":"268","line":51,"column":9,"nodeType":"269","messageId":"270","endLine":60,"endColumn":10},{"ruleId":"295","severity":1,"message":"296","line":70,"column":29,"nodeType":"273","endLine":70,"endColumn":64},{"ruleId":"297","severity":1,"message":"298","line":84,"column":29,"nodeType":"273","endLine":84,"endColumn":159},{"ruleId":"297","severity":1,"message":"298","line":88,"column":29,"nodeType":"273","endLine":88,"endColumn":159},{"ruleId":"295","severity":1,"message":"296","line":119,"column":29,"nodeType":"273","endLine":119,"endColumn":64},{"ruleId":"297","severity":1,"message":"298","line":147,"column":29,"nodeType":"273","endLine":147,"endColumn":100},{"ruleId":"297","severity":1,"message":"298","line":153,"column":29,"nodeType":"273","endLine":153,"endColumn":100},{"ruleId":"297","severity":1,"message":"298","line":160,"column":29,"nodeType":"273","endLine":160,"endColumn":159},{"ruleId":"297","severity":1,"message":"298","line":164,"column":29,"nodeType":"273","endLine":164,"endColumn":159},{"ruleId":"251","replacedBy":"299"},{"ruleId":"253","replacedBy":"300"},{"ruleId":"255","severity":1,"message":"301","line":22,"column":12,"nodeType":"257","messageId":"258","endLine":22,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":92,"column":29,"nodeType":"269","messageId":"270","endLine":111,"endColumn":30},{"ruleId":"255","severity":1,"message":"302","line":235,"column":11,"nodeType":"257","messageId":"258","endLine":235,"endColumn":19},{"ruleId":"255","severity":1,"message":"303","line":22,"column":8,"nodeType":"257","messageId":"258","endLine":22,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":27,"column":42,"nodeType":"290","endLine":27,"endColumn":54},{"ruleId":"295","severity":1,"message":"296","line":32,"column":1,"nodeType":"273","endLine":32,"endColumn":57},{"ruleId":"255","severity":1,"message":"274","line":4,"column":16,"nodeType":"257","messageId":"258","endLine":4,"endColumn":25},{"ruleId":"255","severity":1,"message":"293","line":4,"column":27,"nodeType":"257","messageId":"258","endLine":4,"endColumn":36},{"ruleId":"255","severity":1,"message":"306","line":4,"column":38,"nodeType":"257","messageId":"258","endLine":4,"endColumn":46},{"ruleId":"255","severity":1,"message":"307","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":12},{"ruleId":"251","replacedBy":"308"},{"ruleId":"253","replacedBy":"309"},{"ruleId":"259","severity":1,"message":"310","line":24,"column":8,"nodeType":"261","endLine":24,"endColumn":10,"suggestions":"311"},{"ruleId":"259","severity":1,"message":"312","line":43,"column":8,"nodeType":"261","endLine":43,"endColumn":47,"suggestions":"313"},{"ruleId":"271","severity":1,"message":"272","line":11,"column":17,"nodeType":"273","endLine":13,"endColumn":41},{"ruleId":"251","replacedBy":"314"},{"ruleId":"253","replacedBy":"315"},{"ruleId":"255","severity":1,"message":"316","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":23},{"ruleId":"255","severity":1,"message":"317","line":14,"column":25,"nodeType":"257","messageId":"258","endLine":14,"endColumn":31},{"ruleId":"255","severity":1,"message":"318","line":15,"column":12,"nodeType":"257","messageId":"258","endLine":15,"endColumn":23},{"ruleId":"255","severity":1,"message":"319","line":19,"column":12,"nodeType":"257","messageId":"258","endLine":19,"endColumn":22},{"ruleId":"255","severity":1,"message":"320","line":19,"column":24,"nodeType":"257","messageId":"258","endLine":19,"endColumn":37},{"ruleId":"259","severity":1,"message":"321","line":52,"column":7,"nodeType":"261","endLine":52,"endColumn":9,"suggestions":"322"},{"ruleId":"255","severity":1,"message":"323","line":5,"column":9,"nodeType":"257","messageId":"258","endLine":5,"endColumn":16},{"ruleId":"255","severity":1,"message":"324","line":26,"column":19,"nodeType":"257","messageId":"258","endLine":26,"endColumn":30},{"ruleId":"267","severity":1,"message":"268","line":140,"column":13,"nodeType":"269","messageId":"270","endLine":149,"endColumn":14},{"ruleId":"297","severity":1,"message":"298","line":350,"column":37,"nodeType":"273","endLine":351,"endColumn":69},{"ruleId":"251","replacedBy":"325"},{"ruleId":"253","replacedBy":"326"},{"ruleId":"255","severity":1,"message":"306","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":24},{"ruleId":"259","severity":1,"message":"327","line":137,"column":8,"nodeType":"261","endLine":137,"endColumn":10,"suggestions":"328"},{"ruleId":"255","severity":1,"message":"329","line":26,"column":12,"nodeType":"257","messageId":"258","endLine":26,"endColumn":20},{"ruleId":"255","severity":1,"message":"301","line":33,"column":12,"nodeType":"257","messageId":"258","endLine":33,"endColumn":19},{"ruleId":"255","severity":1,"message":"330","line":34,"column":12,"nodeType":"257","messageId":"258","endLine":34,"endColumn":21},{"ruleId":"255","severity":1,"message":"331","line":35,"column":12,"nodeType":"257","messageId":"258","endLine":35,"endColumn":23},{"ruleId":"259","severity":1,"message":"332","line":49,"column":8,"nodeType":"261","endLine":49,"endColumn":10,"suggestions":"333"},{"ruleId":"282","severity":1,"message":"283","line":65,"column":9,"nodeType":"284","messageId":"285","endLine":65,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":69,"column":16,"nodeType":"284","messageId":"285","endLine":69,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":89,"column":9,"nodeType":"269","messageId":"270","endLine":177,"endColumn":10},{"ruleId":"255","severity":1,"message":"274","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"334","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":16},{"ruleId":"255","severity":1,"message":"335","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":12},{"ruleId":"295","severity":1,"message":"296","line":41,"column":21,"nodeType":"273","endLine":41,"endColumn":84},{"ruleId":"336","severity":1,"message":"337","line":49,"column":25,"nodeType":"273","endLine":50,"endColumn":67},{"ruleId":"295","severity":1,"message":"296","line":62,"column":17,"nodeType":"273","endLine":62,"endColumn":60},{"ruleId":"255","severity":1,"message":"306","line":1,"column":16,"nodeType":"257","messageId":"258","endLine":1,"endColumn":24},{"ruleId":"255","severity":1,"message":"293","line":1,"column":26,"nodeType":"257","messageId":"258","endLine":1,"endColumn":35},{"ruleId":"338","severity":1,"message":"339","line":27,"column":17,"nodeType":"340","messageId":"341","endLine":27,"endColumn":23},{"ruleId":"338","severity":1,"message":"339","line":31,"column":17,"nodeType":"340","messageId":"341","endLine":31,"endColumn":23},{"ruleId":"338","severity":1,"message":"339","line":35,"column":17,"nodeType":"340","messageId":"341","endLine":35,"endColumn":23},{"ruleId":"286","severity":1,"message":"287","line":63,"column":25,"nodeType":"273","endLine":63,"endColumn":116},{"ruleId":"255","severity":1,"message":"342","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":13},{"ruleId":"255","severity":1,"message":"274","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":25},{"ruleId":"255","severity":1,"message":"343","line":6,"column":7,"nodeType":"257","messageId":"258","endLine":6,"endColumn":8},{"ruleId":"344","severity":1,"message":"345","line":41,"column":1,"nodeType":"346","messageId":"347","endLine":42,"endColumn":2},{"ruleId":"255","severity":1,"message":"293","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":25},{"ruleId":"255","severity":1,"message":"348","line":4,"column":28,"nodeType":"257","messageId":"258","endLine":4,"endColumn":34},{"ruleId":"255","severity":1,"message":"349","line":10,"column":13,"nodeType":"257","messageId":"258","endLine":10,"endColumn":23},{"ruleId":"255","severity":1,"message":"350","line":16,"column":8,"nodeType":"257","messageId":"258","endLine":16,"endColumn":19},{"ruleId":"255","severity":1,"message":"293","line":1,"column":26,"nodeType":"257","messageId":"258","endLine":1,"endColumn":35},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],"no-unused-vars","'ready' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["353"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Component' is defined but never used.","'monedafinal' is defined but never used.","'EquipoSunshine' is defined but never used.","'team' is assigned a value but never used.","'setTeam' is assigned a value but never used.","'differencesItems' is assigned a value but never used.","'setDifferencesItems' is assigned a value but never used.","'fetchData' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["351"],["352"],"'useEffect' is defined but never used.","'setLogged' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["351"],["352"],"'loading' is assigned a value but never used.","'payments' is assigned a value but never used.","'Watsappicon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","'useState' is defined but never used.","'Roll' is defined but never used.",["351"],["352"],"React Hook useEffect has a missing dependency: 'profilePictureStatus'. Either include it or remove the dependency array. If 'setHideButton' needs the current value of 'profilePictureStatus', you can also switch to useReducer instead of useState and read 'profilePictureStatus' in the reducer.",["354"],"React Hook useCallback has a missing dependency: 'setStates'. Either include it or remove the dependency array. If 'setStates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],["351"],["352"],"'CheckConnection' is defined but never used.","'logout' is assigned a value but never used.","'signinEmail' is assigned a value but never used.","'cryptoData' is assigned a value but never used.","'setCryptoData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.uid', and 'history'. Either include them or remove the dependency array.",["356"],"'NavLink' is defined but never used.","'currentUser' is assigned a value but never used.",["351"],["352"],"React Hook useEffect has missing dependencies: 'getData' and 'uid'. Either include them or remove the dependency array.",["357"],"'mxnToUsd' is assigned a value but never used.","'paymentID' is assigned a value but never used.","'paymentDone' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allData.address', 'allData.city', 'allData.country', 'allData.lastname', 'allData.name', and 'allData.state'. Either include them or remove the dependency array. If 'setName' needs the current value of 'allData.name', you can also switch to useReducer instead of useState and read 'allData.name' in the reducer.",["358"],"'ReactDOM' is defined but never used.","'Fade' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'React' is defined but never used.","'d' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Avatar' is defined but never used.","'useStorage' is defined but never used.","'UploadImage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},"Update the dependencies array to be: [id]",{"range":"371","text":"372"},"Update the dependencies array to be: [profilePictureStatus]",{"range":"373","text":"374"},"Update the dependencies array to be: [imageSrc, croppedAreaPixels, rotation, setStates]",{"range":"375","text":"376"},"Update the dependencies array to be: [currentUser.email, currentUser.uid, history]",{"range":"377","text":"378"},"Update the dependencies array to be: [getData, uid]",{"range":"379","text":"380"},"Update the dependencies array to be: [allData.address, allData.city, allData.country, allData.lastname, allData.name, allData.state]",{"range":"381","text":"382"},[1348,1350],"[id]",[1051,1053],"[profilePictureStatus]",[1614,1653],"[imageSrc, croppedAreaPixels, rotation, setStates]",[1835,1837],"[currentUser.email, currentUser.uid, history]",[5140,5142],"[getData, uid]",[2104,2106],"[allData.address, allData.city, allData.country, allData.lastname, allData.name, allData.state]"]