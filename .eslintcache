[{"/home/snow/Documentos/ico-web-final/src/index.js":"1","/home/snow/Documentos/ico-web-final/src/App.js":"2","/home/snow/Documentos/ico-web-final/src/i18n.js":"3","/home/snow/Documentos/ico-web-final/src/apis/SunshineFinder.js":"4","/home/snow/Documentos/ico-web-final/src/apis/CoingeckoFinder.js":"5","/home/snow/Documentos/ico-web-final/src/apis/PlacesFinder.js":"6","/home/snow/Documentos/ico-web-final/src/apis/TronscanFinder.js":"7","/home/snow/Documentos/ico-web-final/src/components/dashboard/DollarMarktComponent.jsx":"8","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Checkout.jsx":"9","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/AddressForm.jsx":"10","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/PaymentForm.jsx":"11","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Review.jsx":"12","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/TokenAmount.jsx":"13","/home/snow/Documentos/ico-web-final/src/components/dashboard/PaymentComponent.jsx":"14","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Dashboard.jsx":"15","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/HeaderCards.jsx":"16","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/CryptoList.jsx":"17","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/TransactionsHistory.jsx":"18","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Wallet.jsx":"19","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Profile.jsx":"20","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/ExpansionComponent.jsx":"21","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/UploadImage.jsx":"22","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/PersonalData.jsx":"23","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/VerifiedProfile.jsx":"24","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Settings.jsx":"25","/home/snow/Documentos/ico-web-final/src/components/dashboard/settings/ChangePassword.jsx":"26","/home/snow/Documentos/ico-web-final/src/components/dashboard/PurchaseHistoryComponent.jsx":"27","/home/snow/Documentos/ico-web-final/src/context/AuthContext.jsx":"28","/home/snow/Documentos/ico-web-final/src/config/Particles-config.js":"29","/home/snow/Documentos/ico-web-final/src/routes/Recovery.jsx":"30","/home/snow/Documentos/ico-web-final/src/components/PasswordRecoveryModal.jsx":"31","/home/snow/Documentos/ico-web-final/src/components/SignUpModal.jsx":"32","/home/snow/Documentos/ico-web-final/src/components/SignInModal.jsx":"33","/home/snow/Documentos/ico-web-final/src/components/dashboard/js/canvasUtils.js":"34","/home/snow/Documentos/ico-web-final/src/components/dashboard/js/encrypt.js":"35","/home/snow/Documentos/ico-web-final/src/components/Video.jsx":"36","/home/snow/Documentos/ico-web-final/src/components/Countdown.jsx":"37","/home/snow/Documentos/ico-web-final/src/components/Soporte.jsx":"38","/home/snow/Documentos/ico-web-final/src/components/PreguntasFrecuentes.jsx":"39","/home/snow/Documentos/ico-web-final/src/components/Newsletter.jsx":"40","/home/snow/Documentos/ico-web-final/src/components/Ventajas.jsx":"41","/home/snow/Documentos/ico-web-final/src/components/MapaApp.jsx":"42","/home/snow/Documentos/ico-web-final/src/components/WhitepaperHome.jsx":"43","/home/snow/Documentos/ico-web-final/src/routes/Home.jsx":"44","/home/snow/Documentos/ico-web-final/src/components/Banner.jsx":"45","/home/snow/Documentos/ico-web-final/src/components/Footer.jsx":"46","/home/snow/Documentos/ico-web-final/src/components/Navigation.jsx":"47","/home/snow/Documentos/ico-web-final/src/components/ProyectosComponent.jsx":"48","/home/snow/Documentos/ico-web-final/src/routes/Proyectos.jsx":"49","/home/snow/Documentos/ico-web-final/src/config/firebase.js":"50","/home/snow/Documentos/ico-web-final/src/routes/Roaptomap.jsx":"51","/home/snow/Documentos/ico-web-final/src/components/Carousel.jsx":"52","/home/snow/Documentos/ico-web-final/src/routes/Pdf.jsx":"53","/home/snow/Documentos/ico-web-final/src/components/Loader.jsx":"54","/home/snow/Documentos/ico-web-final/src/components/ControlPanel.jsx":"55","/home/snow/Documentos/ico-web-final/src/routes/Acerca.jsx":"56","/home/snow/Documentos/ico-web-final/src/components/CardsWorkers.jsx":"57","/home/snow/Documentos/ico-web-final/src/js/mostrarmenu.js":"58","/home/snow/Documentos/ico-web-final/src/js/cuentaregresiva.js":"59"},{"size":296,"mtime":1626125393939,"results":"60","hashOfConfig":"61"},{"size":2104,"mtime":1624915988587,"results":"62","hashOfConfig":"61"},{"size":1645,"mtime":1621626270725,"results":"63","hashOfConfig":"61"},{"size":139,"mtime":1626796331916,"results":"64","hashOfConfig":"61"},{"size":104,"mtime":1624906925521,"results":"65","hashOfConfig":"61"},{"size":113,"mtime":1624907114457,"results":"66","hashOfConfig":"61"},{"size":107,"mtime":1624907189001,"results":"67","hashOfConfig":"61"},{"size":2939,"mtime":1626901514228,"results":"68","hashOfConfig":"61"},{"size":14256,"mtime":1626972522087,"results":"69","hashOfConfig":"61"},{"size":3229,"mtime":1621626640957,"results":"70","hashOfConfig":"61"},{"size":2098,"mtime":1626973106435,"results":"71","hashOfConfig":"61"},{"size":16254,"mtime":1626973378523,"results":"72","hashOfConfig":"61"},{"size":4857,"mtime":1626973683955,"results":"73","hashOfConfig":"61"},{"size":2300,"mtime":1626199348323,"results":"74","hashOfConfig":"61"},{"size":4081,"mtime":1624909442229,"results":"75","hashOfConfig":"61"},{"size":2315,"mtime":1624565577152,"results":"76","hashOfConfig":"61"},{"size":3435,"mtime":1626971775723,"results":"77","hashOfConfig":"61"},{"size":9982,"mtime":1626971376539,"results":"78","hashOfConfig":"61"},{"size":22351,"mtime":1626971150671,"results":"79","hashOfConfig":"61"},{"size":18095,"mtime":1626974835663,"results":"80","hashOfConfig":"61"},{"size":2329,"mtime":1621626640957,"results":"81","hashOfConfig":"61"},{"size":7933,"mtime":1626975079703,"results":"82","hashOfConfig":"61"},{"size":15895,"mtime":1626973739863,"results":"83","hashOfConfig":"61"},{"size":9677,"mtime":1624909736393,"results":"84","hashOfConfig":"61"},{"size":2966,"mtime":1624909183293,"results":"85","hashOfConfig":"61"},{"size":10246,"mtime":1624565577904,"results":"86","hashOfConfig":"61"},{"size":13969,"mtime":1626973073559,"results":"87","hashOfConfig":"61"},{"size":1782,"mtime":1624909443333,"results":"88","hashOfConfig":"61"},{"size":2358,"mtime":1621626270673,"results":"89","hashOfConfig":"61"},{"size":14462,"mtime":1624909627977,"results":"90","hashOfConfig":"61"},{"size":3940,"mtime":1626895090227,"results":"91","hashOfConfig":"61"},{"size":27547,"mtime":1626896231859,"results":"92","hashOfConfig":"61"},{"size":16257,"mtime":1626895486171,"results":"93","hashOfConfig":"61"},{"size":2388,"mtime":1621626640957,"results":"94","hashOfConfig":"61"},{"size":317,"mtime":1621626640957,"results":"95","hashOfConfig":"61"},{"size":520,"mtime":1626126644911,"results":"96","hashOfConfig":"61"},{"size":1661,"mtime":1626894302139,"results":"97","hashOfConfig":"61"},{"size":1389,"mtime":1626126747551,"results":"98","hashOfConfig":"61"},{"size":2771,"mtime":1626126776867,"results":"99","hashOfConfig":"61"},{"size":521,"mtime":1626126796827,"results":"100","hashOfConfig":"61"},{"size":2987,"mtime":1626126693975,"results":"101","hashOfConfig":"61"},{"size":9337,"mtime":1626894494011,"results":"102","hashOfConfig":"61"},{"size":795,"mtime":1626126645007,"results":"103","hashOfConfig":"61"},{"size":1998,"mtime":1626126868635,"results":"104","hashOfConfig":"61"},{"size":2113,"mtime":1626893769443,"results":"105","hashOfConfig":"61"},{"size":8288,"mtime":1626126868555,"results":"106","hashOfConfig":"61"},{"size":9666,"mtime":1626894689183,"results":"107","hashOfConfig":"61"},{"size":11177,"mtime":1624910518525,"results":"108","hashOfConfig":"61"},{"size":546,"mtime":1624910608725,"results":"109","hashOfConfig":"61"},{"size":633,"mtime":1624990558028,"results":"110","hashOfConfig":"61"},{"size":2075,"mtime":1624915914255,"results":"111","hashOfConfig":"61"},{"size":2790,"mtime":1626894203323,"results":"112","hashOfConfig":"61"},{"size":2096,"mtime":1624978343156,"results":"113","hashOfConfig":"61"},{"size":449,"mtime":1624978343384,"results":"114","hashOfConfig":"61"},{"size":1821,"mtime":1626894229887,"results":"115","hashOfConfig":"61"},{"size":11971,"mtime":1624978343216,"results":"116","hashOfConfig":"61"},{"size":5481,"mtime":1626894015835,"results":"117","hashOfConfig":"61"},{"size":565,"mtime":1624910189605,"results":"118","hashOfConfig":"61"},{"size":1655,"mtime":1624916558231,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"11dj60e",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"249","usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"122"},"/home/snow/Documentos/ico-web-final/src/index.js",[],["258","259"],"/home/snow/Documentos/ico-web-final/src/App.js",[],"/home/snow/Documentos/ico-web-final/src/i18n.js",[],"/home/snow/Documentos/ico-web-final/src/apis/SunshineFinder.js",[],"/home/snow/Documentos/ico-web-final/src/apis/CoingeckoFinder.js",[],"/home/snow/Documentos/ico-web-final/src/apis/PlacesFinder.js",[],"/home/snow/Documentos/ico-web-final/src/apis/TronscanFinder.js",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/DollarMarktComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Checkout.jsx",["260","261","262","263","264","265","266","267"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/AddressForm.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/PaymentForm.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Review.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/TokenAmount.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/PaymentComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/dashboard/Dashboard.jsx",["268","269","270","271"],"import React, {useState, useEffect} from 'react';\nimport {useAuth} from \"../../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\nimport moneda_dashboard from \"../../images/moneda-dashboard.svg\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DollarMarktComponent from \"../../components/dashboard/DollarMarktComponent\";\nimport PaymentComponent from \"../../components/dashboard/PaymentComponent\";\nimport {db} from \"../../config/firebase\";\nimport PurchaseHistoryComponent from \"../../components/dashboard/PurchaseHistoryComponent\";\nimport SunshineFinder from \"../../apis/SunshineFinder\";\n\nconst Dashboard = () => {\n    const {currentUser, logout} = useAuth();\n    const [signinEmail, setSigninEmail] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const [logged, setLogged] = useState(false);\n    const [cryptoData, setCryptoData] = useState([{}]);\n    const [userInfo, setUserInfo] = useState({});\n    const history = useHistory();\n\n    const getUserData = async(id) => {\n        try{\n            let docRef = db.collection('credentials').doc(id);\n            await docRef.onSnapshot(doc => {\n                if(doc.exists){\n                    setUserInfo(doc.data());\n                    //setAmount(doc.data().suns);\n                }\n            });\n            await SunshineFinder.get(\"/get-tuah\", {\n                params: {\n                    uid: id\n                }\n            }).then(response => {\n                setAmount(response.data.amount);\n            }).catch(e => {\n\n            });\n        } catch (e) {\n\n        }\n    }\n\n    useEffect(() => {\n        try{\n            let email = currentUser.email;\n            let id = currentUser.uid;\n            setSigninEmail(email);\n            setUid(id);\n            setLogged(true);\n            history.push(\"/\");\n            getUserData(id);\n        } catch (e) {\n\n            setSigninEmail(\"\");\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    },[currentUser]);\n\n\n    const renderData = () => {\n        if(logged && Object.keys(userInfo).length !== 0){\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"row mt-5\">\n\n                        <div className=\"col-12 mt-5 d-flex justify-content-center\">\n                            <img src={moneda_dashboard} className=\"img-fluid\" style={{width: 400}} alt=\"MONEDA-SUNSHINE\"/>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center\">\n                            <h1>\n                                {signinEmail ? (amount.toString().slice(0, amount.toString().length-6) + \".\" + amount.toString().slice(amount.toString().length-6)) : \"Invitado\"}\n                                <br/>SUNIS</h1>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center mt-5\">\n                            <button className=\"material\" data-toggle=\"modal\" data-target=\"#exampleModal\">Mercado de criptos<ExpandMoreIcon style={{ fontSize: 40 }} /> </button>\n                        </div>\n\n                        <div className=\"col-12\">\n                            <button className=\"btn material2 ml-3 mr-3\" data-toggle=\"modal\" data-target=\"#paymentModal\" data-backdrop='static' data-keyboard='false'>Comprar</button>\n                            <a className=\"btn material2 ml-3 mr-3\" href=\"Wallet\">Wallet</a>\n                        </div>\n\n                        <DollarMarktComponent />\n                        <PaymentComponent email={signinEmail} userData={uid} allData={userInfo} />\n\n                    </div>\n\n                    <div className=\"row mt-5\">\n                        <PurchaseHistoryComponent uid={uid} />\n                    </div>\n\n                </div>\n\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <div className=\"container-fluid fondo-dashboard\">\n            {renderData()}\n        </div>\n    )\n\n};\n\nexport default Dashboard;","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/HeaderCards.jsx",["272"],"import React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\nimport NumberFormat from \"react-number-format\";\n\nconst Header = ({tokensNumber}) => {\n    return (\n        <>\n            <div className=\"header pb-8 pt-5 pt-md-8\" style={{backgroundColor: \"#ffffff\"}}>\n                <Container fluid>\n                    <div className=\"header-body\">\n                        {/* Card stats */}\n                        <Row>\n                            <Col lg=\"12\" xl=\"12\">\n                                <Card className=\"card-stats mb-4 mb-xl-0 bg-gradient-default\">\n                                    <CardBody>\n                                        <Row>\n                                            <div className=\"col\">\n                                                <CardTitle\n                                                    tag=\"h6\"\n                                                    className=\"text-uppercase text-muted mb-0 text-light\"\n                                                >\n                                                    Número de SUN tokens\n                                                </CardTitle>\n                                                <span className=\"h5 font-weight-bold mb-0 text-light\">\n                                                     {tokensNumber.toString().slice(0, tokensNumber.toString().length-6) + \".\" + tokensNumber.toString().slice(tokensNumber.toString().length-6)}\n                                                </span>\n                                            </div>\n                                            <Col className=\"col-auto\">\n                                                <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                                                    <i className=\"fas fa-users\" />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default Header;\n","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/CryptoList.jsx",["273","274"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/TransactionsHistory.jsx",["275","276","277","278","279","280","281","282"],"/home/snow/Documentos/ico-web-final/src/routes/dashboard/Wallet.jsx",["283","284","285","286","287","288","289","290","291","292"],"/home/snow/Documentos/ico-web-final/src/routes/dashboard/Profile.jsx",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/ExpansionComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/UploadImage.jsx",["316"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/PersonalData.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/VerifiedProfile.jsx",["317"],"import React, {useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport Camaraine from \"../../../images/camaraine.svg\";\nimport Pdfine from \"../../../images/pdfine.svg\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport swal from \"sweetalert\";\nimport {db, useStorage} from \"../../../config/firebase\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {encryptData} from \"../js/encrypt\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nconst VerifiedProfile = ({getStates, setStates, uid, showFile, setFile}) => {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const masterCondition = getStates(\"profileStatus\") === 1 || getStates(\"profileStatus\") === 2 || getStates(\"profileStatus\") === 5 || getStates(\"profileStatus\") === 7;\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n\n            if (masterCondition) {\n                if (getStates(\"address\") !== \"\") {\n                    if (getStates(\"fileFirestore\") !== null) {\n                        swal({\n                            title: \"¿Estas seguro de subir la información?\",\n                            text: \"Una vez enviada la información no se podrá modificar\",\n                            icon: \"warning\",\n                            buttons: true,\n                            dangerMode: true,\n                        })\n                            .then((willDelete) => {\n                                if (willDelete) {\n                                    setOpen(true);\n                                    const storageRef = useStorage.ref(`id/${encryptData(uid)}`);\n                                    const task = storageRef.put(getStates(\"fileFirestore\"));\n                                    task.on('state_changed', snapshot => {\n                                        let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                                        setStates(\"setUploadValue\", percentage);\n                                    }, error => {\n\n                                    }, () => {\n                                        storageRef.getDownloadURL().then(url => {\n                                            db.collection('credentials').doc(uid).update({\n                                                profileStatus: 3,\n                                                doc: url,\n                                                fileType: getStates(\"fileObject\"),\n                                            }).then(() => {\n                                                setOpen(false);\n                                                swal(\"Información actualizada\", \"¡La información de tu perfil fue actualizada con éxito!\", \"success\");\n                                            });\n                                        })\n                                    })\n                                }\n                            });\n                    } else {\n                        swal(\"Te falta subir tu identifiación oficial\", \"Para poder continuar con la verificación de tus datos debes subir una foto o pdf de tu identifiacaión oficial de ambos lados!\", \"warning\");\n                    }\n\n                } else {\n                    swal(\"Información faltante\", \"Llena todos los campos correspondientes para poder continuar!\", \"warning\");\n                }\n            }\n\n        } catch (e) {\n\n        }\n    }\n\n    return (\n        <div>\n            <form className={classes.root}\n                  id={(masterCondition) ? \"profileform\" : \"\"}\n                  onSubmit={(masterCondition) ? handleSubmit : () => false}>\n\n                <div className=\"col-12\">\n                    <Typography className={classes.title} variant=\"h4\" component=\"h4\">\n                        Sube un documento oficial (INE, Pasaporte, Licencia de conducir...)\n                    </Typography>\n                </div>\n\n                <Typography className={classes.title} variant=\"subtitle2\" component=\"h2\"\n                            color=\"textSecondary\">\n                    Verifica que tus datos coincidan con los datos personales que nos proporcionaste previamente\n                </Typography>\n\n\n                <div className=\"row mb-5 mt-5\">\n\n                    <div className=\"col-12\">\n                        <Typography className={classes.title} variant=\"h6\" component=\"h6\">\n                            Identificación oficial\n                        </Typography>\n                    </div>\n\n                    <div className=\"col-12 mt-5 px-5\">\n                        {\n                            !(masterCondition) ? showFile() :\n                                <span className=\"form-regi col-xl-5 col-lg-7 text-dark\">ID\n                                                        <label className=\"btn form-regi\" htmlFor=\"cameraine\">\n                                                            <img src={Camaraine} alt=\"\" className=\"\"/>\n                                                        </label>\n\n                                                        <label htmlFor=\"pdfine\" className=\"btn form-regi\">\n                                                            <img src={Pdfine} alt=\"\" className=\"\"/>\n                                                        </label>\n                                                        <div className=\" form-group  form-registro col-12 \">\n\n                                                            <input type=\"file\" id=\"cameraine\" className=\" d-none\"\n                                                                   accept=\"image/*\"\n                                                                   onChange={e => setFile(e.target.files[0])}>\n                                                            </input>\n\n                                                            <input type=\"file\" id=\"pdfine\"\n                                                                   accept=\"application/pdf\" className=\"d-none\"\n                                                                   onChange={e => setFile(e.target.files[0])}>\n                                                            </input>\n\n                                                            <div style={{\n                                                                position: 'absolute',\n                                                                justifycontent: \"center\",\n                                                                bottom: '10px',\n                                                                left: '50vw'\n                                                            }}>\n                                                            </div>\n\n                                                            <div className=\"container\">\n                                                                {showFile()}\n                                                            </div>\n\n                                                            {/*}\n                                                            <div>\n                                                                <progress value={uploadValue} max=\"100\">\n                                                                    {uploadValue}%\n                                                                </progress>\n                                                                <p className=\"btn form-regi\">{`${uploadValue}%`}</p>\n                                                            </div>\n                                                            {*/}\n\n                                                        </div>\n                                                    </span>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justify-content-center\">\n                        <Button\n                            disabled={!(masterCondition)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            className={classes.button}\n                            startIcon={<SaveIcon/>}\n                            type={(masterCondition) ? \"submit\" : \"button\"}\n                        >\n                            Enviar verificación\n                        </Button>\n                    </div>\n                </div>\n            </form>\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n};\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        marginTop: 20,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    cardActions: {},\n    large: {\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nexport default VerifiedProfile;","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Settings.jsx",["318","319","320","321","322","323"],"import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChangePassword from \"../../components/dashboard/settings/ChangePassword\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function Settings() {\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false);\n    const {currentUser, getAuthType, logout, credential} = useAuth();\n    const [logged, setLogged] = useState(false);\n    const [hasPassword, setHasPassword] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            if (!currentUser.emailVerified) {\n                setLogged(false);\n                logout();\n                history.push(\"/Home\");\n            } else {\n                setLogged(true);\n                history.push(\"/Settings\");\n                verifyAuthType(currentUser.providerData);\n            }\n        } catch (e) {\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    }, []);\n\n\n    const verifyAuthType = data => {\n        data.map(value => {\n            if (value.providerId === \"password\"){\n                setHasPassword(true);\n            }\n        });\n    }\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    return (\n        <div className=\"mt-5 pt-5 contenedor-profile px-2 px-md-5\">\n            <Accordion className=\"mt-3\" expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                >\n                    <Typography className={classes.heading}>Contraseña</Typography>\n                    <Typography className={classes.secondaryHeading}>Cambia tu contraseña</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {hasPassword ? <ChangePassword /> : <h5 style={{marginLeft: 40}}>No puedes cambiar tu contraseña porque elegiste iniciar sesión con Google</h5>}\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","/home/snow/Documentos/ico-web-final/src/components/dashboard/settings/ChangePassword.jsx",["324","325"],"import React, {useState} from 'react';\nimport {Button, TextField} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport firebase from \"firebase\";\nimport swal from \"sweetalert\";\nimport passwordValidator from \"password-validator\";\nimport swal2 from '@sweetalert/with-react';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst ChangePassword = () => {\n\n    const [lastPassword, setLastPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const verifyLastPassword = async () => {\n        let result = false;\n        try{\n            let user = firebase.auth().currentUser;\n            let credential = firebase.auth.EmailAuthProvider.credential(\n                firebase.auth().currentUser.email,\n                lastPassword\n            );\n\n            await user.reauthenticateWithCredential(credential).then(() => {\n                result = true;\n            });\n        } catch (e) {\n            swal({\n                title: \"Contraseña actual incorrecta\",\n                text: \"La contraseña proporcionada como actual no es correcta, intenta de nuevo\",\n                icon: \"warning\",\n                button: \"¡Entendido!\",\n                closeOnClickOutside: false\n            });\n        }\n        return result;\n\n    }\n\n    const clearInputs = () => {\n        setNewPassword(\"\");\n        setRepeatPassword(\"\");\n        setLastPassword(\"\");\n    }\n\n    const handleChangePassword = async (e) => {\n        e.preventDefault();\n        setOpen(true);\n        try{\n            if(await verifyLastPassword()){\n                if(newPassword === repeatPassword) {\n\n                    let schema = new passwordValidator();\n                    schema\n                        .is().min(8)\n                        .is().max(100)\n                        .has().uppercase()\n                        .has().lowercase()\n                        .has().digits(1)\n                        .has().not().spaces();\n\n                    if(schema.validate(newPassword)){\n                        let user = firebase.auth().currentUser;\n                        await user.updatePassword(newPassword).then(() => {\n                            clearInputs();\n                            swal({\n                                title: \"Contraseña cambiada exitosamente\",\n                                text: \"Ahora puedes iniciar sesión con tu nueva contraseña\",\n                                icon: \"success\",\n                                button: \"¡Entendido!\",\n                                closeOnClickOutside: false\n                            });\n                        });\n                    } else {\n                        swal2({\n                            text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                            closeOnClickOutside: false,\n                            buttons: {\n                                cancel: \"Entendido\",\n                            },\n                            content: (\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <ul>\n                                            {\n                                                schema.validate(newPassword, {list: true}).map((element, index) => {\n                                                    switch (element) {\n                                                        case 'min':\n\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                            )\n\n                                                        case 'max':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                            )\n\n                                                        case 'uppercase':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo una letra mayuscula</p></li>\n                                                            )\n\n                                                        case 'lowercase':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo 1 letra minuscula</p></li>\n                                                            )\n\n                                                        case 'spaces':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">No debe contener espacios</p></li>\n                                                            )\n\n                                                        case 'digits':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo 1 número</p></li>\n                                                            )\n\n                                                    }\n\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                } else {\n                    swal({\n                        title: \"Las contraseñas no coinciden\",\n                        text: \"Asegurate de que las contraseñas nuevas sean las mismas\",\n                        icon: \"info\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n            }\n        } catch (e) {\n\n\n        }\n        setOpen(false);\n\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleChangePassword}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 mb-3\">\n                            <TextField variant=\"outlined\"\n                                       required\n                                       fullWidth\n                                       id=\"outlined-basic\"\n                                       label=\"Contraseña anterior\"\n                                       type={\"password\"}\n                                       style={{alignContent: \"center\"}}\n                                       value={lastPassword}\n                                       onChange={e => setLastPassword(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <TextField variant=\"outlined\"\n                                       required\n                                       fullWidth\n                                       id=\"outlined-basic\"\n                                       label=\"Contraseña nueva\"\n                                       type={\"password\"}\n                                       style={{alignContent: \"center\"}}\n                                       value={newPassword}\n                                       onChange={e => setNewPassword(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <TextField variant=\"outlined\"\n                                       required\n                                       fullWidth\n                                       id=\"outlined-basic\"\n                                       label=\"Repetir contraseña nueva\"\n                                       type={\"password\"}\n                                       style={{alignContent: \"center\"}}\n                                       value={repeatPassword}\n                                       onChange={e => setRepeatPassword(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-12\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                startIcon={<SaveIcon/>}\n                                type={\"submit\"}\n                            >\n                                Cambiar contraseña\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n};\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\nexport default ChangePassword;","/home/snow/Documentos/ico-web-final/src/components/dashboard/PurchaseHistoryComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/context/AuthContext.jsx",["326"],"import React, { useContext, useState, useEffect, createContext } from \"react\"\nimport { auth } from \"../config/firebase\"\nimport {useHistory} from \"react-router-dom\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n}\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n    const [credential, setCredential] = useState();\n    const history = useHistory();\n\n    const signup = (email, password) => {\n        return auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    const login = (email, password) => {\n        return auth.signInWithEmailAndPassword(email, password);\n    }\n\n    const logout = () => {\n        return auth.signOut();\n    }\n\n    const resetPassword = (email) => {\n        return auth.sendPasswordResetEmail(email);\n    }\n\n    const getAuthType = async () => {\n        await auth.getRedirectResult().then(r => console.log(r));\n    }\n\n    const updateEmail = (email) => {\n        return currentUser.updateEmail(email);\n    }\n\n    const updatePassword = (password) => {\n        return currentUser.updatePassword(password);\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n            setCredential(user);\n\n        });\n        return unsubscribe;\n    }, []);\n\n    const value = {\n        credential,\n        currentUser,\n        login,\n        signup,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n        getAuthType\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}","/home/snow/Documentos/ico-web-final/src/config/Particles-config.js",[],"/home/snow/Documentos/ico-web-final/src/routes/Recovery.jsx",["327","328","329","330","331","332","333","334","335","336"],"import React, {useEffect, useState} from 'react';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Card from \"@material-ui/core/Card\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Input from '@material-ui/core/Input';\nimport passwordValidator from \"password-validator\";\nimport swal2 from \"@sweetalert/with-react\";\nimport swal from \"sweetalert\";\nimport {useHistory} from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport {useAuth} from \"../context/AuthContext\";\nimport SunshineFinder from \"../apis/SunshineFinder\";\n\nconst Recovery = () => {\n    const classes = useStyles();\n    const [values, setValues] = useState({\n        showPassword1: false,\n        showPassword2: false\n    });\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [lastPassword, setLastPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    const [ready, setReady] = useState(false);\n    const history = useHistory();\n    //const {id} = useParams();\n    const {login, currentUser, logout} = useAuth();\n\n    useEffect(() => {\n        //verifyToken(id);\n        emailLinkComplete();\n    }, []);\n\n    const verifyToken = async token => {\n        SunshineFinder.get(\"/reset\", {\n            params: {\n                resetPasswordToken: token\n            },\n        }).then(response => {\n            if (response.data.message === \"token-ok\") {\n\n                setReady(true);\n            } else {\n\n                setReady(false);\n            }\n        }).catch(e => {\n\n        })\n    }\n\n    const emailLinkComplete = () => {\n        // [START email_link_complete]\n        // Confirm the link is a sign-in with email link.\n        if (firebase.auth().isSignInWithEmailLink(window.location.href)) {\n            // Additional state parameters can also be passed via URL.\n            // This can be used to continue the user's intended action before triggering\n            // the sign-in operation.\n            // Get the email if available. This should be available if the user completes\n            // the flow on the same device where they started it.\n            let email = window.localStorage.getItem('emailForSignIn');\n            if (!email) {\n                // User opened the link on a different device. To prevent session fixation\n                // attacks, ask the user to provide the associated email again. For example:\n                email = window.prompt('Please provide your email for confirmation');\n            }\n            // The client SDK will parse the code from the link for you.\n            firebase.auth().signInWithEmailLink(email, window.location.href)\n                .then((result) => {\n                    // Clear email from storage.\n                    window.localStorage.removeItem('emailForSignIn');\n                    // You can access the new user via result.user\n                    // Additional user info profile not available via:\n                    // result.additionalUserInfo.profile == null\n                    // You can check if the user is new or existing:\n                    // result.additionalUserInfo.isNewUser\n                })\n                .catch((error) => {\n                    // Some error occurred, you can inspect the code: error.code\n                    // Common errors could be invalid email and invalid or expired OTPs.\n                });\n        }\n        // [END email_link_complete]\n    }\n\n    const clearInputs = () => {\n        setNewPassword(\"\");\n        setRepeatPassword(\"\");\n    }\n\n    const handleChangePassword = async (e) => {\n        e.preventDefault();\n        setOpen(true);\n        try {\n            if (password === password2) {\n                let schema = new passwordValidator();\n                schema\n                    .is().min(8)\n                    .is().max(100)\n                    .has().uppercase()\n                    .has().lowercase()\n                    .has().digits(1)\n                    .has().not().spaces();\n\n                if (schema.validate(password)) {\n                    let user = firebase.auth().currentUser;\n                    await user.updatePassword(password).then(() => {\n                        clearInputs();\n                        swal({\n                            title: \"Contraseña cambiada exitosamente\",\n                            text: \"Ahora puedes iniciar sesión con tu nueva contraseña\",\n                            icon: \"success\",\n                            button: \"¡Entendido!\",\n                            closeOnClickOutside: false\n                        }).then(confirm => {\n                            if (confirm) {\n                                history.push(\"/\");\n                            }\n                        });\n                    });\n                } else {\n                    swal2({\n                        text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                        closeOnClickOutside: false,\n                        buttons: {\n                            cancel: \"Entendido\",\n                        },\n                        content: (\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <ul>\n                                        {\n                                            schema.validate(newPassword, {list: true}).map((element, index) => {\n                                                switch (element) {\n                                                    case 'min':\n\n                                                        return (\n                                                            <li key={index} className=\"text-dark text-justify\"><p\n                                                                className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                        )\n\n                                                    case 'max':\n                                                        return (\n                                                            <li key={index} className=\"text-dark text-justify\"><p\n                                                                className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                        )\n\n                                                    case 'uppercase':\n                                                        return (\n                                                            <li key={index} className=\"text-dark text-justify\"><p\n                                                                className=\"text-danger\">Mínimo una letra mayuscula</p>\n                                                            </li>\n                                                        )\n\n                                                    case 'lowercase':\n                                                        return (\n                                                            <li key={index} className=\"text-dark text-justify\"><p\n                                                                className=\"text-danger\">Mínimo 1 letra minuscula</p>\n                                                            </li>\n                                                        )\n\n                                                    case 'spaces':\n                                                        return (\n                                                            <li key={index} className=\"text-dark text-justify\"><p\n                                                                className=\"text-danger\">No debe contener espacios</p>\n                                                            </li>\n                                                        )\n\n                                                    case 'digits':\n                                                        return (\n                                                            <li key={index} className=\"text-dark text-justify\"><p\n                                                                className=\"text-danger\">Mínimo 1 número</p></li>\n                                                        )\n\n                                                }\n\n                                            })\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            } else {\n                swal({\n                    title: \"Las contraseñas no coinciden\",\n                    text: \"Asegurate de que las contraseñas nuevas sean las mismas\",\n                    icon: \"info\",\n                    button: \"¡Entendido!\",\n                    closeOnClickOutside: false\n                });\n            }\n        } catch (e) {\n\n        }\n        setOpen(false);\n\n    }\n\n\n    const handleClickShowPassword = (id) => {\n        if (id === 1) {\n            setValues({...values, showPassword1: !values.showPassword1});\n        } else if (id === 2) {\n            setValues({...values, showPassword2: !values.showPassword2});\n        }\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n\n        <div className=\"container\">\n            <Card className={classes.root}>\n\n                <CardContent>\n                    <form onSubmit={handleChangePassword}>\n                        <div className=\"row\">\n\n                            <div className=\"col-12\">\n                                <h3>Cambia tu contraseña</h3>\n                            </div>\n\n\n                            <div className=\"col-12 mt-5 mb-4\">\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Contraseña nueva</InputLabel>\n                                    <Input\n                                        required\n                                        id=\"standard-adornment-password\"\n                                        type={values.showPassword1 ? 'text' : 'password'}\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={() => handleClickShowPassword(1)}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {values.showPassword1 ? <Visibility/> : <VisibilityOff/>}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className=\"col-12 mb-5\">\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Repite tu contraseña</InputLabel>\n                                    <Input\n                                        required\n                                        id=\"standard-adornment-password\"\n                                        type={values.showPassword2 ? 'text' : 'password'}\n                                        value={password2}\n                                        onChange={e => setPassword2(e.target.value)}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={() => handleClickShowPassword(2)}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {values.showPassword2 ? <Visibility/> : <VisibilityOff/>}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className=\"col-12\">\n                                <Button variant=\"contained\" type=\"submit\" size=\"large\" color=\"primary\">\n                                    Enviar\n                                </Button>\n                            </div>\n\n                        </div>\n                    </form>\n\n                </CardContent>\n                <CardActions>\n                </CardActions>\n            </Card>\n            <Backdrop className={classes.backdrop} open={open}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n        </div>\n\n    );\n};\n\nexport default Recovery;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 150\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        width: '25ch',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));","/home/snow/Documentos/ico-web-final/src/components/PasswordRecoveryModal.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/SignUpModal.jsx",["337"],"import React, {useState} from 'react';\nimport \"./navbar/css/styles.css\"\nimport 'react-phone-number-input/style.css'\nimport {db, auth} from \"../config/firebase\";\nimport swal from \"sweetalert\";\nimport swal2 from '@sweetalert/with-react';\nimport firebase from 'firebase';\nimport \"firebase/auth\";\nimport GoogleButton from \"react-google-button\";\nimport passwordValidator from \"password-validator\";\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {useHistory} from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SunshineFinder from \"../apis/SunshineFinder\";\nrequire('dotenv').config();\n\n\nconst SignUpModal = () => {\n\n    const sendReCAPTCHAValue = async (value) => {\n        const response = await SunshineFinder.post(\"/api/recaptcha\", {\n            captchaValue: value\n        });\n\n        if (response.data.status === \"success\") {\n            setVerifiedCaptcha(true);\n        }\n\n    }\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [apellido, setApellido] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatedPassword, setRepeteadPassword] = useState(\"\");\n    const [checkedValue, setCheckedValue] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [verifiedCaptcha, setVerifiedCaptcha] = useState(false);\n    const history = useHistory();\n\n    //VALIDATIONS\n    const validations = {\n        requiredFields: () => {\n            return (name !== '' && email !== '' && password !== '' && apellido !== '')\n        }\n    }\n\n    const handleCheckboxState = (e) => {\n        setCheckedValue(e.target.checked);\n    }\n\n    const saveDataInFirestore = (uid, data = {}) => {\n        if (Object.keys(data).length > 0) {\n            /*============GUARDAR DATOS EN FIRESTORE CON GOOGLE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: data.city.replace(/<[^>]+>/g, ''),\n                doc: \"\".replace(/<[^>]+>/g, ''),\n                email: data.email.replace(/<[^>]+>/g, ''),\n                name: data.name.replace(/<[^>]+>/g, ''),\n                phone: data.phone === null ? \"\".replace(/<[^>]+>/g, '') : data.phone.replace(/<[^>]+>/g, ''),\n                authType: data.authType.replace(/<[^>]+>/g, ''),\n                birthday: data.birthday.replace(/<[^>]+>/g, ''),\n                country: data.country.replace(/<[^>]+>/g, ''),\n                state: data.state.replace(/<[^>]+>/g, ''),\n                address: data.address.replace(/<[^>]+>/g, ''),\n                suns: 0,\n                countryComplete: data.countryComplete.replace(/<[^>]+>/g, ''),\n                profileStatus: data.profileStatus,\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n                addressToken: \"\",\n                privateKey: \"\"\n            }).then(docRef => {\n                history.push(\"/\");\n                window.location.reload();\n                clearStates();\n            }).catch((error) => {\n\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        } else {\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: \"\".replace(/<[^>]+>/g, ''),\n                doc: \"\".replace(/<[^>]+>/g, ''),\n                email: email.replace(/<[^>]+>/g, ''),\n                name: name.replace(/<[^>]+>/g, ''),\n                lastname: apellido.replace(/<[^>]+>/g, ''),\n                phone: \"\".replace(/<[^>]+>/g, ''),\n                authType: \"EMAIL\".replace(/<[^>]+>/g, ''),\n                birthday: \"\".replace(/<[^>]+>/g, ''),\n                country: \"\".replace(/<[^>]+>/g, ''),\n                state: \"\".replace(/<[^>]+>/g, ''),\n                address: \"\".replace(/<[^>]+>/g, ''),\n                profileStatus: 0,\n                suns: 0,\n                countryComplete: \"\".replace(/<[^>]+>/g, ''),\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n                addressToken: \"\",\n                privateKey: \"\"\n            }).then(docRef => {\n                swal({\n                    title: \"¡Registro exitoso!\",\n                    text: \"Enviamos un enlace al correo electrónico que proporcionaste para verificar tu cuenta.\",\n                    icon: \"success\",\n                    button: \"¡Entendido!\",\n                    closeOnClickOutside: false\n                }).then(confirm => {\n                    if (confirm) {\n                        document.getElementById(\"closeModalSignUp\").click();\n                        document.getElementById(\"signInButton\").click();\n                    }\n                });\n                clearStates();\n                setLoading(false);\n            }).catch((error) => {\n                setLoading(false);\n\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        }\n    }\n\n    const searchDataInFirestore = async id => {\n        let result = null;\n        await db.collection('credentials').doc(id).get().then(doc => {\n            result = doc.exists ? \"exists\" : \"not-exists\";\n        }).catch(error => {\n            result = \"error\";\n\n        });\n        return result;\n    }\n\n    const clearStates = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n        setRepeteadPassword('');\n        setApellido('');\n        setCheckedValue(false);\n        setVerifiedCaptcha(false);\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validations.requiredFields()) {\n\n            let schema = new passwordValidator();\n            schema\n                .is().min(8)\n                .is().max(100)\n                .has().uppercase()\n                .has().lowercase()\n                .has().digits(1)\n                .has().not().spaces();\n\n            if (schema.validate(password)) {\n                if (password === repeatedPassword) {\n                    if (checkedValue) {\n                        if (verifiedCaptcha) {\n                            setLoading(true);\n                            auth.createUserWithEmailAndPassword(email, password)\n                                .then((user) => {\n\n                                    user.user.sendEmailVerification().then(r => {\n                                        saveDataInFirestore(user.user.uid);\n                                    }, (error) => {\n\n                                    })\n\n                                    auth.signOut();\n\n                                }).catch((error) => {\n                                setLoading(false);\n                                let errorCode = error.code;\n\n\n                                /*============== EL CORREO YA SE USA POR OTRA CUENTA ==================*/\n                                if (errorCode === \"auth/email-already-in-use\") {\n                                    swal({\n                                        title: \"Oops\",\n                                        text: \"La dirección de correo ya se encuentra en uso\",\n                                        icon: \"warning\",\n                                        button: \"¡Entendido!\",\n                                        closeOnClickOutside: false\n                                    });\n                                } else if (errorCode === \"auth/weak-password\") {\n                                    swal({\n                                        title: \"Oops\",\n                                        text: \"La contraseña debe tener al menos 8 caracteres!\",\n                                        icon: \"warning\",\n                                        button: \"¡Entendido!\"\n                                    });\n                                }\n\n                            });\n                        } else {\n                            swal({\n                                title: \"Verifica el CAPTCHA\",\n                                text: \"Intenta verificar el CAPTCHA de nuevo para poder continuar\",\n                                icon: \"warning\",\n                                button: \"¡Entendido!\"\n                            });\n                        }\n                    } else {\n                        swal({\n                            title: \"Advertencia\",\n                            text: \"Debes aceptar los términos y condiciones para poder registrarte\",\n                            icon: \"warning\",\n                            button: \"¡Entendido!\",\n                            closeOnClickOutside: false\n                        });\n                    }\n                } else {\n                    swal({\n                        title: \"Las contraseñas no coinciden\",\n                        text: \"Asegurate de escribir las mismas contraseñas en los campos correspondientes\",\n                        icon: \"warning\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                swal2({\n                    text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                    closeOnClickOutside: false,\n                    buttons: {\n                        cancel: \"Entendido\",\n                    },\n                    content: (\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <ul>\n                                    {\n                                        schema.validate(password, {list: true}).map((element, index) => {\n\n                                            switch (element) {\n                                                case 'min':\n\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                    )\n\n                                                case 'max':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                    )\n\n                                                case 'uppercase':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo una letra mayuscula</p></li>\n                                                    )\n\n                                                case 'lowercase':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 1 letra minuscula</p></li>\n                                                    )\n\n                                                case 'spaces':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">No debe contener espacios</p></li>\n                                                    )\n\n                                                case 'digits':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 1 número</p></li>\n                                                    )\n\n                                                default:\n                                                    return\n                                            }\n                                        })\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n\n        } else {\n            swal({\n                title: \"Advertencia\",\n                text: \"Debes llenar todos los campos\",\n                icon: \"warning\",\n                button: \"¡Entendido!\",\n                closeOnClickOutside: false\n            });\n        }\n    };\n\n    const signUpWithGoogle = async () => {\n\n        let provider = new firebase.auth.GoogleAuthProvider();\n        provider.addScope('https://www.googleapis.com/auth/userinfo.profile');\n        auth.languageCode = 'es';\n        await auth.signInWithPopup(provider).then(async (result) => {\n\n            let user = result.user;\n\n            if (user.emailVerified) {\n\n                let userStatus = await searchDataInFirestore(user.uid);\n                if(userStatus === \"exists\"){\n                    history.push(\"/\");\n                    window.location.reload();\n                    clearStates();\n                } else if (userStatus === \"not-exists\"){\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\",\n                        addressToken: \"\",\n                        privateKey: \"\"\n                    });\n                } else {\n                    swal({\n                        title: \"Ocurrió un error\",\n                        text: \"Ocurrió un error inesperado, inténtalo de nuevo más tarde\",\n                        icon: \"error\",\n                        button: \"Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                user.sendEmailVerification().then(r => {\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\",\n                        addressToken: \"\",\n                        privateKey: \"\"\n                    });\n                }, (error) => {\n\n                });\n                auth.signOut();\n            }\n        }).catch((error) => {\n            auth.signOut();\n        })\n\n    }\n\n    const [values, setValues] = useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword1: false,\n        showPassword2: false\n    });\n\n    const handleClickShowPassword = (id) => {\n        if (id === 1) {\n            setValues({...values, showPassword1: !values.showPassword1});\n        } else if (id === 2) {\n            setValues({...values, showPassword2: !values.showPassword2});\n        }\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n\n        <div className=\"modal fade \" id=\"signUpModal\" data-backdrop=\"static\" data-keyboard=\"false\"\n             tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-xl modal-dialog-centered pl-xl-5 pr-xl-5\">\n                <div className=\"modal-content  registrobody pl-xl-5 pr-xl-5\">\n\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title col-12 text-light\" id=\"staticBackdropLabel\">Crea tu cuenta</h5>\n                        <button type=\"button\" id=\"closeModalSignUp\" className=\"close\" data-dismiss=\"modal\"\n                                aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n\n                    <div className=\"modal-body col-12 pl-xl-5 pr-xl-5\">\n\n\n                        <div className=\"form-group col-12 d-flex justify-content-center\">\n                            <GoogleButton\n                                label='Iniciar sesión con Google'\n                                onClick={signUpWithGoogle}\n                                style={{width: 500, borderRadius: 3}}\n                            />\n                        </div>\n\n                        <form className=\"form\" onSubmit={handleSubmit}>\n                            <div className=\"container mt-5 pl-xl-5 pr-xl-5\">\n                                <div className=\"row pl-xl-5 pr-xl-5\">\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"name\"\n                                                   name=\"name\"\n                                                   value={name}\n                                                   label=\"Nombre\"\n                                                   type=\"text\"\n                                                   onChange={(e) => setName(e.target.value)} variant=\"filled\"/>\n\n\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"lastname\"\n                                                   name=\"lastnane\"\n                                                   label=\"Apellido\"\n                                                   value={apellido}\n                                                   type=\"text\"\n                                                   onChange={(e) => setApellido(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"outlined-basic\" label=\"Email\"\n                                                   value={email}\n                                                   type=\"email\"\n                                                   onChange={(e) => setEmail(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Contraseña *</InputLabel>\n                                            <FilledInput\n                                                id=\"signup-password\"\n                                                type={values.showPassword1 ? 'text' : 'password'}\n                                                value={password}\n                                                onChange={(e) => setPassword(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={() => handleClickShowPassword(1)}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword1 ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Repite tu contraseña\n                                                *</InputLabel>\n                                            <FilledInput\n                                                id=\"signup-password\"\n                                                type={values.showPassword2 ? 'text' : 'password'}\n                                                value={repeatedPassword}\n                                                onChange={(e) => setRepeteadPassword(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={() => handleClickShowPassword(2)}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword2 ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div className=\"form-group form-check col-12 mb-3 pl-xl-5 pr-xl-5\">\n                                                    <span\n                                                        className=\"btn form-check ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5 form-regi\">\n\n                                                        <FormControlLabel\n                                                            control={\n                                                                <Checkbox className=\"form-check-input form-regi\"\n                                                                          checked={checkedValue}\n                                                                          onChange={handleCheckboxState}\n                                                                          required={true}\n                                                                          name=\"terminosyCondiciones\"/>}\n                                                            label=\"Aceptar términos y condiciones\" required\n                                                            name=\"terminosYCondiciones\"\n                                                        />\n                                                    </span>\n                                    </div>\n\n                                    <div className=\"form-group col-12 d-flex justify-content-center\">\n                                        <ReCAPTCHA sitekey={process.env.REACT_APP_RECAPTCHA}\n                                                   onChange={sendReCAPTCHAValue}/>\n                                    </div>\n\n                                    <div className=\"form-group col-12 mt-3\" id=\"signUpButtonDiv\">\n                                        <button type=\"submit\"\n                                                className=\"btn btn-registro\"\n                                                id=\"signUpButton\"\n                                                disabled={loading}>\n                                            {loading ? (\n                                                <div className=\"spinner-border text-dark\" role=\"status\">\n                                                    <span className=\"sr-only\">Registrando...</span>\n                                                </div>\n                                            ) : \"REGISTRATE\"}\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n\n                    <div className=\"modal-footer col-12 btn-footer\"></div>\n\n                </div>\n\n            </div>\n        </div>\n\n    );\n};\n\nexport default SignUpModal;","/home/snow/Documentos/ico-web-final/src/components/SignInModal.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/js/canvasUtils.js",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/js/encrypt.js",[],"/home/snow/Documentos/ico-web-final/src/components/Video.jsx",["338"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst Video = () => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 videosunrep mt-5 p-0\">\n                <iframe src=\"https://www.youtube.com/embed/O5c2yMxyL54\" frameBorder=\"0\" \n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen></iframe>\n            </div>\n        </div>\n    );\n};\n\nexport default Video;","/home/snow/Documentos/ico-web-final/src/components/Countdown.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Soporte.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/PreguntasFrecuentes.jsx",["339"],"import React from 'react';\nimport Depmason from \"../images/depmason.svg\";\nimport Imgpreg from \"../images/imgpreg.svg\";\nimport Depmenos from \"../images/depmenos.svg\";\nimport Fade from 'react-reveal/Fade';\nimport {useTranslation} from 'react-i18next';\n\nconst PreguntasFrecuentes = () => {\n\n    const {t} = useTranslation();\n\n    const changeIcon = (imageID) => {\n        let image = document.getElementById(imageID)\n        if (image.src.match(\"on\")) {\n            image.src = Depmenos;\n        } else {\n            image.src = Depmason;\n        }\n    }\n\n    const items = [\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.0.Title'),\n            text: t('FAQ.Items.0.Text'),\n            id: \"myImageA\"\n        },\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.1.Title'),\n            text: t('FAQ.Items.1.Text'),\n            id: \"myImageB\"\n        },\n\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.2.Title'),\n            text: t('FAQ.Items.2.Text'),\n            id: \"myImageD\"\n        },\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.3.Title'),\n            text: t('FAQ.Items.3.Text'),\n            id: \"myImageE\"\n        },\n    ]\n\n    return (\n        <div className=\"row fondo-preg\">\n            <p className=\"frecprec\">{t('FAQ.Title')}</p>\n            <div className=\"col-lg-6 col-md-6 col-12 preguntas\">\n\n                {\n                    items.map((value, index) => (\n                        <div key={index}>\n                            <Fade left cascade>\n                                <p className=\"\">\n                                    <button className=\"btn btn-preg1\" onClick={() => changeIcon(value.id)}\n                                            type=\"button\" data-toggle=\"collapse\" data-target={\"#\" + value.id + \"target\"}\n                                            aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                        <img src={value.icon} id={value.id} alt=\"\" className=\"mas\"/>{value.title}\n                                    </button>\n                                </p>\n                                <div className=\"collapse btn-res1 \" id={value.id + \"target\"}>\n                                    <div className=\"text-preg\">\n                                        {value.text}\n                                    </div>\n                                </div>\n                            </Fade>\n                        </div>\n                    ))\n                }\n\n            </div>\n\n            <div className=\"col-md-6 col-12\">\n                <img src={Imgpreg} id=\"\" className=\"PREGIMG d-none d-lg-block d-md-block\"/>\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default PreguntasFrecuentes;","/home/snow/Documentos/ico-web-final/src/components/Newsletter.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Ventajas.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/MapaApp.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/WhitepaperHome.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/Home.jsx",["340","341","342","343","344"],"import React, {Suspense, lazy, useEffect, useState} from 'react';\nimport '../App.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport monedag from \"../images/moneda.gif\";\nimport Banner from \"../components/Banner\";\nimport {useAuth} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Video = lazy(() => import ('../components/Video'));\nconst Countdown = lazy(() => import ('../components/Countdown'));\nconst Proyectos = lazy(() => import ('../components/ProyectosComponent'));\nconst Soporte = lazy(() => import ('../components/Soporte'));\nconst PreguntasFrecuentes = lazy(() => import ('../components/PreguntasFrecuentes'));\nconst Newsletter = lazy(() => import ('../components/Newsletter'));\nconst MapaApp = lazy(() => import ('../components/MapaApp'));\nconst Ventajas = lazy(() => import ('../components/Ventajas'));\nconst WhitepaperHome = lazy(() => import ('../components/WhitepaperHome'));\nconst Footer = lazy(() => import ('../components/Footer'));\n\n\nconst Home = () => {\n\n    const {currentUser} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {\n        }\n    }, []);\n\n    return (\n        <div className=\"container-fluid\" className=\"\">\n            <Banner/>\n            <Suspense fallback={\n                <div className=\"  container mt-5 text-center   justify-content-center\">\n                    <img className=\"moneda-carga\" align=\"top\" src={monedag}/><p>CARGANDO...</p>\n                </div>\n            }>\n                <Video/>\n                <Countdown/>\n                <WhitepaperHome/>\n                <Ventajas/>\n                <Proyectos/>\n                <MapaApp/>\n                <Soporte/>\n                <PreguntasFrecuentes/>\n                <Newsletter/>\n                <Footer/>\n            </Suspense>\n        </div>\n    )\n}\n\n\nexport default Home;\n\n","/home/snow/Documentos/ico-web-final/src/components/Banner.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Footer.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Navigation.jsx",["345","346","347","348","349","350"],"import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport logonav from '../images/logonav.svg';\nimport React, {useState} from 'react';\nimport \"firebase/auth\";\nimport {NavLink, useHistory} from 'react-router-dom';\nimport 'firebase/firestore';\nimport SignUpModal from \"./SignUpModal\";\nimport SignInModal from \"./SignInModal\";\nimport '../js/mostrarmenu';\nimport {useTranslation} from 'react-i18next';\nimport i18next from 'i18next';\nimport USAFLAG from \"../images/usa_flag_icon.svg\";\nimport MEXICOFLAG from \"../images/mexico_flag_icon.svg\";\nimport {useAuth} from \"../context/AuthContext\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PasswordRecoveryModal from \"./PasswordRecoveryModal\";\n\nconst Navigation = () => {\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {currentUser, logout} = useAuth();\n    const [logged] = useState(currentUser ? true : false);\n\n    function handleClick(lang) {\n        i18next.changeLanguage(lang)\n    }\n\n    async function handleLogout() {\n        try {\n            await logout();\n            window.location.reload();\n            history.push(\"/Home\");\n        } catch {\n        }\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick2 = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (e) => {\n        setAnchorEl(null);\n        console.log(e);\n        switch (e) {\n            case \"index\":\n                history.push(\"./\");\n                break;\n            case \"profile\":\n                history.push(\"./Profile\");\n                break;\n            case \"logout\":\n                handleLogout();\n                break;\n            case \"settings\":\n                history.push(\"./Settings\");\n                break;\n            default:\n                history.push(\"./\");\n                break;\n        }\n    };\n\n    const renderNavbar = () => {\n        if (logged) {\n\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top \" id=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img alt=\"Navigation logo\" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\"\n                                data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\">\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <h5>SUNSHINE</h5>\n                                </li>\n                            </ul>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <div>\n                                <Button aria-controls=\"simple-menu\" variant=\"contained\"\n                                        style={{backgroundColor: \"#0655af\", color: \"white\"}} aria-haspopup=\"true\"\n                                        onClick={handleClick2}>\n                                    {currentUser ? currentUser.email : \"Invitado\"} <ExpandMoreIcon/>\n                                </Button>\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={handleClose}\n                                >\n                                    <MenuItem id=\"index\" onClick={e => handleClose(e.target.id)}>Inicio</MenuItem>\n                                    <MenuItem id=\"profile\" onClick={e => handleClose(e.target.id)}>Perfil</MenuItem>\n                                    <MenuItem id=\"settings\" onClick={e => handleClose(e.target.id)}>Ajustes</MenuItem>\n                                    <MenuItem id=\"logout\" onClick={e => handleClose(e.target.id)}>Cerrar\n                                        sesión</MenuItem>\n                                </Menu>\n                            </div>\n\n                        </div>\n                    </div>\n                </nav>\n            )\n\n        } else {\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img alt=\"Logo navigation\" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\"\n                                data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\">\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./Acerca\">{t('Navbar.Acerca')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" tap-index=\"-1\"\n                                             activeClassName=\"active\" area-disabled=\"true\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./Roaptomap\">{t('Navbar.RoadToMap')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" activeClassName=\"active\"\n                                             area-disabled=\"true\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./ProyectosComponent\">{t('Navbar.Proyectos')}\n                                    </NavLink>\n                                </li>\n                            </ul>\n                            <a href=\"#\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <button type=\"button\" id=\"signInButton\" className=\"navsesion btn btn-link\"\n                                        data-toggle=\"modal\" data-target=\"#signInModal\"\n                                >{t('Navbar.SignIn')}\n                                </button>\n                            </a>\n\n                            <a href=\"#\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <button type=\"button\" className=\"navsesion btn btn-link\" data-toggle=\"modal\"\n                                        data-target=\"#signUpModal\"\n                                >\n                                    {t('Navbar.SignUp')}\n                                </button>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                        </div>\n                        <SignUpModal/>\n                        <SignInModal/>\n                        <PasswordRecoveryModal/>\n                    </div>\n                </nav>\n            )\n        }\n    }\n\n    return (\n\n        <>\n            {renderNavbar()}\n        </>\n    )\n}\nexport default Navigation;","/home/snow/Documentos/ico-web-final/src/components/ProyectosComponent.jsx",["351","352","353"],"import React, {useEffect} from 'react';\nimport Celsym from \"../images/celsym.svg\";\nimport circulo1 from \"../images/circulo1.svg\";\nimport Celhawk from \"../images/celhawk.svg\";\nimport circulo2 from \"../images/circulo2.svg\";\nimport Cellyon from \"../images/cellyon.svg\";\nimport circulo3 from \"../images/circulo3.svg\";\nimport Engranaje from \"../images/engranaje.svg\";\nimport fococontorno from \"../images/fococontorno.svg\";\nimport Engrane1 from \"../images/engrane1.svg\";\nimport Engrane2 from \"../images/engrane2.svg\";\nimport Engrane3 from \"../images/engrane3.svg\";\nimport Engrane4 from \"../images/engrane4.svg\";\nimport Engrane5 from \"../images/engrane5.svg\";\nimport Engrane6 from \"../images/engrane6.svg\";\nimport Engrane7 from \"../images/engrane7.svg\";\nimport Zoom from 'react-reveal/Zoom';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from \"react-router-dom\";\nimport {useAuth} from \"../context/AuthContext\";\n\nconst ProyectosComponent = () => {\n\n    const {t} = useTranslation();\n    const {currentUser, logout} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {}\n    }, []);\n\n    return (\n        <div>\n            \n            <div className=\"row\">\n                <div className=\"col-12 sec6\">\n                    <span className=\"titulo6 \">{t('Projects.Title')}</span>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 contenedor-engra  \">\n                    <div className=\" d-flex justify-content-start \">\n                        <button className=\" btn fap-btn2 \" type=\"button\" data-toggle=\"modal\"\n                                data-target=\"#bd-example-modal-lg\">\n                                   \n                            <div className=\"modal fade modal-fullscreen bd-example-modal-lg\" id=\"bd-example-modal-lg\"\n                                 data-backdrop=\"static\" data-keyboard=\"false\"\n                                 tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\n                                 aria-hidden=\"true\">\n                                <div className=\"modal-dialog modal-xl modal-dialog-centered\">\n                                    <button hidden type=\"button\" id=\"closeSynmphonyModal\" className=\"close\" data-dismiss=\"modal\"\n                                            aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                <Zoom>\n                                    <div className=\"modal-content  modal-sym \">\n                                    \n                                        <div className=\"modal-body row container-fluid \">\n\n                                            <div className=\"col-12 col-xl-4\">\n\n                                                <img src={Celsym} alt=\"\" className=\"modal-imgsym img-fluid \"\n                                                />\n                                            </div>\n                                            <div className=\"col-12 col-xl-8\">\n\n                                                 <span className=\"modal-titu\">  {t('Projects.Symphony.ModalTitle')}\n                                                     <p className=\"modal-text\">({t('Projects.Symphony.Type')})\n                                                         <p className=\"modal-cuerpo\">\n                                                            {t('Projects.Symphony.Text')}\n                                                         </p>\n                                                     </p>\n                                                 </span>\n\n                                            </div>\n                                        </div>\n                                        \n                                    </div>\n                                    </Zoom>\n                                </div>\n                            </div>\n                            \n                            <img src={circulo1} className=\"fap-btn2-1\" alt=\"\"/>\n                            <svg className=\"svg1\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n                                 width=\"70mm\" height=\"70mm\" viewBox=\"0 0 120 120\">\n                                <circle className=\"circle1\" cx=\"60\" cy=\"60\" r=\"50\"\n                                        fill=\"transparent\"/>\n                            </svg>\n                            <p className=\"textbtn2\"> SYMPHONY</p></button>\n                        <br/>\n                        <div className=\"con-txtbtn\">\n                            <p className=\" textsyn\"><br/><br/><br/><br/>\n                                <br/><br/><br/> {t('Projects.Symphony.ModalTitle')} <br/></p><p\n                            className=\"mintext\">({t('Projects.Symphony.Type')})</p>\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 d-flex justify-content-center \">\n                        <button className=\"btn  fap-btn3  \" type=\"button\" data-toggle=\"modal\"\n                                data-target=\".bd-example-modal-lg3\">\n                            <div className=\"modal  fade modal-fullscreen bd-example-modal-lg3\" tabIndex=\"-1\" role=\"dialog\"\n                                 aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n                                <div\n                                    className=\"modal-dialog modal-cont modal-dialog-centered modal-dialog-scrollable  modal-xl \">\n                                    <div className=\" modal-content p-0 modal-sym \">\n                                        <div className=\"modal-body row container-fluid \">\n\n\n                                            <div className=\"col-lg-4 col-12 justify-content-center\">\n\n                                                <img src={Celhawk} alt=\"\" className=\"modal-imgsym img-fluid \"\n                                                />\n                                            </div>\n                                            <div className=\"col-lg-8 col-12\">\n\n                                                 <span className=\"modal-titu\"> {t('Projects.Hawk.ModalTitle')}\n                                                     <p className=\"modal-text\">{t('Projects.Hawk.Type')}\n                                                         <p className=\"modal-cuerpo\">{t('Projects.Hawk.Text')}</p>\n                                                     </p>\n                                                 </span>\n\n                                            </div>\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <img src={circulo2} className=\"fap-btn3-2\" alt=\"\"/>\n                            <svg className=\"svg2\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n                                 width=\"70mm\" height=\"70mm\" viewBox=\"0 0 120 120\">\n                                <circle cx=\"60\" className=\"circle2\" cy=\"60\" r=\"50\"\n                                        fill=\"transparent\"/>\n                            </svg>\n                            <p className=\"textbtn3\"> HAWK</p></button>\n                        <p className=\"textsyn2\"><br/> <br/> <br/>{t('Projects.Hawk.ModalTitle')}</p><p\n                        className=\" mintext2\">{t('Projects.Hawk.Type')}</p></div>\n\n\n                    <div className=\"d-flex justify-content-end\">\n\n                        <button className=\"btn   fap-btn4\"\n                                type=\"button\" data-toggle=\"modal\"\n                                data-target=\".bd-example-modal-lg2\">\n                            <div className=\"modal  fade modal-fullscreen bd-example-modal-lg2\" tabIndex=\"-1\" role=\"dialog\"\n                                 aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n                                <div className=\"modal-dialog modal-cont modal-xl\">\n                                    <div className=\" modal-content modal-sym \">\n                                        <div className=\"row container-fluid \">\n\n                                            <div className=\"col-lg-3 col-12 cont-cel\">\n\n                                                <img src={Cellyon} alt=\"\" className=\"modal-imgsym img-fluid\"\n                                                />\n                                            </div>\n                                            <div className=\"col-lg-9 col-12\">\n\n                                             <span className=\"modal-titu\"> {t('Projects.Lion.ModalTitle')}\n                                                 <p className=\"modal-text\"> {t('Projects.Lion.Type')}<p\n                                                     className=\"modal-cuerpo\">\n                                             {t('Projects.Lion.Text')}\n                                             </p></p>\n\n                                             </span>\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <img src={circulo3} className=\"fap-btn4-3\" alt=\"\"/>\n                            <svg className=\"svg3\" version=\"1.1\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 width=\"70mm\" height=\"70mm\" viewBox=\"0 0 120 120\">\n                                <circle cx=\"60\" cy=\"60\" r=\"50\"\n                                        fill=\"transparent\"/>\n                            </svg>\n                            <p className=\"textbtn4\"> LION</p>\n\n                        </button>\n                        <p className=\"textsyn3\"><br/>{t('Projects.Lion.ModalTitle')}</p><p\n                        className=\" mintext3\">{t('Projects.Lion.Type')}</p>\n                    </div>\n                    <img src={Engranaje} alt=\"\" className=\"engranaje engranejegris\"/>\n\n                    <div className=\"row\">\n                        <div className=\"col-6 focoenv-cont\">\n                            <img src={fococontorno} alt=\"foco\" className=\"focoenv\"/>\n                            <img src={Engrane1} alt=\"\" className=\"engrane1foc engranaje\"/>\n                            <img src={Engrane2} alt=\"\" className=\"engrane2foc engranaje\"/>\n                            <img src={Engrane3} alt=\"\" className=\"engrane3foc engranaje\"/>\n                            <img src={Engrane4} alt=\"\" className=\"engrane4foc engranaje\"/>\n                            <img src={Engrane5} alt=\"\" className=\"engrane5foc engranaje\"/>\n                            <img src={Engrane6} alt=\"\" className=\"engrane6foc engranaje\"/>\n                            <img src={Engrane7} alt=\"\" className=\"engrane7foc engranaje\"/>\n\n                        </div>\n                    </div>\n\n                </div>\n\n\n            </div>\n       \n        </div>\n    );\n};\n\nexport default ProyectosComponent;","/home/snow/Documentos/ico-web-final/src/routes/Proyectos.jsx",["354","355","356","357"],"import '../App.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component, useEffect, useState} from 'react';\nimport Footer from '../components/Footer';\nimport ProyectosComponent from \"../components/ProyectosComponent\";\nimport Roll from 'react-reveal/Roll';\n\n\n\nconst Proyectos = () => {\n    return (\n        \n        <div className=\"mt-5\">\n           \n            <ProyectosComponent />\n           \n            <Footer/>\n        </div>\n       \n    )\n}\n\nexport default Proyectos\n    ","/home/snow/Documentos/ico-web-final/src/config/firebase.js",[],"/home/snow/Documentos/ico-web-final/src/routes/Roaptomap.jsx",["358","359","360","361","362"],"import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component, useEffect} from \"react\";\nimport Footer from '../components/Footer';\nimport DemoCarousel from '../components/Carousel.jsx';\nimport maparoad from '../images/road-map.png';\nimport monedafinal from \"../images/monedafinal.png\";\nimport {useTranslation} from 'react-i18next';\nimport lineascar from \"../images/lineas.svg\";\nimport {useAuth} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\nconst RoaptoMapa = () => {\n    const {t} = useTranslation();\n    const {currentUser, logout} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {}\n    }, []);\n\n    return (\n\n        <div className=\" road \">\n            <div className=\"row \">\n            <img  className=\"img-fluid linea-car-1 d-flex d-md-none\"src={lineascar} alt=\"linacarrusel\"/>\n                <p className=\"text-roap-map  \">\n                    <h1 align=\"center\">ROAD MAP</h1>\n                   \n                    <p className=\"text-roap-1 d-none d-md-flex\">{t('RoadToMap.0')}</p>\n                    <p className=\"text-roap-2 d-none d-md-flex\">{t('RoadToMap.1')}</p>\n                    <p className=\"text-roap-3 d-none d-md-flex\">{t('RoadToMap.2')}</p>\n                    <p className=\"text-roap-4 d-none d-md-flex\">{t('RoadToMap.3')}</p>\n                    <p className=\"text-roap-5 d-none d-md-flex\">{t('RoadToMap.4')}</p>\n                    <p className=\"text-roap-6 d-none d-md-flex\">{t('RoadToMap.5')}</p>\n                    <p className=\"text-roap-7 d-none d-md-flex\">{t('RoadToMap.6')}</p>\n                    <p className=\"text-roap-8 d-none d-md-flex\">{t('RoadToMap.7')}</p>\n                    \n                </p>\n                \n                <img src={maparoad} className=\" d-none d-md-flex  maparoad \" alt=\"\"/>\n                 \n            </div>\n           \n<DemoCarousel/>\n            <Footer/>\n        </div>\n\n\n    )\n}\n\n\nexport default RoaptoMapa;","/home/snow/Documentos/ico-web-final/src/components/Carousel.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/Pdf.jsx",["363"],"import React, { useState} from 'react';\nimport '../App.css';\nimport '../css/whitepaper.css';\nimport Docpdf from '../docs/Avance.pdf';\nimport Loader from '../components/Loader';\n\nimport {Document, Page} from 'react-pdf';\nimport {pdfjs} from 'react-pdf';\n\nimport ControlPanel from '../components/ControlPanel';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\n\n\n\nconst Pdf = ()=>{\n    \n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [isLoading, setIsLoading] =useState(true);\n   const [scale,setScale]=useState(1.0);\n\n    function onDocumentLoadSuccess({ numPages }) {\n        setNumPages(numPages);\n        setIsLoading(false);\n      }\n   \n            return(\n             \n           <div className=\"row   \" >\n            \n            <div className=\"col-12  fondopdf p-3 d-none d-md-block\" >\n           \n            < iframe width='800' data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" className=\"google-viewer\" height='600' frameborder='0' src=\"https://firebasestorage.googleapis.com/v0/b/sunshine-ico.appspot.com/o/WHITEPAPER%20SUNI.pdf?alt=media&token=6a606197-0768-449d-b35b-e9147ce27bfe\"></iframe>\n            <Loader isLoading={isLoading}/>\n                 \n     \n              \n              \n             \n                </div>\n                <div className=\"col-12 fondopdf p-3 d-block d-md-none\" >\n               <Loader isLoading={isLoading}/>\n               <ControlPanel className=\"\"\n                 numPages={numPages}                 \n                 pageNumber={pageNumber}\n                 setPageNumber={setPageNumber} \n                 setScale={setScale}/>\n              \n              <Document className=\" pdfcontainer \"\n        file={Docpdf}\n        onLoadSuccess={onDocumentLoadSuccess}\n      >\n        <Page pageNumber={pageNumber} className=\"   \"scale={scale} />\n      </Document>\n                </div>\n                </div>\n            \n        \n            \n        );\n    }\n\n\n\n        export default Pdf;\n        ","/home/snow/Documentos/ico-web-final/src/components/Loader.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/ControlPanel.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/Acerca.jsx",["364","365","366","367","368","369","370","371","372","373","374","375"],"import React, {useState, useEffect} from \"react\";\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Footer from '../components/Footer';\nimport Linkecontact from \"../images/linkecontact.svg\";\nimport Twitercontact from \"../images/twitercontact.svg\";\nimport {db} from \"../config/firebase\";\nimport '../css/acerca.css';\nimport {useTranslation} from 'react-i18next';\nimport ACCESIBILIDAD from '../images/Accesibilidad-01.png';\nimport PRIVACIDAD from '../images/provacidad-04.png';\nimport SOLIDEZ from '../images/solidez-02.png';\nimport TRABAJOEQUIPO from '../images/trabajo en equipo-03.png';\nimport VIRY from '../images/team/VIRY.jpg';\nimport JOSS from '../images/team/JOS.jpg';\nimport CHRIS from '../images/team/CHRIS.jpg';\nimport MANU from '../images/team/MANU.jpg';\nimport CRIS from '../images/team/CRIS.jpg';\nimport Fade from 'react-reveal/Fade';\nimport Zoom from 'react-reveal/Zoom';\nimport CardsWorkers from \"../components/CardsWorkers.jsx\";\nimport {useAuth} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst Acerca = () => {\n\n    const {t} = useTranslation();\n    const [team, setTeam] = useState([]);\n    const [differencesItems, setDifferencesItems] = useState([]);\n    const {currentUser, logout} = useAuth();\n    const history = useHistory();\n\n    const fetchData = async () => {\n        const collections = ['team', 'differencesItems'];\n        await collections.forEach(element => {\n            db.collection(element)\n                .get()\n                .then(snapshot => {\n                    let tempArray = [];\n                    snapshot\n                        .docs.forEach(item => {\n                        tempArray.push(item.data());\n                    });\n                    //LA SIGUIENTE LINEA ES PARA GUARDAR LOS DATOS EN EL STATE CORRESPONDIENTE SEGUN CADA ELEMENTO DEL ARRAY \"collections\"\n                    // EJ. setTeam(tempArray) , setDifferencesItems(tempArray), etc...\n                    //NOTA: eval NO DEBERIA SER USADO PARA GUARDAR DATOS EN UNA COLECCION, AQUI SE USA PARA MOSTRAR DATOS EN EL LADO DEL CLIENTE SOLAMENTE\n                    eval(`set${element.charAt(0).toUpperCase() + element.slice(1)}`)(tempArray);\n                })\n        });\n    }\n\n    useEffect(() => {\n        //fetchData();\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {}\n    }, []);\n\n\n    const differences = [\n        {\n            image: ACCESIBILIDAD,\n            title: t('AboutSection.Differences.Items.0.Title'),\n            description: t('AboutSection.Differences.Items.0.Text')\n        },\n        {\n            image: PRIVACIDAD,\n            title: t('AboutSection.Differences.Items.1.Title'),\n            description: t('AboutSection.Differences.Items.1.Text')\n        },\n        {\n            image: SOLIDEZ,\n            title: t('AboutSection.Differences.Items.2.Title'),\n            description: t('AboutSection.Differences.Items.2.Text')\n        },\n        {\n            image: TRABAJOEQUIPO,\n            title: t('AboutSection.Differences.Items.3.Title'),\n            description: t('AboutSection.Differences.Items.3.Text')\n        }\n    ];\n\n    const team2 = [\n        {\n            image: VIRY,\n            name: t('AboutSection.Team.Items.0.Name'),\n            career: t('AboutSection.Team.Items.0.Career'),\n            description: t('AboutSection.Team.Items.0.Description'),\n            social: {\n                linkedin: \"https://mx.linkedin.com/in/viry-uribe-879b68163/\",\n                twitter: \"https://twitter.com/home?lang=es\"\n            }\n        },\n        {\n            image: JOSS,\n            name: t('AboutSection.Team.Items.1.Name'),\n            career: t('AboutSection.Team.Items.1.Career'),\n            description: t('AboutSection.Team.Items.1.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jocelyn-uribe-maldonado-720a90203/\",\n                twitter: \"https://twitter.com/jocelyn_um\"\n            }\n        },\n        {\n            image: CHRIS,\n            name: t('AboutSection.Team.Items.2.Name'),\n            career: t('AboutSection.Team.Items.2.Career'),\n            description: t('AboutSection.Team.Items.2.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/ahtziri-antonio-pe%C3%B1a-142705179/\",\n                twitter: \"\"\n            }\n        },\n        {\n            image: MANU,\n            name: t('AboutSection.Team.Items.3.Name'),\n            career: t('AboutSection.Team.Items.3.Career'),\n            description: t('AboutSection.Team.Items.3.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jose-manuel-viniegra-molina-aab9a51a8/\",\n                twitter: \"https://twitter.com/manuel87129931\"\n            }\n        },\n        {\n            image: CRIS,\n            name: t('AboutSection.Team.Items.4.Name'),\n            career: t('AboutSection.Team.Items.4.Career'),\n            description: t('AboutSection.Team.Items.4.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/cristian-augusto-armenta-garcia/\",\n                twitter: \"https://twitter.com/CRISTIANAUGUS14\"\n            }\n        }\n    ]\n\n    return (\n        <div className=\"\">\n\n\n            <div className=\"container-fluid\">\n                <Fade left cascade>\n                    <div className=\"row mt-5 mb-5 pt-5 pb-5 pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5 bg-about2\">\n                        <div className=\"col-12 mt-5  pb-5\">\n                            <h1 className=\"text-center text-preview text-size-banner\">\n                                {t('AboutSection.Title')}\n                            </h1>\n                            <hr/>\n                        </div>\n                        <div className=\"col-12 mb-5\">\n                            <p className=\"text-center mb-5 text-preview pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5\"\n                               style={{fontSize: 30}}>\n                                {t('AboutSection.Introduction.0')}\n                            </p>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"row justify-content-center\">\n\n                        <div className=\"  col-md-3 cont-card-mision  p-5 \">\n\n                            <div className=\" d-flex justify-content-center mt-5    \">\n                                <h3 className=\"title-vision \">   {t('AboutSection.Mision.Title')}</h3>\n                            </div>\n                            <div className=\"col-12 d-flex text-center \">\n                                <h5 className=\"parrafo-vision p-1\"> {t('AboutSection.Mision.description')}</h5>\n                            </div>\n                        </div>\n\n\n                        <div className=\"  col-md-3  cont-card-mision p-5 \">\n\n                            <div className=\"d-flex  justify-content-center mt-5  \">\n                                <h3 className=\"title-vision \"> {t('AboutSection.Vision.Title')}</h3>\n                            </div>\n                            <div className=\"col-12 d-flex text-center \">\n                                <h5 className=\"parrafo-vision p-1\">{t('AboutSection.Vision.description')}\n\n                                </h5>\n                            </div>\n                        </div>\n                    </div>\n                </Fade>\n\n                <div className=\"  row  pb-5  justify-content-center\">\n                    <div className=\"col-12  pt-4 pb-4\">\n                        <h1 className=\"text-size-title-differences text-center\"><Fade left\n                                                                                      cascade>{t('AboutSection.Differences.Title')}</Fade>\n                        </h1>\n                    </div>\n                    {\n                        differences.map((value, index) => (\n                            <Zoom>\n                                <div id={index}\n                                     className=\" col-12 col-sm-12 row col-lg-4 col-xl-4 cont-diferencia    \">\n                                    <img src={value.image} alt=\"\" className=\"icons-differences \"/>\n                                    <h3 className=\"text-center\">{value.title}</h3>\n                                    <p className=\"text-center\">{value.description}</p>\n                                </div>\n                            </Zoom>\n                        ))\n                    }\n\n\n                </div>\n\n\n                <CardsWorkers/>\n\n                <div className=\"container-fluid pb-5 d-block d-md-none\">\n\n                    <div className=\"container \">\n                        <div className=\"row pb-5\">\n                            {\n                                team2.map((value, index) => (\n                                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4\">\n                                        <div className=\"card text-light text-center mt-5 mb-5 bg-cards\">\n\n                                            <div className=\"card-img-top mt-5\">\n                                                <img className=\"rounded-circle img-fluid teams-images w-50\"\n                                                     src={value.image} alt=\"Card image cap\"/>\n                                            </div>\n\n                                            <div className=\"card-body mt-3 d-block\">\n                                                <h3 className=\"card-title mb-3\">{value.name}</h3>\n                                                <h6 className=\"card-subtitle mb-4\">{value.career}</h6>\n                                                <div style={{height: 120}}>\n                                                    <p className=\"card-text mb-4\">{value.description}</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"card-body border-top\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-6\">\n                                                        <a href={value.social.linkedin} target=\"_blank\">\n                                                            <img src={Linkecontact} alt=\"face\"/>\n                                                        </a>\n                                                    </div>\n                                                    <div className=\"col-6\">\n                                                        <a href={value.social.twitter || \"#\"}\n                                                           className={value.social.twitter || \"disabled\"}\n                                                           target=\"_blank\">\n                                                            <img src={Twitercontact} alt=\"face\"/>\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <button className=\"btn bg-cards text-light btn-lg btn-block\" data-toggle=\"modal\"\n                                    data-target=\"#staticBackdropcon\">{t('AboutSection.ButtonText')}</button>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n            <div className=\"container-fluid\">\n                <Footer/>\n            </div>\n\n\n        </div>\n\n\n    )\n}\n\n\nexport default Acerca;","/home/snow/Documentos/ico-web-final/src/components/CardsWorkers.jsx",[],"/home/snow/Documentos/ico-web-final/src/js/mostrarmenu.js",["376","377","378"],"import React, {Component} from 'react';\r\nimport $ from \"jquery\";\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function (e) {\r\n\r\n    let ubicacionPrincipal = window.pageYOffset;\r\n    window.onscroll = function () {\r\n        let Dezplazamiento_actual = window.pageYOffset;\r\n        if (ubicacionPrincipal >= Dezplazamiento_actual) {\r\n            document.getElementById('navbar').style.top = '0';\r\n        } else {\r\n            document.getElementById('navbar').style.top = '-100px';\r\n        }\r\n        ubicacionPrincipal = Dezplazamiento_actual;\r\n    }\r\n});\r\n","/home/snow/Documentos/ico-web-final/src/js/cuentaregresiva.js",["379"],"import '../App.css';\nimport React from 'react';\nimport Lineadias from '../images/lineadias.svg';\n\nexport default function contador(id, limitDate, finalMessage) {\n    const $contador = document.getElementById(id), contadorDate = new Date(limitDate).getTime();\n    let contadorTempo = setInterval(() => {\n        let now = new Date().getTime(),\n            limitTime = contadorDate - now,\n            days = (Math.floor(limitTime / (1000 * 60 * 60 * 24))),\n            hours = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60 * 24) / (1000 * 60 * 60))).slice(-2),\n            minutes = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60) / (1000 * 60))).slice(-2),\n            seconds = (\"0\" + Math.floor(limitTime % (1000 * 60) / (1000))).slice(-2);\n        $contador.innerHTML = `<button class=\" btn contador-fap fap-dias fap-btn \"><p class=\"num-conta\"> ${days}</p> <img src=${Lineadias} alt=\"linea\" class=\"linea-dias\"/></button> <i class=\"texto-contenedor\">\n    <br/>dias</i> \n    \n    <button class=\"btn contador-fap fap-horas fap-btn\"><p class=\"num-conta\"> ${hours}</p></button> <br/><i class=\"texto-contenedor texto-horas\">\n    <br/>horas</i>\n     <button class=\"btn contador-fap fap-minutos fap-btn \"><p class=\"num-conta\">${minutes}</p></button><br/><i class=\"texto-contenedor texto-min\">\n     <br/>minutos</i>\n    <button class=\"btn contador-fap fap-seg fap-btn\"><p class=\"num-conta\">${seconds}</p></button><br/><i class=\"texto-contenedor texto-seg\">\n    <br/>segundos</i> `\n\n        if (limitTime < 0) {\n            clearInterval(contadorTempo);\n            $contador.innerHTML = `<h1 class=\"fintokens\">${finalMessage}</h1>  `\n        }\n\n\n    }, 1000);\n\n\n}",{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","replacedBy":"383"},{"ruleId":"384","severity":1,"message":"385","line":26,"column":12,"nodeType":"386","messageId":"387","endLine":26,"endColumn":20},{"ruleId":"384","severity":1,"message":"388","line":27,"column":12,"nodeType":"386","messageId":"387","endLine":27,"endColumn":20},{"ruleId":"384","severity":1,"message":"389","line":35,"column":12,"nodeType":"386","messageId":"387","endLine":35,"endColumn":21},{"ruleId":"384","severity":1,"message":"390","line":36,"column":12,"nodeType":"386","messageId":"387","endLine":36,"endColumn":23},{"ruleId":"391","severity":1,"message":"392","line":50,"column":8,"nodeType":"393","endLine":50,"endColumn":10,"suggestions":"394"},{"ruleId":"395","severity":1,"message":"396","line":75,"column":9,"nodeType":"397","messageId":"398","endLine":75,"endColumn":13},{"ruleId":"395","severity":1,"message":"396","line":79,"column":16,"nodeType":"397","messageId":"398","endLine":79,"endColumn":20},{"ruleId":"399","severity":1,"message":"400","line":99,"column":9,"nodeType":"401","messageId":"402","endLine":206,"endColumn":10},{"ruleId":"384","severity":1,"message":"403","line":13,"column":25,"nodeType":"386","messageId":"387","endLine":13,"endColumn":31},{"ruleId":"384","severity":1,"message":"404","line":18,"column":12,"nodeType":"386","messageId":"387","endLine":18,"endColumn":22},{"ruleId":"384","severity":1,"message":"405","line":18,"column":24,"nodeType":"386","messageId":"387","endLine":18,"endColumn":37},{"ruleId":"391","severity":1,"message":"406","line":60,"column":7,"nodeType":"393","endLine":60,"endColumn":20,"suggestions":"407"},{"ruleId":"384","severity":1,"message":"408","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":20},{"ruleId":"384","severity":1,"message":"409","line":1,"column":16,"nodeType":"386","messageId":"387","endLine":1,"endColumn":24},{"ruleId":"395","severity":1,"message":"396","line":27,"column":53,"nodeType":"397","messageId":"398","endLine":27,"endColumn":57},{"ruleId":"384","severity":1,"message":"410","line":90,"column":11,"nodeType":"386","messageId":"387","endLine":90,"endColumn":16},{"ruleId":"391","severity":1,"message":"411","line":94,"column":8,"nodeType":"393","endLine":94,"endColumn":17,"suggestions":"412"},{"ruleId":"413","severity":1,"message":"414","line":118,"column":34,"nodeType":"415","messageId":"416","endLine":118,"endColumn":36},{"ruleId":"395","severity":1,"message":"396","line":120,"column":107,"nodeType":"397","messageId":"398","endLine":120,"endColumn":111},{"ruleId":"395","severity":1,"message":"396","line":120,"column":163,"nodeType":"397","messageId":"398","endLine":120,"endColumn":167},{"ruleId":"417","severity":1,"message":"418","line":164,"column":153,"nodeType":"419","endLine":164,"endColumn":242},{"ruleId":"420","severity":1,"message":"421","line":206,"column":40,"nodeType":"419","messageId":"422","endLine":206,"endColumn":130,"fix":"423"},{"ruleId":"420","severity":1,"message":"421","line":211,"column":40,"nodeType":"419","messageId":"422","endLine":211,"endColumn":125,"fix":"424"},{"ruleId":"384","severity":1,"message":"403","line":46,"column":25,"nodeType":"386","messageId":"387","endLine":46,"endColumn":31},{"ruleId":"384","severity":1,"message":"425","line":53,"column":12,"nodeType":"386","messageId":"387","endLine":53,"endColumn":20},{"ruleId":"384","severity":1,"message":"426","line":59,"column":12,"nodeType":"386","messageId":"387","endLine":59,"endColumn":27},{"ruleId":"384","severity":1,"message":"427","line":59,"column":29,"nodeType":"386","messageId":"387","endLine":59,"endColumn":47},{"ruleId":"384","severity":1,"message":"428","line":64,"column":17,"nodeType":"386","messageId":"387","endLine":64,"endColumn":22},{"ruleId":"391","severity":1,"message":"429","line":74,"column":8,"nodeType":"393","endLine":74,"endColumn":10,"suggestions":"430"},{"ruleId":"384","severity":1,"message":"431","line":161,"column":16,"nodeType":"386","messageId":"387","endLine":161,"endColumn":23},{"ruleId":"384","severity":1,"message":"432","line":161,"column":25,"nodeType":"386","messageId":"387","endLine":161,"endColumn":34},{"ruleId":"433","severity":1,"message":"434","line":213,"column":21,"nodeType":"419","endLine":214,"endColumn":60},{"ruleId":"417","severity":1,"message":"435","line":213,"column":21,"nodeType":"419","endLine":214,"endColumn":60},{"ruleId":"384","severity":1,"message":"436","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":19},{"ruleId":"384","severity":1,"message":"437","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":19},{"ruleId":"384","severity":1,"message":"438","line":17,"column":5,"nodeType":"386","messageId":"387","endLine":17,"endColumn":11},{"ruleId":"384","severity":1,"message":"439","line":19,"column":5,"nodeType":"386","messageId":"387","endLine":19,"endColumn":15},{"ruleId":"384","severity":1,"message":"440","line":21,"column":5,"nodeType":"386","messageId":"387","endLine":21,"endColumn":14},{"ruleId":"384","severity":1,"message":"441","line":22,"column":5,"nodeType":"386","messageId":"387","endLine":22,"endColumn":9},{"ruleId":"384","severity":1,"message":"442","line":23,"column":5,"nodeType":"386","messageId":"387","endLine":23,"endColumn":10},{"ruleId":"384","severity":1,"message":"443","line":57,"column":12,"nodeType":"386","messageId":"387","endLine":57,"endColumn":18},{"ruleId":"384","severity":1,"message":"444","line":63,"column":12,"nodeType":"386","messageId":"387","endLine":63,"endColumn":19},{"ruleId":"384","severity":1,"message":"445","line":72,"column":12,"nodeType":"386","messageId":"387","endLine":72,"endColumn":24},{"ruleId":"384","severity":1,"message":"446","line":73,"column":12,"nodeType":"386","messageId":"387","endLine":73,"endColumn":21},{"ruleId":"384","severity":1,"message":"447","line":74,"column":12,"nodeType":"386","messageId":"387","endLine":74,"endColumn":21},{"ruleId":"384","severity":1,"message":"448","line":74,"column":23,"nodeType":"386","messageId":"387","endLine":74,"endColumn":35},{"ruleId":"384","severity":1,"message":"449","line":76,"column":12,"nodeType":"386","messageId":"387","endLine":76,"endColumn":25},{"ruleId":"384","severity":1,"message":"450","line":77,"column":12,"nodeType":"386","messageId":"387","endLine":77,"endColumn":23},{"ruleId":"384","severity":1,"message":"451","line":77,"column":25,"nodeType":"386","messageId":"387","endLine":77,"endColumn":39},{"ruleId":"384","severity":1,"message":"452","line":81,"column":19,"nodeType":"386","messageId":"387","endLine":81,"endColumn":27},{"ruleId":"384","severity":1,"message":"428","line":86,"column":17,"nodeType":"386","messageId":"387","endLine":86,"endColumn":22},{"ruleId":"391","severity":1,"message":"453","line":105,"column":8,"nodeType":"393","endLine":105,"endColumn":22,"suggestions":"454"},{"ruleId":"399","severity":1,"message":"400","line":117,"column":21,"nodeType":"401","messageId":"402","endLine":131,"endColumn":22},{"ruleId":"455","severity":1,"message":"456","line":184,"column":29,"nodeType":"419","endLine":186,"endColumn":75},{"ruleId":"395","severity":1,"message":"396","line":279,"column":16,"nodeType":"397","messageId":"398","endLine":279,"endColumn":20},{"ruleId":"395","severity":1,"message":"396","line":283,"column":9,"nodeType":"397","messageId":"398","endLine":283,"endColumn":13},{"ruleId":"391","severity":1,"message":"457","line":43,"column":8,"nodeType":"393","endLine":43,"endColumn":47,"suggestions":"458"},{"ruleId":"384","severity":1,"message":"459","line":3,"column":17,"nodeType":"386","messageId":"387","endLine":3,"endColumn":26},{"ruleId":"384","severity":1,"message":"460","line":31,"column":25,"nodeType":"386","messageId":"387","endLine":31,"endColumn":36},{"ruleId":"384","severity":1,"message":"461","line":31,"column":46,"nodeType":"386","messageId":"387","endLine":31,"endColumn":56},{"ruleId":"384","severity":1,"message":"443","line":32,"column":12,"nodeType":"386","messageId":"387","endLine":32,"endColumn":18},{"ruleId":"384","severity":1,"message":"428","line":38,"column":17,"nodeType":"386","messageId":"387","endLine":38,"endColumn":22},{"ruleId":"391","severity":1,"message":"462","line":52,"column":8,"nodeType":"393","endLine":52,"endColumn":10,"suggestions":"463"},{"ruleId":"413","severity":1,"message":"414","line":56,"column":24,"nodeType":"415","messageId":"416","endLine":56,"endColumn":26},{"ruleId":"413","severity":1,"message":"464","line":91,"column":113,"nodeType":"415","messageId":"465","endLine":91,"endColumn":115},{"ruleId":"399","severity":1,"message":"400","line":92,"column":53,"nodeType":"401","messageId":"402","endLine":130,"endColumn":54},{"ruleId":"384","severity":1,"message":"466","line":15,"column":11,"nodeType":"386","messageId":"387","endLine":15,"endColumn":18},{"ruleId":"384","severity":1,"message":"467","line":32,"column":12,"nodeType":"386","messageId":"387","endLine":32,"endColumn":24},{"ruleId":"384","severity":1,"message":"468","line":32,"column":26,"nodeType":"386","messageId":"387","endLine":32,"endColumn":41},{"ruleId":"384","severity":1,"message":"469","line":34,"column":12,"nodeType":"386","messageId":"387","endLine":34,"endColumn":26},{"ruleId":"384","severity":1,"message":"470","line":36,"column":12,"nodeType":"386","messageId":"387","endLine":36,"endColumn":17},{"ruleId":"384","severity":1,"message":"471","line":39,"column":12,"nodeType":"386","messageId":"387","endLine":39,"endColumn":17},{"ruleId":"384","severity":1,"message":"472","line":39,"column":19,"nodeType":"386","messageId":"387","endLine":39,"endColumn":30},{"ruleId":"384","severity":1,"message":"403","line":39,"column":32,"nodeType":"386","messageId":"387","endLine":39,"endColumn":38},{"ruleId":"384","severity":1,"message":"473","line":46,"column":11,"nodeType":"386","messageId":"387","endLine":46,"endColumn":22},{"ruleId":"413","severity":1,"message":"464","line":145,"column":109,"nodeType":"415","messageId":"465","endLine":145,"endColumn":111},{"ruleId":"399","severity":1,"message":"400","line":146,"column":49,"nodeType":"401","messageId":"402","endLine":187,"endColumn":50},{"ruleId":"413","severity":1,"message":"414","line":293,"column":53,"nodeType":"474","messageId":"475","endLine":293,"endColumn":59},{"ruleId":"455","severity":1,"message":"456","line":8,"column":17,"nodeType":"419","endLine":10,"endColumn":41},{"ruleId":"476","severity":1,"message":"477","line":78,"column":17,"nodeType":"419","endLine":78,"endColumn":92},{"ruleId":"384","severity":1,"message":"409","line":1,"column":43,"nodeType":"386","messageId":"387","endLine":1,"endColumn":51},{"ruleId":"384","severity":1,"message":"428","line":29,"column":17,"nodeType":"386","messageId":"387","endLine":29,"endColumn":22},{"ruleId":"391","severity":1,"message":"478","line":33,"column":8,"nodeType":"393","endLine":33,"endColumn":10,"suggestions":"479"},{"ruleId":"480","severity":1,"message":"481","line":36,"column":42,"nodeType":"482","messageId":"483","endLine":36,"endColumn":54},{"ruleId":"476","severity":1,"message":"477","line":40,"column":21,"nodeType":"419","endLine":40,"endColumn":78},{"ruleId":"417","severity":1,"message":"435","line":91,"column":29,"nodeType":"419","endLine":92,"endColumn":91},{"ruleId":"417","severity":1,"message":"435","line":96,"column":29,"nodeType":"419","endLine":97,"endColumn":91},{"ruleId":"417","severity":1,"message":"435","line":164,"column":29,"nodeType":"419","endLine":164,"endColumn":100},{"ruleId":"417","severity":1,"message":"435","line":171,"column":29,"nodeType":"419","endLine":171,"endColumn":100},{"ruleId":"417","severity":1,"message":"435","line":179,"column":29,"nodeType":"419","endLine":180,"endColumn":91},{"ruleId":"417","severity":1,"message":"435","line":184,"column":29,"nodeType":"419","endLine":185,"endColumn":91},{"ruleId":"384","severity":1,"message":"403","line":25,"column":25,"nodeType":"386","messageId":"387","endLine":25,"endColumn":31},{"ruleId":"384","severity":1,"message":"428","line":30,"column":17,"nodeType":"386","messageId":"387","endLine":30,"endColumn":22},{"ruleId":"391","severity":1,"message":"478","line":33,"column":8,"nodeType":"393","endLine":33,"endColumn":10,"suggestions":"484"},{"ruleId":"384","severity":1,"message":"485","line":4,"column":16,"nodeType":"386","messageId":"387","endLine":4,"endColumn":25},{"ruleId":"384","severity":1,"message":"486","line":4,"column":27,"nodeType":"386","messageId":"387","endLine":4,"endColumn":36},{"ruleId":"384","severity":1,"message":"409","line":4,"column":38,"nodeType":"386","messageId":"387","endLine":4,"endColumn":46},{"ruleId":"384","severity":1,"message":"487","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":12},{"ruleId":"384","severity":1,"message":"485","line":3,"column":16,"nodeType":"386","messageId":"387","endLine":3,"endColumn":25},{"ruleId":"384","severity":1,"message":"488","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":19},{"ruleId":"384","severity":1,"message":"403","line":15,"column":25,"nodeType":"386","messageId":"387","endLine":15,"endColumn":31},{"ruleId":"384","severity":1,"message":"428","line":20,"column":17,"nodeType":"386","messageId":"387","endLine":20,"endColumn":22},{"ruleId":"391","severity":1,"message":"478","line":23,"column":8,"nodeType":"393","endLine":23,"endColumn":10,"suggestions":"489"},{"ruleId":"455","severity":1,"message":"456","line":34,"column":13,"nodeType":"419","endLine":34,"endColumn":300},{"ruleId":"384","severity":1,"message":"490","line":29,"column":12,"nodeType":"386","messageId":"387","endLine":29,"endColumn":16},{"ruleId":"384","severity":1,"message":"491","line":29,"column":18,"nodeType":"386","messageId":"387","endLine":29,"endColumn":25},{"ruleId":"384","severity":1,"message":"492","line":30,"column":12,"nodeType":"386","messageId":"387","endLine":30,"endColumn":28},{"ruleId":"384","severity":1,"message":"493","line":30,"column":30,"nodeType":"386","messageId":"387","endLine":30,"endColumn":49},{"ruleId":"384","severity":1,"message":"403","line":31,"column":25,"nodeType":"386","messageId":"387","endLine":31,"endColumn":31},{"ruleId":"384","severity":1,"message":"494","line":34,"column":11,"nodeType":"386","messageId":"387","endLine":34,"endColumn":20},{"ruleId":"395","severity":1,"message":"396","line":48,"column":21,"nodeType":"397","messageId":"398","endLine":48,"endColumn":25},{"ruleId":"384","severity":1,"message":"428","line":56,"column":17,"nodeType":"386","messageId":"387","endLine":56,"endColumn":22},{"ruleId":"391","severity":1,"message":"478","line":59,"column":8,"nodeType":"393","endLine":59,"endColumn":10,"suggestions":"495"},{"ruleId":"496","severity":1,"message":"497","line":223,"column":49,"nodeType":"419","endLine":224,"endColumn":94},{"ruleId":"420","severity":1,"message":"421","line":237,"column":57,"nodeType":"419","messageId":"422","endLine":237,"endColumn":105,"fix":"498"},{"ruleId":"420","severity":1,"message":"421","line":242,"column":57,"nodeType":"419","messageId":"422","endLine":244,"endColumn":76,"fix":"499"},{"ruleId":"384","severity":1,"message":"500","line":1,"column":8,"nodeType":"386","messageId":"387","endLine":1,"endColumn":13},{"ruleId":"384","severity":1,"message":"485","line":1,"column":16,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"501","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":9},{"ruleId":"384","severity":1,"message":"500","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":13},"no-native-reassign",["502"],"no-negated-in-lhs",["503"],"no-unused-vars","'mxnToUsd' is assigned a value but never used.","Identifier","unusedVar","'trxToUsd' is assigned a value but never used.","'paymentID' is assigned a value but never used.","'paymentDone' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allData.address', 'allData.addressToken', 'allData.city', 'allData.country', 'allData.lastname', 'allData.name', and 'allData.state'. Either include them or remove the dependency array. If 'setName' needs the current value of 'allData.name', you can also switch to useReducer instead of useState and read 'allData.name' in the reducer.","ArrayExpression",["504"],"no-eval","eval can be harmful.","CallExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'logout' is assigned a value but never used.","'cryptoData' is assigned a value but never used.","'setCryptoData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["505"],"'NumberFormat' is defined but never used.","'useState' is defined but never used.","'theme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveTransactions'. Either include it or remove the dependency array.",["506"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"507","text":"508"},{"range":"509","text":"508"},"'userInfo' is assigned a value but never used.","'tokenPrivateKey' is assigned a value but never used.","'setTokenPrivateKey' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.uid', and 'history'. Either include them or remove the dependency array.",["510"],"'facing2' is assigned a value but never used.","'setFacing' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'CardHeader' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'logged' is assigned a value but never used.","'country' is assigned a value but never used.","'countriesAPI' is assigned a value but never used.","'statesAPI' is assigned a value but never used.","'citiesAPI' is assigned a value but never used.","'setCitiesAPI' is assigned a value but never used.","'fileFirestore' is assigned a value but never used.","'uploadValue' is assigned a value but never used.","'setUploadValue' is assigned a value but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.emailVerified', 'currentUser.uid', 'getCountriesAPI', 'getUserData', 'history', and 'logout'. Either include them or remove the dependency array.",["511"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useCallback has a missing dependency: 'setStates'. Either include it or remove the dependency array. If 'setStates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["512"],"'TextField' is defined but never used.","'getAuthType' is assigned a value but never used.","'credential' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.emailVerified', 'currentUser.providerData', 'history', and 'logout'. Either include them or remove the dependency array.",["513"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'history' is assigned a value but never used.","'lastPassword' is assigned a value but never used.","'setLastPassword' is assigned a value but never used.","'repeatPassword' is assigned a value but never used.","'ready' is assigned a value but never used.","'login' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'verifyToken' is assigned a value but never used.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'currentUser.email' and 'history'. Either include them or remove the dependency array.",["514"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["515"],"'Component' is defined but never used.","'useEffect' is defined but never used.","'Roll' is defined but never used.","'monedafinal' is defined but never used.",["516"],"'team' is assigned a value but never used.","'setTeam' is assigned a value but never used.","'differencesItems' is assigned a value but never used.","'setDifferencesItems' is assigned a value but never used.","'fetchData' is assigned a value but never used.",["517"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"518","text":"508"},{"range":"519","text":"508"},"'React' is defined but never used.","'$' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},[8084,8084]," rel=\"noreferrer\"",[8426,8426],{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"534","fix":"536"},{"desc":"534","fix":"537"},{"desc":"534","fix":"538"},[10308,10308],[10877,10877],"Update the dependencies array to be: [allData.address, allData.addressToken, allData.city, allData.country, allData.lastname, allData.name, allData.state]",{"range":"539","text":"540"},"Update the dependencies array to be: [currentUser, history]",{"range":"541","text":"542"},"Update the dependencies array to be: [address, retrieveTransactions]",{"range":"543","text":"544"},"Update the dependencies array to be: [currentUser.email, currentUser.uid, history]",{"range":"545","text":"546"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",{"range":"547","text":"548"},"Update the dependencies array to be: [imageSrc, croppedAreaPixels, rotation, setStates]",{"range":"549","text":"550"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, currentUser.providerData, history, logout]",{"range":"551","text":"552"},"Update the dependencies array to be: [currentUser.email, history]",{"range":"553","text":"554"},{"range":"555","text":"554"},{"range":"556","text":"554"},{"range":"557","text":"554"},[2204,2206],"[allData.address, allData.addressToken, allData.city, allData.country, allData.lastname, allData.name, allData.state]",[2049,2062],"[currentUser, history]",[3086,3095],"[address, retrieveTransactions]",[2749,2751],"[currentUser.email, currentUser.uid, history]",[3737,3751],"[currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",[1635,1674],"[imageSrc, croppedAreaPixels, rotation, setStates]",[1756,1758],"[currentUser.email, currentUser.emailVerified, currentUser.providerData, history, logout]",[1282,1284],"[currentUser.email, history]",[1215,1217],[780,782],[2413,2415]]