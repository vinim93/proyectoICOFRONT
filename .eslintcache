[{"/home/snow/Documentos/ico-web-final/src/index.js":"1","/home/snow/Documentos/ico-web-final/src/App.js":"2","/home/snow/Documentos/ico-web-final/src/i18n.js":"3","/home/snow/Documentos/ico-web-final/src/apis/SunshineFinder.js":"4","/home/snow/Documentos/ico-web-final/src/apis/CoingeckoFinder.js":"5","/home/snow/Documentos/ico-web-final/src/apis/PlacesFinder.js":"6","/home/snow/Documentos/ico-web-final/src/apis/TronscanFinder.js":"7","/home/snow/Documentos/ico-web-final/src/components/dashboard/DollarMarktComponent.jsx":"8","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Checkout.jsx":"9","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/AddressForm.jsx":"10","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/PaymentForm.jsx":"11","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Review.jsx":"12","/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/TokenAmount.jsx":"13","/home/snow/Documentos/ico-web-final/src/components/dashboard/PaymentComponent.jsx":"14","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Dashboard.jsx":"15","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/HeaderCards.jsx":"16","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/CryptoList.jsx":"17","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/TransactionsHistory.jsx":"18","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Wallet.jsx":"19","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Profile.jsx":"20","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/ExpansionComponent.jsx":"21","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/UploadImage.jsx":"22","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/PersonalData.jsx":"23","/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/VerifiedProfile.jsx":"24","/home/snow/Documentos/ico-web-final/src/routes/dashboard/Settings.jsx":"25","/home/snow/Documentos/ico-web-final/src/components/dashboard/settings/ChangePassword.jsx":"26","/home/snow/Documentos/ico-web-final/src/components/dashboard/PurchaseHistoryComponent.jsx":"27","/home/snow/Documentos/ico-web-final/src/context/AuthContext.jsx":"28","/home/snow/Documentos/ico-web-final/src/config/Particles-config.js":"29","/home/snow/Documentos/ico-web-final/src/components/PasswordRecoveryModal.jsx":"30","/home/snow/Documentos/ico-web-final/src/components/SignUpModal.jsx":"31","/home/snow/Documentos/ico-web-final/src/components/SignInModal.jsx":"32","/home/snow/Documentos/ico-web-final/src/components/dashboard/js/canvasUtils.js":"33","/home/snow/Documentos/ico-web-final/src/components/dashboard/js/encrypt.js":"34","/home/snow/Documentos/ico-web-final/src/components/Video.jsx":"35","/home/snow/Documentos/ico-web-final/src/components/Countdown.jsx":"36","/home/snow/Documentos/ico-web-final/src/components/Soporte.jsx":"37","/home/snow/Documentos/ico-web-final/src/components/PreguntasFrecuentes.jsx":"38","/home/snow/Documentos/ico-web-final/src/components/Newsletter.jsx":"39","/home/snow/Documentos/ico-web-final/src/components/Ventajas.jsx":"40","/home/snow/Documentos/ico-web-final/src/components/MapaApp.jsx":"41","/home/snow/Documentos/ico-web-final/src/components/WhitepaperHome.jsx":"42","/home/snow/Documentos/ico-web-final/src/routes/Home.jsx":"43","/home/snow/Documentos/ico-web-final/src/components/Banner.jsx":"44","/home/snow/Documentos/ico-web-final/src/components/Footer.jsx":"45","/home/snow/Documentos/ico-web-final/src/components/Navigation.jsx":"46","/home/snow/Documentos/ico-web-final/src/components/ProyectosComponent.jsx":"47","/home/snow/Documentos/ico-web-final/src/routes/Proyectos.jsx":"48","/home/snow/Documentos/ico-web-final/src/config/firebase.js":"49","/home/snow/Documentos/ico-web-final/src/routes/Roaptomap.jsx":"50","/home/snow/Documentos/ico-web-final/src/components/Carousel.jsx":"51","/home/snow/Documentos/ico-web-final/src/routes/Pdf.jsx":"52","/home/snow/Documentos/ico-web-final/src/components/Loader.jsx":"53","/home/snow/Documentos/ico-web-final/src/components/ControlPanel.jsx":"54","/home/snow/Documentos/ico-web-final/src/routes/Acerca.jsx":"55","/home/snow/Documentos/ico-web-final/src/components/CardsWorkers.jsx":"56","/home/snow/Documentos/ico-web-final/src/js/mostrarmenu.js":"57","/home/snow/Documentos/ico-web-final/src/js/cuentaregresiva.js":"58","/home/snow/Documentos/ico-web-final/src/context/CheckoutContext.jsx":"59","/home/snow/Documentos/ico-web-final/src/context/ProfileContext.jsx":"60"},{"size":296,"mtime":1626125393939,"results":"61","hashOfConfig":"62"},{"size":2368,"mtime":1627415720329,"results":"63","hashOfConfig":"62"},{"size":1645,"mtime":1621626270725,"results":"64","hashOfConfig":"62"},{"size":139,"mtime":1626796331916,"results":"65","hashOfConfig":"62"},{"size":104,"mtime":1624906925521,"results":"66","hashOfConfig":"62"},{"size":113,"mtime":1624907114457,"results":"67","hashOfConfig":"62"},{"size":107,"mtime":1624907189001,"results":"68","hashOfConfig":"62"},{"size":3059,"mtime":1627329496339,"results":"69","hashOfConfig":"62"},{"size":15097,"mtime":1627406871281,"results":"70","hashOfConfig":"62"},{"size":3375,"mtime":1627397572365,"results":"71","hashOfConfig":"62"},{"size":3196,"mtime":1627408623089,"results":"72","hashOfConfig":"62"},{"size":17198,"mtime":1627412639101,"results":"73","hashOfConfig":"62"},{"size":5031,"mtime":1627399593373,"results":"74","hashOfConfig":"62"},{"size":2482,"mtime":1627334200259,"results":"75","hashOfConfig":"62"},{"size":3967,"mtime":1627329407263,"results":"76","hashOfConfig":"62"},{"size":2315,"mtime":1624565577152,"results":"77","hashOfConfig":"62"},{"size":3441,"mtime":1627421422138,"results":"78","hashOfConfig":"62"},{"size":9994,"mtime":1627421572478,"results":"79","hashOfConfig":"62"},{"size":25535,"mtime":1627421811562,"results":"80","hashOfConfig":"62"},{"size":17206,"mtime":1627420157645,"results":"81","hashOfConfig":"62"},{"size":2261,"mtime":1627420094233,"results":"82","hashOfConfig":"62"},{"size":8049,"mtime":1627420094385,"results":"83","hashOfConfig":"62"},{"size":16204,"mtime":1627420094109,"results":"84","hashOfConfig":"62"},{"size":9711,"mtime":1627420094329,"results":"85","hashOfConfig":"62"},{"size":2966,"mtime":1624909183293,"results":"86","hashOfConfig":"62"},{"size":10246,"mtime":1624565577904,"results":"87","hashOfConfig":"62"},{"size":14003,"mtime":1627329889611,"results":"88","hashOfConfig":"62"},{"size":1703,"mtime":1627421690182,"results":"89","hashOfConfig":"62"},{"size":2358,"mtime":1621626270673,"results":"90","hashOfConfig":"62"},{"size":3940,"mtime":1626895090227,"results":"91","hashOfConfig":"62"},{"size":27547,"mtime":1626896231859,"results":"92","hashOfConfig":"62"},{"size":16257,"mtime":1626895486171,"results":"93","hashOfConfig":"62"},{"size":2388,"mtime":1621626640957,"results":"94","hashOfConfig":"62"},{"size":317,"mtime":1621626640957,"results":"95","hashOfConfig":"62"},{"size":519,"mtime":1627326425543,"results":"96","hashOfConfig":"62"},{"size":1637,"mtime":1627326504643,"results":"97","hashOfConfig":"62"},{"size":1395,"mtime":1627326700175,"results":"98","hashOfConfig":"62"},{"size":2765,"mtime":1627326722047,"results":"99","hashOfConfig":"62"},{"size":529,"mtime":1627326740991,"results":"100","hashOfConfig":"62"},{"size":2970,"mtime":1627327057391,"results":"101","hashOfConfig":"62"},{"size":9387,"mtime":1627327002207,"results":"102","hashOfConfig":"62"},{"size":777,"mtime":1627327069423,"results":"103","hashOfConfig":"62"},{"size":1973,"mtime":1627326425399,"results":"104","hashOfConfig":"62"},{"size":2113,"mtime":1626893769443,"results":"105","hashOfConfig":"62"},{"size":8248,"mtime":1627327205939,"results":"106","hashOfConfig":"62"},{"size":9666,"mtime":1626894689183,"results":"107","hashOfConfig":"62"},{"size":11260,"mtime":1627326666227,"results":"108","hashOfConfig":"62"},{"size":430,"mtime":1627327279875,"results":"109","hashOfConfig":"62"},{"size":633,"mtime":1624990558028,"results":"110","hashOfConfig":"62"},{"size":1936,"mtime":1627327833699,"results":"111","hashOfConfig":"62"},{"size":2790,"mtime":1626894203323,"results":"112","hashOfConfig":"62"},{"size":1971,"mtime":1627327259979,"results":"113","hashOfConfig":"62"},{"size":449,"mtime":1624978343384,"results":"114","hashOfConfig":"62"},{"size":1821,"mtime":1626894229887,"results":"115","hashOfConfig":"62"},{"size":10790,"mtime":1627329171607,"results":"116","hashOfConfig":"62"},{"size":5481,"mtime":1626894015835,"results":"117","hashOfConfig":"62"},{"size":565,"mtime":1624910189605,"results":"118","hashOfConfig":"62"},{"size":1655,"mtime":1624916558231,"results":"119","hashOfConfig":"62"},{"size":1902,"mtime":1627402345833,"results":"120","hashOfConfig":"62"},{"size":1788,"mtime":1627419771281,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"11dj60e",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"245","usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/snow/Documentos/ico-web-final/src/index.js",[],["258","259"],"/home/snow/Documentos/ico-web-final/src/App.js",[],"/home/snow/Documentos/ico-web-final/src/i18n.js",[],"/home/snow/Documentos/ico-web-final/src/apis/SunshineFinder.js",[],"/home/snow/Documentos/ico-web-final/src/apis/CoingeckoFinder.js",[],"/home/snow/Documentos/ico-web-final/src/apis/PlacesFinder.js",[],"/home/snow/Documentos/ico-web-final/src/apis/TronscanFinder.js",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/DollarMarktComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Checkout.jsx",["260","261"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/AddressForm.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/PaymentForm.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/Review.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/checkout/TokenAmount.jsx",["262"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/PaymentComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/dashboard/Dashboard.jsx",["263"],"import React, {useState, useEffect} from 'react';\nimport {useAuth} from \"../../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\nimport moneda_dashboard from \"../../images/moneda-dashboard.svg\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DollarMarktComponent from \"../../components/dashboard/DollarMarktComponent\";\nimport PaymentComponent from \"../../components/dashboard/PaymentComponent\";\nimport {db} from \"../../config/firebase\";\nimport PurchaseHistoryComponent from \"../../components/dashboard/PurchaseHistoryComponent\";\nimport SunshineFinder from \"../../apis/SunshineFinder\";\n\nconst Dashboard = () => {\n    const {currentUser} = useAuth();\n    const [signinEmail, setSigninEmail] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const [logged, setLogged] = useState(false);\n    const [userInfo, setUserInfo] = useState({});\n    const history = useHistory();\n\n    const getUserData = async(id) => {\n        try{\n            let docRef = db.collection('credentials').doc(id);\n            await docRef.onSnapshot(doc => {\n                if(doc.exists){\n                    setUserInfo(doc.data());\n                }\n            });\n            await SunshineFinder.get(\"/get-tuah\", {\n                params: {\n                    uid: id\n                }\n            }).then(response => {\n                setAmount(response.data.amount);\n            }).catch(e => {\n\n            });\n        } catch (e) {\n\n        }\n    }\n\n    useEffect(() => {\n        try{\n            let email = currentUser.email;\n            let id = currentUser.uid;\n            setSigninEmail(email);\n            setUid(id);\n            setLogged(true);\n            history.push(\"/\");\n            getUserData(id);\n        } catch (e) {\n\n            setSigninEmail(\"\");\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    },[currentUser]);\n\n\n    const renderData = () => {\n        if(logged && Object.keys(userInfo).length !== 0){\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"row mt-5\">\n\n                        <div className=\"col-12 mt-5 d-flex justify-content-center\">\n                            <img src={moneda_dashboard} className=\"img-fluid\" style={{width: 400}} alt=\"MONEDA-SUNSHINE\"/>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center\">\n                            <h1>\n                                {signinEmail ? (amount.toString().slice(0, amount.toString().length-6) + \".\" + amount.toString().slice(amount.toString().length-6)) : \"Invitado\"}\n                                <br/>SUNIS</h1>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center mt-5\">\n                            <button className=\"material\" data-toggle=\"modal\" data-target=\"#exampleModal\">Mercado de criptos<ExpandMoreIcon style={{ fontSize: 40 }} /> </button>\n                        </div>\n\n                        <div className=\"col-12\">\n                            <button className=\"btn material2 ml-3 mr-3\" data-toggle=\"modal\" data-target=\"#paymentModal\" data-backdrop='static' data-keyboard='false'>Comprar</button>\n                            <a className=\"btn material2 ml-3 mr-3\" href=\"Wallet\">Wallet</a>\n                        </div>\n\n                        <DollarMarktComponent />\n                        <PaymentComponent email={signinEmail} userData={uid} allData={userInfo} />\n\n                    </div>\n\n                    <div className=\"row mt-5\">\n                        <PurchaseHistoryComponent uid={uid} />\n                    </div>\n\n                </div>\n\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <div className=\"container-fluid fondo-dashboard\">\n            {renderData()}\n        </div>\n    )\n\n};\n\nexport default Dashboard;","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/HeaderCards.jsx",["264"],"import React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\nimport NumberFormat from \"react-number-format\";\n\nconst Header = ({tokensNumber}) => {\n    return (\n        <>\n            <div className=\"header pb-8 pt-5 pt-md-8\" style={{backgroundColor: \"#ffffff\"}}>\n                <Container fluid>\n                    <div className=\"header-body\">\n                        {/* Card stats */}\n                        <Row>\n                            <Col lg=\"12\" xl=\"12\">\n                                <Card className=\"card-stats mb-4 mb-xl-0 bg-gradient-default\">\n                                    <CardBody>\n                                        <Row>\n                                            <div className=\"col\">\n                                                <CardTitle\n                                                    tag=\"h6\"\n                                                    className=\"text-uppercase text-muted mb-0 text-light\"\n                                                >\n                                                    Número de SUN tokens\n                                                </CardTitle>\n                                                <span className=\"h5 font-weight-bold mb-0 text-light\">\n                                                     {tokensNumber.toString().slice(0, tokensNumber.toString().length-6) + \".\" + tokensNumber.toString().slice(tokensNumber.toString().length-6)}\n                                                </span>\n                                            </div>\n                                            <Col className=\"col-auto\">\n                                                <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                                                    <i className=\"fas fa-users\" />\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default Header;\n","/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/CryptoList.jsx",["265"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/wallet/TransactionsHistory.jsx",["266","267","268","269","270","271"],"/home/snow/Documentos/ico-web-final/src/routes/dashboard/Wallet.jsx",["272","273","274","275","276","277","278"],"/home/snow/Documentos/ico-web-final/src/routes/dashboard/Profile.jsx",["279","280","281","282","283"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/ExpansionComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/UploadImage.jsx",["284"],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/PersonalData.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/profile/VerifiedProfile.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/dashboard/Settings.jsx",["285","286","287","288","289","290"],"import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChangePassword from \"../../components/dashboard/settings/ChangePassword\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function Settings() {\n    const classes = useStyles();\n    const [expanded, setExpanded] = useState(false);\n    const {currentUser, getAuthType, logout, credential} = useAuth();\n    const [logged, setLogged] = useState(false);\n    const [hasPassword, setHasPassword] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            if (!currentUser.emailVerified) {\n                setLogged(false);\n                logout();\n                history.push(\"/Home\");\n            } else {\n                setLogged(true);\n                history.push(\"/Settings\");\n                verifyAuthType(currentUser.providerData);\n            }\n        } catch (e) {\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    }, []);\n\n\n    const verifyAuthType = data => {\n        data.map(value => {\n            if (value.providerId === \"password\"){\n                setHasPassword(true);\n            }\n        });\n    }\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    return (\n        <div className=\"mt-5 pt-5 contenedor-profile px-2 px-md-5\">\n            <Accordion className=\"mt-3\" expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                >\n                    <Typography className={classes.heading}>Contraseña</Typography>\n                    <Typography className={classes.secondaryHeading}>Cambia tu contraseña</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {hasPassword ? <ChangePassword /> : <h5 style={{marginLeft: 40}}>No puedes cambiar tu contraseña porque elegiste iniciar sesión con Google</h5>}\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","/home/snow/Documentos/ico-web-final/src/components/dashboard/settings/ChangePassword.jsx",["291","292"],"import React, {useState} from 'react';\nimport {Button, TextField} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport firebase from \"firebase\";\nimport swal from \"sweetalert\";\nimport passwordValidator from \"password-validator\";\nimport swal2 from '@sweetalert/with-react';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst ChangePassword = () => {\n\n    const [lastPassword, setLastPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [repeatPassword, setRepeatPassword] = useState(\"\");\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const verifyLastPassword = async () => {\n        let result = false;\n        try{\n            let user = firebase.auth().currentUser;\n            let credential = firebase.auth.EmailAuthProvider.credential(\n                firebase.auth().currentUser.email,\n                lastPassword\n            );\n\n            await user.reauthenticateWithCredential(credential).then(() => {\n                result = true;\n            });\n        } catch (e) {\n            swal({\n                title: \"Contraseña actual incorrecta\",\n                text: \"La contraseña proporcionada como actual no es correcta, intenta de nuevo\",\n                icon: \"warning\",\n                button: \"¡Entendido!\",\n                closeOnClickOutside: false\n            });\n        }\n        return result;\n\n    }\n\n    const clearInputs = () => {\n        setNewPassword(\"\");\n        setRepeatPassword(\"\");\n        setLastPassword(\"\");\n    }\n\n    const handleChangePassword = async (e) => {\n        e.preventDefault();\n        setOpen(true);\n        try{\n            if(await verifyLastPassword()){\n                if(newPassword === repeatPassword) {\n\n                    let schema = new passwordValidator();\n                    schema\n                        .is().min(8)\n                        .is().max(100)\n                        .has().uppercase()\n                        .has().lowercase()\n                        .has().digits(1)\n                        .has().not().spaces();\n\n                    if(schema.validate(newPassword)){\n                        let user = firebase.auth().currentUser;\n                        await user.updatePassword(newPassword).then(() => {\n                            clearInputs();\n                            swal({\n                                title: \"Contraseña cambiada exitosamente\",\n                                text: \"Ahora puedes iniciar sesión con tu nueva contraseña\",\n                                icon: \"success\",\n                                button: \"¡Entendido!\",\n                                closeOnClickOutside: false\n                            });\n                        });\n                    } else {\n                        swal2({\n                            text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                            closeOnClickOutside: false,\n                            buttons: {\n                                cancel: \"Entendido\",\n                            },\n                            content: (\n                                <div className=\"container\">\n                                    <div className=\"row\">\n                                        <ul>\n                                            {\n                                                schema.validate(newPassword, {list: true}).map((element, index) => {\n                                                    switch (element) {\n                                                        case 'min':\n\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                            )\n\n                                                        case 'max':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                            )\n\n                                                        case 'uppercase':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo una letra mayuscula</p></li>\n                                                            )\n\n                                                        case 'lowercase':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo 1 letra minuscula</p></li>\n                                                            )\n\n                                                        case 'spaces':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">No debe contener espacios</p></li>\n                                                            )\n\n                                                        case 'digits':\n                                                            return (\n                                                                <li key={index} className=\"text-dark text-justify\"><p\n                                                                    className=\"text-danger\">Mínimo 1 número</p></li>\n                                                            )\n\n                                                    }\n\n                                                })\n                                            }\n                                        </ul>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                } else {\n                    swal({\n                        title: \"Las contraseñas no coinciden\",\n                        text: \"Asegurate de que las contraseñas nuevas sean las mismas\",\n                        icon: \"info\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n            }\n        } catch (e) {\n\n\n        }\n        setOpen(false);\n\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleChangePassword}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 mb-3\">\n                            <TextField variant=\"outlined\"\n                                       required\n                                       fullWidth\n                                       id=\"outlined-basic\"\n                                       label=\"Contraseña anterior\"\n                                       type={\"password\"}\n                                       style={{alignContent: \"center\"}}\n                                       value={lastPassword}\n                                       onChange={e => setLastPassword(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <TextField variant=\"outlined\"\n                                       required\n                                       fullWidth\n                                       id=\"outlined-basic\"\n                                       label=\"Contraseña nueva\"\n                                       type={\"password\"}\n                                       style={{alignContent: \"center\"}}\n                                       value={newPassword}\n                                       onChange={e => setNewPassword(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <TextField variant=\"outlined\"\n                                       required\n                                       fullWidth\n                                       id=\"outlined-basic\"\n                                       label=\"Repetir contraseña nueva\"\n                                       type={\"password\"}\n                                       style={{alignContent: \"center\"}}\n                                       value={repeatPassword}\n                                       onChange={e => setRepeatPassword(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-12\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                startIcon={<SaveIcon/>}\n                                type={\"submit\"}\n                            >\n                                Cambiar contraseña\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n};\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\nexport default ChangePassword;","/home/snow/Documentos/ico-web-final/src/components/dashboard/PurchaseHistoryComponent.jsx",[],"/home/snow/Documentos/ico-web-final/src/context/AuthContext.jsx",[],"/home/snow/Documentos/ico-web-final/src/config/Particles-config.js",[],"/home/snow/Documentos/ico-web-final/src/components/PasswordRecoveryModal.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/SignUpModal.jsx",["293"],"import React, {useState} from 'react';\nimport \"./navbar/css/styles.css\"\nimport 'react-phone-number-input/style.css'\nimport {db, auth} from \"../config/firebase\";\nimport swal from \"sweetalert\";\nimport swal2 from '@sweetalert/with-react';\nimport firebase from 'firebase';\nimport \"firebase/auth\";\nimport GoogleButton from \"react-google-button\";\nimport passwordValidator from \"password-validator\";\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {useHistory} from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SunshineFinder from \"../apis/SunshineFinder\";\nrequire('dotenv').config();\n\n\nconst SignUpModal = () => {\n\n    const sendReCAPTCHAValue = async (value) => {\n        const response = await SunshineFinder.post(\"/api/recaptcha\", {\n            captchaValue: value\n        });\n\n        if (response.data.status === \"success\") {\n            setVerifiedCaptcha(true);\n        }\n\n    }\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [apellido, setApellido] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatedPassword, setRepeteadPassword] = useState(\"\");\n    const [checkedValue, setCheckedValue] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [verifiedCaptcha, setVerifiedCaptcha] = useState(false);\n    const history = useHistory();\n\n    //VALIDATIONS\n    const validations = {\n        requiredFields: () => {\n            return (name !== '' && email !== '' && password !== '' && apellido !== '')\n        }\n    }\n\n    const handleCheckboxState = (e) => {\n        setCheckedValue(e.target.checked);\n    }\n\n    const saveDataInFirestore = (uid, data = {}) => {\n        if (Object.keys(data).length > 0) {\n            /*============GUARDAR DATOS EN FIRESTORE CON GOOGLE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: data.city.replace(/<[^>]+>/g, ''),\n                doc: \"\".replace(/<[^>]+>/g, ''),\n                email: data.email.replace(/<[^>]+>/g, ''),\n                name: data.name.replace(/<[^>]+>/g, ''),\n                phone: data.phone === null ? \"\".replace(/<[^>]+>/g, '') : data.phone.replace(/<[^>]+>/g, ''),\n                authType: data.authType.replace(/<[^>]+>/g, ''),\n                birthday: data.birthday.replace(/<[^>]+>/g, ''),\n                country: data.country.replace(/<[^>]+>/g, ''),\n                state: data.state.replace(/<[^>]+>/g, ''),\n                address: data.address.replace(/<[^>]+>/g, ''),\n                suns: 0,\n                countryComplete: data.countryComplete.replace(/<[^>]+>/g, ''),\n                profileStatus: data.profileStatus,\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n                addressToken: \"\",\n                privateKey: \"\"\n            }).then(docRef => {\n                history.push(\"/\");\n                window.location.reload();\n                clearStates();\n            }).catch((error) => {\n\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        } else {\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: \"\".replace(/<[^>]+>/g, ''),\n                doc: \"\".replace(/<[^>]+>/g, ''),\n                email: email.replace(/<[^>]+>/g, ''),\n                name: name.replace(/<[^>]+>/g, ''),\n                lastname: apellido.replace(/<[^>]+>/g, ''),\n                phone: \"\".replace(/<[^>]+>/g, ''),\n                authType: \"EMAIL\".replace(/<[^>]+>/g, ''),\n                birthday: \"\".replace(/<[^>]+>/g, ''),\n                country: \"\".replace(/<[^>]+>/g, ''),\n                state: \"\".replace(/<[^>]+>/g, ''),\n                address: \"\".replace(/<[^>]+>/g, ''),\n                profileStatus: 0,\n                suns: 0,\n                countryComplete: \"\".replace(/<[^>]+>/g, ''),\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n                addressToken: \"\",\n                privateKey: \"\"\n            }).then(docRef => {\n                swal({\n                    title: \"¡Registro exitoso!\",\n                    text: \"Enviamos un enlace al correo electrónico que proporcionaste para verificar tu cuenta.\",\n                    icon: \"success\",\n                    button: \"¡Entendido!\",\n                    closeOnClickOutside: false\n                }).then(confirm => {\n                    if (confirm) {\n                        document.getElementById(\"closeModalSignUp\").click();\n                        document.getElementById(\"signInButton\").click();\n                    }\n                });\n                clearStates();\n                setLoading(false);\n            }).catch((error) => {\n                setLoading(false);\n\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        }\n    }\n\n    const searchDataInFirestore = async id => {\n        let result = null;\n        await db.collection('credentials').doc(id).get().then(doc => {\n            result = doc.exists ? \"exists\" : \"not-exists\";\n        }).catch(error => {\n            result = \"error\";\n\n        });\n        return result;\n    }\n\n    const clearStates = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n        setRepeteadPassword('');\n        setApellido('');\n        setCheckedValue(false);\n        setVerifiedCaptcha(false);\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validations.requiredFields()) {\n\n            let schema = new passwordValidator();\n            schema\n                .is().min(8)\n                .is().max(100)\n                .has().uppercase()\n                .has().lowercase()\n                .has().digits(1)\n                .has().not().spaces();\n\n            if (schema.validate(password)) {\n                if (password === repeatedPassword) {\n                    if (checkedValue) {\n                        if (verifiedCaptcha) {\n                            setLoading(true);\n                            auth.createUserWithEmailAndPassword(email, password)\n                                .then((user) => {\n\n                                    user.user.sendEmailVerification().then(r => {\n                                        saveDataInFirestore(user.user.uid);\n                                    }, (error) => {\n\n                                    })\n\n                                    auth.signOut();\n\n                                }).catch((error) => {\n                                setLoading(false);\n                                let errorCode = error.code;\n\n\n                                /*============== EL CORREO YA SE USA POR OTRA CUENTA ==================*/\n                                if (errorCode === \"auth/email-already-in-use\") {\n                                    swal({\n                                        title: \"Oops\",\n                                        text: \"La dirección de correo ya se encuentra en uso\",\n                                        icon: \"warning\",\n                                        button: \"¡Entendido!\",\n                                        closeOnClickOutside: false\n                                    });\n                                } else if (errorCode === \"auth/weak-password\") {\n                                    swal({\n                                        title: \"Oops\",\n                                        text: \"La contraseña debe tener al menos 8 caracteres!\",\n                                        icon: \"warning\",\n                                        button: \"¡Entendido!\"\n                                    });\n                                }\n\n                            });\n                        } else {\n                            swal({\n                                title: \"Verifica el CAPTCHA\",\n                                text: \"Intenta verificar el CAPTCHA de nuevo para poder continuar\",\n                                icon: \"warning\",\n                                button: \"¡Entendido!\"\n                            });\n                        }\n                    } else {\n                        swal({\n                            title: \"Advertencia\",\n                            text: \"Debes aceptar los términos y condiciones para poder registrarte\",\n                            icon: \"warning\",\n                            button: \"¡Entendido!\",\n                            closeOnClickOutside: false\n                        });\n                    }\n                } else {\n                    swal({\n                        title: \"Las contraseñas no coinciden\",\n                        text: \"Asegurate de escribir las mismas contraseñas en los campos correspondientes\",\n                        icon: \"warning\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                swal2({\n                    text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                    closeOnClickOutside: false,\n                    buttons: {\n                        cancel: \"Entendido\",\n                    },\n                    content: (\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <ul>\n                                    {\n                                        schema.validate(password, {list: true}).map((element, index) => {\n\n                                            switch (element) {\n                                                case 'min':\n\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                    )\n\n                                                case 'max':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                    )\n\n                                                case 'uppercase':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo una letra mayuscula</p></li>\n                                                    )\n\n                                                case 'lowercase':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 1 letra minuscula</p></li>\n                                                    )\n\n                                                case 'spaces':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">No debe contener espacios</p></li>\n                                                    )\n\n                                                case 'digits':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 1 número</p></li>\n                                                    )\n\n                                                default:\n                                                    return\n                                            }\n                                        })\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n\n        } else {\n            swal({\n                title: \"Advertencia\",\n                text: \"Debes llenar todos los campos\",\n                icon: \"warning\",\n                button: \"¡Entendido!\",\n                closeOnClickOutside: false\n            });\n        }\n    };\n\n    const signUpWithGoogle = async () => {\n\n        let provider = new firebase.auth.GoogleAuthProvider();\n        provider.addScope('https://www.googleapis.com/auth/userinfo.profile');\n        auth.languageCode = 'es';\n        await auth.signInWithPopup(provider).then(async (result) => {\n\n            let user = result.user;\n\n            if (user.emailVerified) {\n\n                let userStatus = await searchDataInFirestore(user.uid);\n                if(userStatus === \"exists\"){\n                    history.push(\"/\");\n                    window.location.reload();\n                    clearStates();\n                } else if (userStatus === \"not-exists\"){\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\",\n                        addressToken: \"\",\n                        privateKey: \"\"\n                    });\n                } else {\n                    swal({\n                        title: \"Ocurrió un error\",\n                        text: \"Ocurrió un error inesperado, inténtalo de nuevo más tarde\",\n                        icon: \"error\",\n                        button: \"Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                user.sendEmailVerification().then(r => {\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\",\n                        addressToken: \"\",\n                        privateKey: \"\"\n                    });\n                }, (error) => {\n\n                });\n                auth.signOut();\n            }\n        }).catch((error) => {\n            auth.signOut();\n        })\n\n    }\n\n    const [values, setValues] = useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword1: false,\n        showPassword2: false\n    });\n\n    const handleClickShowPassword = (id) => {\n        if (id === 1) {\n            setValues({...values, showPassword1: !values.showPassword1});\n        } else if (id === 2) {\n            setValues({...values, showPassword2: !values.showPassword2});\n        }\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n\n        <div className=\"modal fade \" id=\"signUpModal\" data-backdrop=\"static\" data-keyboard=\"false\"\n             tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-xl modal-dialog-centered pl-xl-5 pr-xl-5\">\n                <div className=\"modal-content  registrobody pl-xl-5 pr-xl-5\">\n\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title col-12 text-light\" id=\"staticBackdropLabel\">Crea tu cuenta</h5>\n                        <button type=\"button\" id=\"closeModalSignUp\" className=\"close\" data-dismiss=\"modal\"\n                                aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n\n                    <div className=\"modal-body col-12 pl-xl-5 pr-xl-5\">\n\n\n                        <div className=\"form-group col-12 d-flex justify-content-center\">\n                            <GoogleButton\n                                label='Iniciar sesión con Google'\n                                onClick={signUpWithGoogle}\n                                style={{width: 500, borderRadius: 3}}\n                            />\n                        </div>\n\n                        <form className=\"form\" onSubmit={handleSubmit}>\n                            <div className=\"container mt-5 pl-xl-5 pr-xl-5\">\n                                <div className=\"row pl-xl-5 pr-xl-5\">\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"name\"\n                                                   name=\"name\"\n                                                   value={name}\n                                                   label=\"Nombre\"\n                                                   type=\"text\"\n                                                   onChange={(e) => setName(e.target.value)} variant=\"filled\"/>\n\n\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"lastname\"\n                                                   name=\"lastnane\"\n                                                   label=\"Apellido\"\n                                                   value={apellido}\n                                                   type=\"text\"\n                                                   onChange={(e) => setApellido(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"outlined-basic\" label=\"Email\"\n                                                   value={email}\n                                                   type=\"email\"\n                                                   onChange={(e) => setEmail(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Contraseña *</InputLabel>\n                                            <FilledInput\n                                                id=\"signup-password\"\n                                                type={values.showPassword1 ? 'text' : 'password'}\n                                                value={password}\n                                                onChange={(e) => setPassword(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={() => handleClickShowPassword(1)}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword1 ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Repite tu contraseña\n                                                *</InputLabel>\n                                            <FilledInput\n                                                id=\"signup-password\"\n                                                type={values.showPassword2 ? 'text' : 'password'}\n                                                value={repeatedPassword}\n                                                onChange={(e) => setRepeteadPassword(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={() => handleClickShowPassword(2)}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword2 ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div className=\"form-group form-check col-12 mb-3 pl-xl-5 pr-xl-5\">\n                                                    <span\n                                                        className=\"btn form-check ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5 form-regi\">\n\n                                                        <FormControlLabel\n                                                            control={\n                                                                <Checkbox className=\"form-check-input form-regi\"\n                                                                          checked={checkedValue}\n                                                                          onChange={handleCheckboxState}\n                                                                          required={true}\n                                                                          name=\"terminosyCondiciones\"/>}\n                                                            label=\"Aceptar términos y condiciones\" required\n                                                            name=\"terminosYCondiciones\"\n                                                        />\n                                                    </span>\n                                    </div>\n\n                                    <div className=\"form-group col-12 d-flex justify-content-center\">\n                                        <ReCAPTCHA sitekey={process.env.REACT_APP_RECAPTCHA}\n                                                   onChange={sendReCAPTCHAValue}/>\n                                    </div>\n\n                                    <div className=\"form-group col-12 mt-3\" id=\"signUpButtonDiv\">\n                                        <button type=\"submit\"\n                                                className=\"btn btn-registro\"\n                                                id=\"signUpButton\"\n                                                disabled={loading}>\n                                            {loading ? (\n                                                <div className=\"spinner-border text-dark\" role=\"status\">\n                                                    <span className=\"sr-only\">Registrando...</span>\n                                                </div>\n                                            ) : \"REGISTRATE\"}\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n\n                    <div className=\"modal-footer col-12 btn-footer\"></div>\n\n                </div>\n\n            </div>\n        </div>\n\n    );\n};\n\nexport default SignUpModal;","/home/snow/Documentos/ico-web-final/src/components/SignInModal.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/js/canvasUtils.js",[],"/home/snow/Documentos/ico-web-final/src/components/dashboard/js/encrypt.js",[],"/home/snow/Documentos/ico-web-final/src/components/Video.jsx",["294"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst Video = () => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 videosunrep mt-5 p-0\">\n                <iframe src=\"https://www.youtube.com/embed/O5c2yMxyL54\" frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen></iframe>\n            </div>\n        </div>\n    );\n};\n\nexport default Video;","/home/snow/Documentos/ico-web-final/src/components/Countdown.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Soporte.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/PreguntasFrecuentes.jsx",["295"],"import React from 'react';\nimport Depmason from \"../images/depmason.svg\";\nimport Imgpreg from \"../images/imgpreg.svg\";\nimport Depmenos from \"../images/depmenos.svg\";\nimport Fade from 'react-reveal/Fade';\nimport {useTranslation} from 'react-i18next';\n\nconst PreguntasFrecuentes = () => {\n\n    const {t} = useTranslation();\n\n    const changeIcon = (imageID) => {\n        let image = document.getElementById(imageID)\n        if (image.src.match(\"on\")) {\n            image.src = Depmenos;\n        } else {\n            image.src = Depmason;\n        }\n    }\n\n    const items = [\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.0.Title'),\n            text: t('FAQ.Items.0.Text'),\n            id: \"myImageA\"\n        },\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.1.Title'),\n            text: t('FAQ.Items.1.Text'),\n            id: \"myImageB\"\n        },\n\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.2.Title'),\n            text: t('FAQ.Items.2.Text'),\n            id: \"myImageD\"\n        },\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.3.Title'),\n            text: t('FAQ.Items.3.Text'),\n            id: \"myImageE\"\n        },\n    ]\n\n    return (\n        <div className=\"row fondo-preg\">\n            <p className=\"frecprec\">{t('FAQ.Title')}</p>\n            <div className=\"col-lg-6 col-md-6 col-12 preguntas\">\n\n                {\n                    items.map((value, index) => (\n                        <div key={index}>\n                            <Fade left cascade>\n                                <p className=\"\">\n                                    <button className=\"btn btn-preg1\" onClick={() => changeIcon(value.id)}\n                                            type=\"button\" data-toggle=\"collapse\" data-target={\"#\" + value.id + \"target\"}\n                                            aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                        <img src={value.icon} id={value.id} alt=\"\" className=\"mas\"/>{value.title}\n                                    </button>\n                                </p>\n                                <div className=\"collapse btn-res1 \" id={value.id + \"target\"}>\n                                    <div className=\"text-preg\">\n                                        {value.text}\n                                    </div>\n                                </div>\n                            </Fade>\n                        </div>\n                    ))\n                }\n\n            </div>\n\n            <div className=\"col-md-6 col-12\">\n                <img src={Imgpreg} className=\"PREGIMG d-none d-lg-block d-md-block\"/>\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default PreguntasFrecuentes;","/home/snow/Documentos/ico-web-final/src/components/Newsletter.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Ventajas.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/MapaApp.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/WhitepaperHome.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/Home.jsx",["296","297","298"],"import React, {Suspense, lazy, useEffect} from 'react';\nimport '../App.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport monedag from \"../images/moneda.gif\";\nimport Banner from \"../components/Banner\";\nimport {useAuth} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Video = lazy(() => import ('../components/Video'));\nconst Countdown = lazy(() => import ('../components/Countdown'));\nconst Proyectos = lazy(() => import ('../components/ProyectosComponent'));\nconst Soporte = lazy(() => import ('../components/Soporte'));\nconst PreguntasFrecuentes = lazy(() => import ('../components/PreguntasFrecuentes'));\nconst Newsletter = lazy(() => import ('../components/Newsletter'));\nconst MapaApp = lazy(() => import ('../components/MapaApp'));\nconst Ventajas = lazy(() => import ('../components/Ventajas'));\nconst WhitepaperHome = lazy(() => import ('../components/WhitepaperHome'));\nconst Footer = lazy(() => import ('../components/Footer'));\n\n\nconst Home = () => {\n\n    const {currentUser} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {\n        }\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <Banner/>\n            <Suspense fallback={\n                <div className=\"  container mt-5 text-center   justify-content-center\">\n                    <img className=\"moneda-carga\" align=\"top\" src={monedag}/><p>CARGANDO...</p>\n                </div>\n            }>\n                <Video/>\n                <Countdown/>\n                <WhitepaperHome/>\n                <Ventajas/>\n                <Proyectos/>\n                <MapaApp/>\n                <Soporte/>\n                <PreguntasFrecuentes/>\n                <Newsletter/>\n                <Footer/>\n            </Suspense>\n        </div>\n    )\n}\n\nexport default Home;\n","/home/snow/Documentos/ico-web-final/src/components/Banner.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Footer.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/Navigation.jsx",["299","300","301","302","303","304"],"import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport logonav from '../images/logonav.svg';\nimport React, {useState} from 'react';\nimport \"firebase/auth\";\nimport {NavLink, useHistory} from 'react-router-dom';\nimport 'firebase/firestore';\nimport SignUpModal from \"./SignUpModal\";\nimport SignInModal from \"./SignInModal\";\nimport '../js/mostrarmenu';\nimport {useTranslation} from 'react-i18next';\nimport i18next from 'i18next';\nimport USAFLAG from \"../images/usa_flag_icon.svg\";\nimport MEXICOFLAG from \"../images/mexico_flag_icon.svg\";\nimport {useAuth} from \"../context/AuthContext\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PasswordRecoveryModal from \"./PasswordRecoveryModal\";\n\nconst Navigation = () => {\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {currentUser, logout} = useAuth();\n    const [logged] = useState(currentUser ? true : false);\n\n    function handleClick(lang) {\n        i18next.changeLanguage(lang)\n    }\n\n    async function handleLogout() {\n        try {\n            await logout();\n            window.location.reload();\n            history.push(\"/Home\");\n        } catch {\n        }\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick2 = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (e) => {\n        setAnchorEl(null);\n        console.log(e);\n        switch (e) {\n            case \"index\":\n                history.push(\"./\");\n                break;\n            case \"profile\":\n                history.push(\"./Profile\");\n                break;\n            case \"logout\":\n                handleLogout();\n                break;\n            case \"settings\":\n                history.push(\"./Settings\");\n                break;\n            default:\n                history.push(\"./\");\n                break;\n        }\n    };\n\n    const renderNavbar = () => {\n        if (logged) {\n\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top \" id=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img alt=\"Navigation logo\" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\"\n                                data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\">\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <h5>SUNSHINE</h5>\n                                </li>\n                            </ul>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <div>\n                                <Button aria-controls=\"simple-menu\" variant=\"contained\"\n                                        style={{backgroundColor: \"#0655af\", color: \"white\"}} aria-haspopup=\"true\"\n                                        onClick={handleClick2}>\n                                    {currentUser ? currentUser.email : \"Invitado\"} <ExpandMoreIcon/>\n                                </Button>\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={handleClose}\n                                >\n                                    <MenuItem id=\"index\" onClick={e => handleClose(e.target.id)}>Inicio</MenuItem>\n                                    <MenuItem id=\"profile\" onClick={e => handleClose(e.target.id)}>Perfil</MenuItem>\n                                    <MenuItem id=\"settings\" onClick={e => handleClose(e.target.id)}>Ajustes</MenuItem>\n                                    <MenuItem id=\"logout\" onClick={e => handleClose(e.target.id)}>Cerrar\n                                        sesión</MenuItem>\n                                </Menu>\n                            </div>\n\n                        </div>\n                    </div>\n                </nav>\n            )\n\n        } else {\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img alt=\"Logo navigation\" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\"\n                                data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\">\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./Acerca\">{t('Navbar.Acerca')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" tap-index=\"-1\"\n                                             activeClassName=\"active\" area-disabled=\"true\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./Roaptomap\">{t('Navbar.RoadToMap')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" activeClassName=\"active\"\n                                             area-disabled=\"true\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./ProyectosComponent\">{t('Navbar.Proyectos')}\n                                    </NavLink>\n                                </li>\n                            </ul>\n                            <a href=\"#\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <button type=\"button\" id=\"signInButton\" className=\"navsesion btn btn-link\"\n                                        data-toggle=\"modal\" data-target=\"#signInModal\"\n                                >{t('Navbar.SignIn')}\n                                </button>\n                            </a>\n\n                            <a href=\"#\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <button type=\"button\" className=\"navsesion btn btn-link\" data-toggle=\"modal\"\n                                        data-target=\"#signUpModal\"\n                                >\n                                    {t('Navbar.SignUp')}\n                                </button>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                        </div>\n                        <SignUpModal/>\n                        <SignInModal/>\n                        <PasswordRecoveryModal/>\n                    </div>\n                </nav>\n            )\n        }\n    }\n\n    return (\n\n        <>\n            {renderNavbar()}\n        </>\n    )\n}\nexport default Navigation;","/home/snow/Documentos/ico-web-final/src/components/ProyectosComponent.jsx",["305","306","307"],"import React, {useEffect} from 'react';\nimport Celsym from \"../images/celsym.svg\";\nimport circulo1 from \"../images/circulo1.svg\";\nimport Celhawk from \"../images/celhawk.svg\";\nimport circulo2 from \"../images/circulo2.svg\";\nimport Cellyon from \"../images/cellyon.svg\";\nimport circulo3 from \"../images/circulo3.svg\";\nimport Engranaje from \"../images/engranaje.svg\";\nimport fococontorno from \"../images/fococontorno.svg\";\nimport Engrane1 from \"../images/engrane1.svg\";\nimport Engrane2 from \"../images/engrane2.svg\";\nimport Engrane3 from \"../images/engrane3.svg\";\nimport Engrane4 from \"../images/engrane4.svg\";\nimport Engrane5 from \"../images/engrane5.svg\";\nimport Engrane6 from \"../images/engrane6.svg\";\nimport Engrane7 from \"../images/engrane7.svg\";\nimport Zoom from 'react-reveal/Zoom';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from \"react-router-dom\";\nimport {useAuth} from \"../context/AuthContext\";\n\nconst ProyectosComponent = () => {\n\n    const {t} = useTranslation();\n    const {currentUser, logout} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {\n        }\n    }, []);\n\n    return (\n        <div>\n\n            <div className=\"row\">\n                <div className=\"col-12 sec6\">\n                    <span className=\"titulo6 \">{t('Projects.Title')}</span>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 contenedor-engra\">\n                    <div className=\" d-flex justify-content-start \">\n                        <button className=\" btn fap-btn2\" type=\"button\" data-toggle=\"modal\"\n                                data-target=\"#bd-example-modal-lg\">\n\n                            <div className=\"modal fade modal-fullscreen bd-example-modal-lg\" id=\"bd-example-modal-lg\"\n                                 data-backdrop=\"static\" data-keyboard=\"false\"\n                                 tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\n                                 aria-hidden=\"true\">\n                                <div className=\"modal-dialog modal-xl modal-dialog-centered\">\n                                    <button hidden type=\"button\" id=\"closeSynmphonyModal\" className=\"close\"\n                                            data-dismiss=\"modal\"\n                                            aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                    <Zoom>\n                                        <div className=\"modal-content modal-sym \">\n\n                                            <div className=\"modal-body row container-fluid \">\n\n                                                <div className=\"col-12 col-xl-4\">\n\n                                                    <img src={Celsym} alt=\"Celsym\" className=\"modal-imgsym img-fluid \"\n                                                    />\n                                                </div>\n                                                <div className=\"col-12 col-xl-8\">\n\n                                                 <span className=\"modal-titu\">{t('Projects.Symphony.ModalTitle')}\n                                                     <p className=\"modal-text\">({t('Projects.Symphony.Type')})\n                                                         <p className=\"modal-cuerpo\">\n                                                            {t('Projects.Symphony.Text')}\n                                                         </p>\n                                                     </p>\n                                                 </span>\n\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </Zoom>\n                                </div>\n                            </div>\n\n                            <img src={circulo1} className=\"fap-btn2-1\" alt=\"Circle 1\"/>\n                            <svg className=\"svg1\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n                                 width=\"70mm\" height=\"70mm\" viewBox=\"0 0 120 120\">\n                                <circle className=\"circle1\" cx=\"60\" cy=\"60\" r=\"50\"\n                                        fill=\"transparent\"/>\n                            </svg>\n                            <p className=\"textbtn2\"> SYMPHONY</p></button>\n                        <br/>\n                        <div className=\"con-txtbtn\">\n                            <p className=\" textsyn\"><br/><br/><br/><br/>\n                                <br/><br/><br/> {t('Projects.Symphony.ModalTitle')} <br/></p><p\n                            className=\"mintext\">({t('Projects.Symphony.Type')})</p>\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 d-flex justify-content-center \">\n                        <button className=\"btn fap-btn3\" type=\"button\" data-toggle=\"modal\"\n                                data-target=\".bd-example-modal-lg3\">\n                            <div className=\"modal  fade modal-fullscreen bd-example-modal-lg3\" tabIndex=\"-1\"\n                                 role=\"dialog\"\n                                 aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n                                <div\n                                    className=\"modal-dialog modal-cont modal-dialog-centered modal-dialog-scrollable  modal-xl \">\n                                    <div className=\" modal-content p-0 modal-sym \">\n                                        <div className=\"modal-body row container-fluid \">\n\n                                            <div className=\"col-lg-4 col-12 justify-content-center\">\n                                                <img src={Celhawk} alt=\"Hawk\" className=\"modal-imgsym img-fluid \"\n                                                />\n                                            </div>\n                                            <div className=\"col-lg-8 col-12\">\n\n                                                 <span className=\"modal-titu\"> {t('Projects.Hawk.ModalTitle')}\n                                                     <p className=\"modal-text\">{t('Projects.Hawk.Type')}\n                                                         <p className=\"modal-cuerpo\">{t('Projects.Hawk.Text')}</p>\n                                                     </p>\n                                                 </span>\n\n                                            </div>\n\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <img src={circulo2} className=\"fap-btn3-2\" alt=\"Circle 2\"/>\n                            <svg className=\"svg2\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n                                 width=\"70mm\" height=\"70mm\" viewBox=\"0 0 120 120\">\n                                <circle cx=\"60\" className=\"circle2\" cy=\"60\" r=\"50\"\n                                        fill=\"transparent\"/>\n                            </svg>\n                            <p className=\"textbtn3\"> HAWK</p></button>\n                        <p className=\"textsyn2\"><br/> <br/> <br/>{t('Projects.Hawk.ModalTitle')}</p><p\n                        className=\" mintext2\">{t('Projects.Hawk.Type')}</p></div>\n\n\n                    <div className=\"d-flex justify-content-end\">\n\n                        <button className=\"btn fap-btn4\"\n                                type=\"button\" data-toggle=\"modal\"\n                                data-target=\".bd-example-modal-lg2\">\n                            <div className=\"modal  fade modal-fullscreen bd-example-modal-lg2\" tabIndex=\"-1\"\n                                 role=\"dialog\"\n                                 aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n                                <div className=\"modal-dialog modal-cont modal-xl\">\n                                    <div className=\" modal-content modal-sym \">\n                                        <div className=\"row container-fluid \">\n\n                                            <div className=\"col-lg-3 col-12 cont-cel\">\n\n                                                <img src={Cellyon} alt=\"Lyon\" className=\"modal-imgsym img-fluid\"\n                                                />\n                                            </div>\n                                            <div className=\"col-lg-9 col-12\">\n\n                                             <span className=\"modal-titu\"> {t('Projects.Lion.ModalTitle')}\n                                                 <p className=\"modal-text\"> {t('Projects.Lion.Type')}<p\n                                                     className=\"modal-cuerpo\">\n                                             {t('Projects.Lion.Text')}\n                                             </p></p>\n\n                                             </span>\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <img src={circulo3} className=\"fap-btn4-3\" alt=\"Circle 3\"/>\n                            <svg className=\"svg3\" version=\"1.1\"\n                                 xmlns=\"http://www.w3.org/2000/svg\"\n                                 width=\"70mm\" height=\"70mm\" viewBox=\"0 0 120 120\">\n                                <circle cx=\"60\" cy=\"60\" r=\"50\"\n                                        fill=\"transparent\"/>\n                            </svg>\n                            <p className=\"textbtn4\"> LION</p>\n\n                        </button>\n                        <p className=\"textsyn3\"><br/>{t('Projects.Lion.ModalTitle')}</p><p\n                        className=\" mintext3\">{t('Projects.Lion.Type')}</p>\n                    </div>\n                    <img src={Engranaje} alt=\"Engranaje\" className=\"engranaje engranejegris\"/>\n\n                    <div className=\"row\">\n                        <div className=\"col-6 focoenv-cont\">\n                            <img src={fococontorno} alt=\"Foco 1\" className=\"focoenv\"/>\n                            <img src={Engrane1} alt=\"Foco 1\" className=\"engrane1foc engranaje\"/>\n                            <img src={Engrane2} alt=\"Foco 2\" className=\"engrane2foc engranaje\"/>\n                            <img src={Engrane3} alt=\"Foco 3\" className=\"engrane3foc engranaje\"/>\n                            <img src={Engrane4} alt=\"Foco 4\" className=\"engrane4foc engranaje\"/>\n                            <img src={Engrane5} alt=\"Foco 5\" className=\"engrane5foc engranaje\"/>\n                            <img src={Engrane6} alt=\"Foco 6\" className=\"engrane6foc engranaje\"/>\n                            <img src={Engrane7} alt=\"Foco 7\" className=\"engrane7foc engranaje\"/>\n\n                        </div>\n                    </div>\n\n                </div>\n\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default ProyectosComponent;","/home/snow/Documentos/ico-web-final/src/routes/Proyectos.jsx",[],"/home/snow/Documentos/ico-web-final/src/config/firebase.js",[],"/home/snow/Documentos/ico-web-final/src/routes/Roaptomap.jsx",["308","309"],"import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, {useEffect} from \"react\";\nimport Footer from '../components/Footer';\nimport DemoCarousel from '../components/Carousel.jsx';\nimport maparoad from '../images/road-map.png';\nimport {useTranslation} from 'react-i18next';\nimport lineascar from \"../images/lineas.svg\";\nimport {useAuth} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\nconst RoaptoMapa = () => {\n    const {t} = useTranslation();\n    const {currentUser} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {\n        }\n    }, []);\n\n    return (\n        <div className=\"road\">\n            <div className=\"row\">\n                <img className=\"img-fluid linea-car-1 d-flex d-md-none\" src={lineascar} alt=\"linacarrusel\"/>\n                <p className=\"text-roap-map\">\n                    <h1 align=\"center\">ROAD MAP</h1>\n                    <p className=\"text-roap-1 d-none d-md-flex\">{t('RoadToMap.0')}</p>\n                    <p className=\"text-roap-2 d-none d-md-flex\">{t('RoadToMap.1')}</p>\n                    <p className=\"text-roap-3 d-none d-md-flex\">{t('RoadToMap.2')}</p>\n                    <p className=\"text-roap-4 d-none d-md-flex\">{t('RoadToMap.3')}</p>\n                    <p className=\"text-roap-5 d-none d-md-flex\">{t('RoadToMap.4')}</p>\n                    <p className=\"text-roap-6 d-none d-md-flex\">{t('RoadToMap.5')}</p>\n                    <p className=\"text-roap-7 d-none d-md-flex\">{t('RoadToMap.6')}</p>\n                    <p className=\"text-roap-8 d-none d-md-flex\">{t('RoadToMap.7')}</p>\n                </p>\n                <img src={maparoad} className=\"d-none d-md-flex maparoad\" alt=\"Roadmap\"/>\n            </div>\n            <DemoCarousel/>\n            <Footer/>\n        </div>\n    )\n}\n\n\nexport default RoaptoMapa;","/home/snow/Documentos/ico-web-final/src/components/Carousel.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/Pdf.jsx",["310"],"import React, {useState} from 'react';\nimport '../App.css';\nimport '../css/whitepaper.css';\nimport Docpdf from '../docs/Avance.pdf';\nimport Loader from '../components/Loader';\n\nimport {Document, Page} from 'react-pdf';\nimport {pdfjs} from 'react-pdf';\n\nimport ControlPanel from '../components/ControlPanel';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\n\nconst Pdf = () => {\n\n    const [numPages, setNumPages] = useState(null);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [isLoading, setIsLoading] = useState(true);\n    const [scale, setScale] = useState(1.0);\n\n    function onDocumentLoadSuccess({numPages}) {\n        setNumPages(numPages);\n        setIsLoading(false);\n    }\n\n    return (\n\n        <div className=\"row\">\n\n            <div className=\"col-12 fondopdf p-3 d-none d-md-block\">\n\n                <iframe width='800' data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"\n                         className=\"google-viewer\" height='600' frameborder='0'\n                         src=\"https://firebasestorage.googleapis.com/v0/b/sunshine-ico.appspot.com/o/WHITEPAPER%20SUNI.pdf?alt=media&token=6a606197-0768-449d-b35b-e9147ce27bfe\"></iframe>\n                <Loader isLoading={isLoading}/>\n\n            </div>\n            <div className=\"col-12 fondopdf p-3 d-block d-md-none\">\n                <Loader isLoading={isLoading}/>\n                <ControlPanel numPages={numPages}\n                              pageNumber={pageNumber}\n                              setPageNumber={setPageNumber}\n                              setScale={setScale}/>\n\n                <Document className=\"pdfcontainer\"\n                          file={Docpdf}\n                          onLoadSuccess={onDocumentLoadSuccess}>\n                    <Page pageNumber={pageNumber} scale={scale}/>\n                </Document>\n            </div>\n        </div>\n\n\n    );\n}\n\n\nexport default Pdf;\n        ","/home/snow/Documentos/ico-web-final/src/components/Loader.jsx",[],"/home/snow/Documentos/ico-web-final/src/components/ControlPanel.jsx",[],"/home/snow/Documentos/ico-web-final/src/routes/Acerca.jsx",["311","312","313","314","315","316","317"],"                                                                                   import React, {useState, useEffect} from \"react\";\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Footer from '../components/Footer';\nimport Linkecontact from \"../images/linkecontact.svg\";\nimport Twitercontact from \"../images/twitercontact.svg\";\nimport '../css/acerca.css';\nimport {useTranslation} from 'react-i18next';\nimport ACCESIBILIDAD from '../images/Accesibilidad-01.png';\nimport PRIVACIDAD from '../images/provacidad-04.png';\nimport SOLIDEZ from '../images/solidez-02.png';\nimport TRABAJOEQUIPO from '../images/trabajo en equipo-03.png';\nimport VIRY from '../images/team/VIRY.jpg';\nimport JOSS from '../images/team/JOS.jpg';\nimport CHRIS from '../images/team/CHRIS.jpg';\nimport MANU from '../images/team/MANU.jpg';\nimport CRIS from '../images/team/CRIS.jpg';\nimport Fade from 'react-reveal/Fade';\nimport Zoom from 'react-reveal/Zoom';\nimport CardsWorkers from \"../components/CardsWorkers.jsx\";\nimport {useAuth} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst Acerca = () => {\n\n    const {t} = useTranslation();\n    const {currentUser} = useAuth();\n    const history = useHistory();\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            history.push(\"/\");\n        } catch (e) {}\n    }, []);\n\n    const differences = [\n        {\n            image: ACCESIBILIDAD,\n            title: t('AboutSection.Differences.Items.0.Title'),\n            description: t('AboutSection.Differences.Items.0.Text')\n        },\n        {\n            image: PRIVACIDAD,\n            title: t('AboutSection.Differences.Items.1.Title'),\n            description: t('AboutSection.Differences.Items.1.Text')\n        },\n        {\n            image: SOLIDEZ,\n            title: t('AboutSection.Differences.Items.2.Title'),\n            description: t('AboutSection.Differences.Items.2.Text')\n        },\n        {\n            image: TRABAJOEQUIPO,\n            title: t('AboutSection.Differences.Items.3.Title'),\n            description: t('AboutSection.Differences.Items.3.Text')\n        }\n    ];\n\n    const team2 = [\n        {\n            image: VIRY,\n            name: t('AboutSection.Team.Items.0.Name'),\n            career: t('AboutSection.Team.Items.0.Career'),\n            description: t('AboutSection.Team.Items.0.Description'),\n            social: {\n                linkedin: \"https://mx.linkedin.com/in/viry-uribe-879b68163/\",\n                twitter: \"https://twitter.com/home?lang=es\"\n            }\n        },\n        {\n            image: JOSS,\n            name: t('AboutSection.Team.Items.1.Name'),\n            career: t('AboutSection.Team.Items.1.Career'),\n            description: t('AboutSection.Team.Items.1.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jocelyn-uribe-maldonado-720a90203/\",\n                twitter: \"https://twitter.com/jocelyn_um\"\n            }\n        },\n        {\n            image: CHRIS,\n            name: t('AboutSection.Team.Items.2.Name'),\n            career: t('AboutSection.Team.Items.2.Career'),\n            description: t('AboutSection.Team.Items.2.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/ahtziri-antonio-pe%C3%B1a-142705179/\",\n                twitter: \"\"\n            }\n        },\n        {\n            image: MANU,\n            name: t('AboutSection.Team.Items.3.Name'),\n            career: t('AboutSection.Team.Items.3.Career'),\n            description: t('AboutSection.Team.Items.3.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jose-manuel-viniegra-molina-aab9a51a8/\",\n                twitter: \"https://twitter.com/manuel87129931\"\n            }\n        },\n        {\n            image: CRIS,\n            name: t('AboutSection.Team.Items.4.Name'),\n            career: t('AboutSection.Team.Items.4.Career'),\n            description: t('AboutSection.Team.Items.4.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/cristian-augusto-armenta-garcia/\",\n                twitter: \"https://twitter.com/CRISTIANAUGUS14\"\n            }\n        }\n    ]\n\n    return (\n        <div>\n            <div className=\"container-fluid\">\n                <Fade left cascade>\n                    <div className=\"row mt-5 mb-5 pt-5 pb-5 pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5 bg-about2\">\n                        <div className=\"col-12 mt-5  pb-5\">\n                            <h1 className=\"text-center text-preview text-size-banner\">\n                                {t('AboutSection.Title')}\n                            </h1>\n                            <hr/>\n                        </div>\n                        <div className=\"col-12 mb-5\">\n                            <p className=\"text-center mb-5 text-preview pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5\"\n                               style={{fontSize: 30}}>\n                                {t('AboutSection.Introduction.0')}\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"  col-md-3 cont-card-mision p-5\">\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <h3 className=\"title-vision \">   {t('AboutSection.Mision.Title')}</h3>\n                            </div>\n                            <div className=\"col-12 d-flex text-center \">\n                                <h5 className=\"parrafo-vision p-1\"> {t('AboutSection.Mision.description')}</h5>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-3 cont-card-mision p-5\">\n                            <div className=\"d-flex justify-content-center mt-5\">\n                                <h3 className=\"title-vision\"> {t('AboutSection.Vision.Title')}</h3>\n                            </div>\n                            <div className=\"col-12 d-flex text-center\">\n                                <h5 className=\"parrafo-vision p-1\">{t('AboutSection.Vision.description')}</h5>\n                            </div>\n                        </div>\n                    </div>\n                </Fade>\n\n                <div className=\"row pb-5 justify-content-center\">\n                    <div className=\"col-12 pt-4 pb-4\">\n                        <h1 className=\"text-size-title-differences text-center\">\n                            <Fade left cascade>{t('AboutSection.Differences.Title')}</Fade>\n                        </h1>\n                    </div>\n                    {\n                        differences.map((value, index) => (\n                            <Zoom>\n                                <div id={index}\n                                     className=\" col-12 col-sm-12 row col-lg-4 col-xl-4 cont-diferencia\">\n                                    <img src={value.image} alt=\"Member photo\" className=\"icons-differences\"/>\n                                    <h3 className=\"text-center\">{value.title}</h3>\n                                    <p className=\"text-center\">{value.description}</p>\n                                </div>\n                            </Zoom>\n                        ))\n                    }\n                </div>\n                <CardsWorkers/>\n                <div className=\"container-fluid pb-5 d-block d-md-none\">\n                    <div className=\"container \">\n                        <div className=\"row pb-5\">\n                            {\n                                team2.map((value, index) => (\n                                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4\">\n                                        <div className=\"card text-light text-center mt-5 mb-5 bg-cards\">\n\n                                            <div className=\"card-img-top mt-5\">\n                                                <img className=\"rounded-circle img-fluid teams-images w-50\"\n                                                     src={value.image} alt=\"Card image cap\"/>\n                                            </div>\n\n                                            <div className=\"card-body mt-3 d-block\">\n                                                <h3 className=\"card-title mb-3\">{value.name}</h3>\n                                                <h6 className=\"card-subtitle mb-4\">{value.career}</h6>\n                                                <div style={{height: 120}}>\n                                                    <p className=\"card-text mb-4\">{value.description}</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"card-body border-top\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-6\">\n                                                        <a href={value.social.linkedin} target=\"_blank\">\n                                                            <img src={Linkecontact} alt=\"face\"/>\n                                                        </a>\n                                                    </div>\n                                                    <div className=\"col-6\">\n                                                        <a href={value.social.twitter || \"#\"}\n                                                           className={value.social.twitter || \"disabled\"}\n                                                           target=\"_blank\">\n                                                            <img src={Twitercontact} alt=\"face\"/>\n                                                        </a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <button className=\"btn bg-cards text-light btn-lg btn-block\" data-toggle=\"modal\"\n                                    data-target=\"#staticBackdropcon\">{t('AboutSection.ButtonText')}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container-fluid\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}\n\nexport default Acerca;\n","/home/snow/Documentos/ico-web-final/src/components/CardsWorkers.jsx",[],"/home/snow/Documentos/ico-web-final/src/js/mostrarmenu.js",["318","319","320"],"import React, {Component} from 'react';\r\nimport $ from \"jquery\";\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function (e) {\r\n\r\n    let ubicacionPrincipal = window.pageYOffset;\r\n    window.onscroll = function () {\r\n        let Dezplazamiento_actual = window.pageYOffset;\r\n        if (ubicacionPrincipal >= Dezplazamiento_actual) {\r\n            document.getElementById('navbar').style.top = '0';\r\n        } else {\r\n            document.getElementById('navbar').style.top = '-100px';\r\n        }\r\n        ubicacionPrincipal = Dezplazamiento_actual;\r\n    }\r\n});\r\n","/home/snow/Documentos/ico-web-final/src/js/cuentaregresiva.js",["321"],"import '../App.css';\nimport React from 'react';\nimport Lineadias from '../images/lineadias.svg';\n\nexport default function contador(id, limitDate, finalMessage) {\n    const $contador = document.getElementById(id), contadorDate = new Date(limitDate).getTime();\n    let contadorTempo = setInterval(() => {\n        let now = new Date().getTime(),\n            limitTime = contadorDate - now,\n            days = (Math.floor(limitTime / (1000 * 60 * 60 * 24))),\n            hours = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60 * 24) / (1000 * 60 * 60))).slice(-2),\n            minutes = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60) / (1000 * 60))).slice(-2),\n            seconds = (\"0\" + Math.floor(limitTime % (1000 * 60) / (1000))).slice(-2);\n        $contador.innerHTML = `<button class=\" btn contador-fap fap-dias fap-btn \"><p class=\"num-conta\"> ${days}</p> <img src=${Lineadias} alt=\"linea\" class=\"linea-dias\"/></button> <i class=\"texto-contenedor\">\n    <br/>dias</i> \n    \n    <button class=\"btn contador-fap fap-horas fap-btn\"><p class=\"num-conta\"> ${hours}</p></button> <br/><i class=\"texto-contenedor texto-horas\">\n    <br/>horas</i>\n     <button class=\"btn contador-fap fap-minutos fap-btn \"><p class=\"num-conta\">${minutes}</p></button><br/><i class=\"texto-contenedor texto-min\">\n     <br/>minutos</i>\n    <button class=\"btn contador-fap fap-seg fap-btn\"><p class=\"num-conta\">${seconds}</p></button><br/><i class=\"texto-contenedor texto-seg\">\n    <br/>segundos</i> `\n\n        if (limitTime < 0) {\n            clearInterval(contadorTempo);\n            $contador.innerHTML = `<h1 class=\"fintokens\">${finalMessage}</h1>  `\n        }\n\n\n    }, 1000);\n\n\n}","/home/snow/Documentos/ico-web-final/src/context/CheckoutContext.jsx",[],"/home/snow/Documentos/ico-web-final/src/context/ProfileContext.jsx",[],{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","severity":1,"message":"327","line":38,"column":8,"nodeType":"328","endLine":38,"endColumn":10,"suggestions":"329"},{"ruleId":"330","severity":1,"message":"331","line":77,"column":9,"nodeType":"332","messageId":"333","endLine":193,"endColumn":10},{"ruleId":"326","severity":1,"message":"334","line":36,"column":8,"nodeType":"328","endLine":36,"endColumn":10,"suggestions":"335"},{"ruleId":"326","severity":1,"message":"336","line":59,"column":7,"nodeType":"328","endLine":59,"endColumn":20,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":5,"column":8,"nodeType":"340","messageId":"341","endLine":5,"endColumn":20},{"ruleId":"338","severity":1,"message":"342","line":1,"column":16,"nodeType":"340","messageId":"341","endLine":1,"endColumn":24},{"ruleId":"338","severity":1,"message":"343","line":90,"column":11,"nodeType":"340","messageId":"341","endLine":90,"endColumn":16},{"ruleId":"326","severity":1,"message":"344","line":94,"column":8,"nodeType":"328","endLine":94,"endColumn":17,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":118,"column":34,"nodeType":"348","messageId":"349","endLine":118,"endColumn":36},{"ruleId":"350","severity":1,"message":"351","line":164,"column":153,"nodeType":"352","endLine":164,"endColumn":242},{"ruleId":"353","severity":1,"message":"354","line":206,"column":40,"nodeType":"352","messageId":"355","endLine":206,"endColumn":130,"fix":"356"},{"ruleId":"353","severity":1,"message":"354","line":211,"column":40,"nodeType":"352","messageId":"355","endLine":211,"endColumn":125,"fix":"357"},{"ruleId":"326","severity":1,"message":"358","line":75,"column":8,"nodeType":"328","endLine":75,"endColumn":10,"suggestions":"359"},{"ruleId":"360","severity":1,"message":"361","line":119,"column":17,"nodeType":"362","messageId":"363","endLine":119,"endColumn":39},{"ruleId":"360","severity":1,"message":"361","line":179,"column":17,"nodeType":"362","messageId":"363","endLine":179,"endColumn":40},{"ruleId":"338","severity":1,"message":"364","line":199,"column":16,"nodeType":"340","messageId":"341","endLine":199,"endColumn":23},{"ruleId":"338","severity":1,"message":"365","line":199,"column":25,"nodeType":"340","messageId":"341","endLine":199,"endColumn":34},{"ruleId":"366","severity":1,"message":"367","line":251,"column":21,"nodeType":"352","endLine":252,"endColumn":60},{"ruleId":"350","severity":1,"message":"368","line":251,"column":21,"nodeType":"352","endLine":252,"endColumn":60},{"ruleId":"338","severity":1,"message":"369","line":43,"column":12,"nodeType":"340","messageId":"341","endLine":43,"endColumn":18},{"ruleId":"338","severity":1,"message":"370","line":55,"column":17,"nodeType":"340","messageId":"341","endLine":55,"endColumn":22},{"ruleId":"326","severity":1,"message":"371","line":74,"column":8,"nodeType":"328","endLine":74,"endColumn":22,"suggestions":"372"},{"ruleId":"330","severity":1,"message":"331","line":86,"column":21,"nodeType":"332","messageId":"333","endLine":100,"endColumn":22},{"ruleId":"373","severity":1,"message":"374","line":153,"column":29,"nodeType":"352","endLine":155,"endColumn":75},{"ruleId":"326","severity":1,"message":"375","line":44,"column":8,"nodeType":"328","endLine":44,"endColumn":47,"suggestions":"376"},{"ruleId":"338","severity":1,"message":"377","line":31,"column":25,"nodeType":"340","messageId":"341","endLine":31,"endColumn":36},{"ruleId":"338","severity":1,"message":"378","line":31,"column":46,"nodeType":"340","messageId":"341","endLine":31,"endColumn":56},{"ruleId":"338","severity":1,"message":"369","line":32,"column":12,"nodeType":"340","messageId":"341","endLine":32,"endColumn":18},{"ruleId":"338","severity":1,"message":"370","line":38,"column":17,"nodeType":"340","messageId":"341","endLine":38,"endColumn":22},{"ruleId":"326","severity":1,"message":"379","line":52,"column":8,"nodeType":"328","endLine":52,"endColumn":10,"suggestions":"380"},{"ruleId":"346","severity":1,"message":"347","line":56,"column":24,"nodeType":"348","messageId":"349","endLine":56,"endColumn":26},{"ruleId":"346","severity":1,"message":"381","line":91,"column":113,"nodeType":"348","messageId":"382","endLine":91,"endColumn":115},{"ruleId":"330","severity":1,"message":"331","line":92,"column":53,"nodeType":"332","messageId":"333","endLine":130,"endColumn":54},{"ruleId":"346","severity":1,"message":"347","line":293,"column":53,"nodeType":"383","messageId":"384","endLine":293,"endColumn":59},{"ruleId":"373","severity":1,"message":"374","line":8,"column":17,"nodeType":"352","endLine":10,"endColumn":41},{"ruleId":"385","severity":1,"message":"386","line":78,"column":17,"nodeType":"352","endLine":78,"endColumn":86},{"ruleId":"338","severity":1,"message":"370","line":29,"column":17,"nodeType":"340","messageId":"341","endLine":29,"endColumn":22},{"ruleId":"326","severity":1,"message":"387","line":33,"column":8,"nodeType":"328","endLine":33,"endColumn":10,"suggestions":"388"},{"ruleId":"385","severity":1,"message":"386","line":40,"column":21,"nodeType":"352","endLine":40,"endColumn":78},{"ruleId":"350","severity":1,"message":"368","line":91,"column":29,"nodeType":"352","endLine":92,"endColumn":91},{"ruleId":"350","severity":1,"message":"368","line":96,"column":29,"nodeType":"352","endLine":97,"endColumn":91},{"ruleId":"350","severity":1,"message":"368","line":164,"column":29,"nodeType":"352","endLine":164,"endColumn":100},{"ruleId":"350","severity":1,"message":"368","line":171,"column":29,"nodeType":"352","endLine":171,"endColumn":100},{"ruleId":"350","severity":1,"message":"368","line":179,"column":29,"nodeType":"352","endLine":180,"endColumn":91},{"ruleId":"350","severity":1,"message":"368","line":184,"column":29,"nodeType":"352","endLine":185,"endColumn":91},{"ruleId":"338","severity":1,"message":"389","line":25,"column":25,"nodeType":"340","messageId":"341","endLine":25,"endColumn":31},{"ruleId":"338","severity":1,"message":"370","line":30,"column":17,"nodeType":"340","messageId":"341","endLine":30,"endColumn":22},{"ruleId":"326","severity":1,"message":"387","line":34,"column":8,"nodeType":"328","endLine":34,"endColumn":10,"suggestions":"390"},{"ruleId":"338","severity":1,"message":"370","line":19,"column":17,"nodeType":"340","messageId":"341","endLine":19,"endColumn":22},{"ruleId":"326","severity":1,"message":"387","line":23,"column":8,"nodeType":"328","endLine":23,"endColumn":10,"suggestions":"391"},{"ruleId":"373","severity":1,"message":"374","line":33,"column":17,"nodeType":"352","endLine":35,"endColumn":178},{"ruleId":"338","severity":1,"message":"342","line":1,"column":99,"nodeType":"340","messageId":"341","endLine":1,"endColumn":107},{"ruleId":"338","severity":1,"message":"370","line":33,"column":17,"nodeType":"340","messageId":"341","endLine":33,"endColumn":22},{"ruleId":"326","severity":1,"message":"387","line":36,"column":8,"nodeType":"328","endLine":36,"endColumn":10,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":165,"column":37,"nodeType":"352","endLine":165,"endColumn":110},{"ruleId":"393","severity":1,"message":"394","line":183,"column":49,"nodeType":"352","endLine":184,"endColumn":94},{"ruleId":"353","severity":1,"message":"354","line":197,"column":57,"nodeType":"352","messageId":"355","endLine":197,"endColumn":105,"fix":"395"},{"ruleId":"353","severity":1,"message":"354","line":202,"column":57,"nodeType":"352","messageId":"355","endLine":204,"endColumn":76,"fix":"396"},{"ruleId":"338","severity":1,"message":"397","line":1,"column":8,"nodeType":"340","messageId":"341","endLine":1,"endColumn":13},{"ruleId":"338","severity":1,"message":"398","line":1,"column":16,"nodeType":"340","messageId":"341","endLine":1,"endColumn":25},{"ruleId":"338","severity":1,"message":"399","line":2,"column":8,"nodeType":"340","messageId":"341","endLine":2,"endColumn":9},{"ruleId":"338","severity":1,"message":"397","line":2,"column":8,"nodeType":"340","messageId":"341","endLine":2,"endColumn":13},"no-native-reassign",["400"],"no-negated-in-lhs",["401"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allData.address', 'allData.addressToken', 'allData.city', 'allData.country', 'allData.lastname', 'allData.name', 'allData.state', and 'checkoutContext'. Either include them or remove the dependency array.","ArrayExpression",["402"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'currencyConversor'. Either include it or remove the dependency array. If 'currencyConversor' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["403"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["404"],"no-unused-vars","'NumberFormat' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'theme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveTransactions'. Either include it or remove the dependency array.",["405"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"406","text":"407"},{"range":"408","text":"407"},"React Hook useEffect has missing dependencies: 'currentUser.uid' and 'history'. Either include them or remove the dependency array.",["409"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'facing2' is assigned a value but never used.","'setFacing' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'logged' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.emailVerified', 'currentUser.uid', 'getCountriesAPI', 'getUserData', 'history', and 'logout'. Either include them or remove the dependency array.",["410"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useCallback has a missing dependency: 'profileContext'. Either include it or remove the dependency array.",["411"],"'getAuthType' is assigned a value but never used.","'credential' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.emailVerified', 'currentUser.providerData', 'history', and 'logout'. Either include them or remove the dependency array.",["412"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'currentUser.email' and 'history'. Either include them or remove the dependency array.",["413"],"'logout' is assigned a value but never used.",["414"],["415"],["416"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"417","text":"407"},{"range":"418","text":"407"},"'React' is defined but never used.","'Component' is defined but never used.","'$' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},[8096,8096]," rel=\"noreferrer\"",[8438,8438],{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"435","fix":"437"},{"desc":"435","fix":"438"},{"desc":"435","fix":"439"},[9135,9135],[9704,9704],"Update the dependencies array to be: [allData.address, allData.addressToken, allData.city, allData.country, allData.lastname, allData.name, allData.state, checkoutContext]",{"range":"440","text":"441"},"Update the dependencies array to be: [currencyConversor]",{"range":"442","text":"443"},"Update the dependencies array to be: [currentUser, history]",{"range":"444","text":"445"},"Update the dependencies array to be: [address, retrieveTransactions]",{"range":"446","text":"447"},"Update the dependencies array to be: [currentUser.uid, history]",{"range":"448","text":"449"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",{"range":"450","text":"451"},"Update the dependencies array to be: [imageSrc, croppedAreaPixels, rotation, profileContext]",{"range":"452","text":"453"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, currentUser.providerData, history, logout]",{"range":"454","text":"455"},"Update the dependencies array to be: [currentUser.email, history]",{"range":"456","text":"457"},{"range":"458","text":"457"},{"range":"459","text":"457"},{"range":"460","text":"457"},[1625,1627],"[allData.address, allData.addressToken, allData.city, allData.country, allData.lastname, allData.name, allData.state, checkoutContext]",[829,831],"[currencyConversor]",[1974,1987],"[currentUser, history]",[3086,3095],"[address, retrieveTransactions]",[2903,2905],"[currentUser.uid, history]",[2619,2633],"[currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",[1747,1786],"[imageSrc, croppedAreaPixels, rotation, profileContext]",[1756,1758],"[currentUser.email, currentUser.emailVerified, currentUser.providerData, history, logout]",[1272,1274],"[currentUser.email, history]",[1224,1226],[717,719],[1373,1375]]