[{"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\whitepaper\\Pdf.jsx":"1","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\index.js":"2","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\Dashboard.jsx":"3","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\acerca\\Acerca.jsx":"4","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\road_to_map\\Roaptomap.jsx":"5","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\proyectos\\Foco.jsx":"6","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Soporte.jsx":"7","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\navbar\\Navigation.jsx":"8","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\SignUpModal.jsx":"9","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\SignInModal.jsx":"10","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\WhitepaperHome.jsx":"11","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\cuentaregresiva.js":"12","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\i18n.js":"13","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Home.jsx":"14","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\App.js":"15","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\contexts\\AuthContext.jsx":"16","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\navbar\\mostrarmenu.js":"17","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\config\\firebase.js":"18","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Banner.jsx":"19","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Countdown.jsx":"20","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Video.jsx":"21","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\proyectos\\Proyectos.jsx":"22","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\PreguntasFrecuentes.jsx":"23","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Newsletter.jsx":"24","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\MapaApp.jsx":"25","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Ventajas.jsx":"26","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\whitepaper\\Loader.jsx":"27","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\whitepaper\\ControlPanel.jsx":"28","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\footer\\Footer.jsx":"29","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\wallet\\Wallet.jsx":"30","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\Recovery.jsx":"31","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\Profile.jsx":"32","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\Checkout.jsx":"33","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\acerca\\cardsworkers.jsx":"34","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\road_to_map\\carussel.jsx":"35","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\PasswordRecoveryModal.jsx":"36","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\wallet\\HeaderCards.jsx":"37","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\CheckConnection.jsx":"38","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\PurchaseHistory.jsx":"39","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\PaymentComponent.jsx":"40","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\DollarMarktComponent.jsx":"41","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\UploadImage.jsx":"42","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\js\\canvasUtils.js":"43","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\TokenAmount.jsx":"44","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\PaymentForm.jsx":"45","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\Review.jsx":"46","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\AddressForm.jsx":"47","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\ParticlesBackground.js":"48","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\config\\Particles-config.js":"49","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\ExpansionComponent.jsx":"50","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\VerifiedProfile.jsx":"51","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\PersonalData.jsx":"52","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\js\\encrypt.js":"53"},{"size":2361,"mtime":1620760977899,"results":"54","hashOfConfig":"55"},{"size":333,"mtime":1620674028504,"results":"56","hashOfConfig":"55"},{"size":4090,"mtime":1620674027699,"results":"57","hashOfConfig":"55"},{"size":11711,"mtime":1620674027650,"results":"58","hashOfConfig":"55"},{"size":1787,"mtime":1620674027691,"results":"59","hashOfConfig":"55"},{"size":520,"mtime":1620674027687,"results":"60","hashOfConfig":"55"},{"size":1482,"mtime":1620674027674,"results":"61","hashOfConfig":"55"},{"size":9008,"mtime":1620760977897,"results":"62","hashOfConfig":"55"},{"size":28798,"mtime":1620674027711,"results":"63","hashOfConfig":"55"},{"size":16467,"mtime":1620675042526,"results":"64","hashOfConfig":"55"},{"size":815,"mtime":1620674027680,"results":"65","hashOfConfig":"55"},{"size":1786,"mtime":1613762588221,"results":"66","hashOfConfig":"55"},{"size":1698,"mtime":1615327723444,"results":"67","hashOfConfig":"55"},{"size":1544,"mtime":1620674027663,"results":"68","hashOfConfig":"55"},{"size":2820,"mtime":1620674027648,"results":"69","hashOfConfig":"55"},{"size":1524,"mtime":1620674027656,"results":"70","hashOfConfig":"55"},{"size":519,"mtime":1620674027686,"results":"71","hashOfConfig":"55"},{"size":618,"mtime":1614706001121,"results":"72","hashOfConfig":"55"},{"size":2274,"mtime":1620674027659,"results":"73","hashOfConfig":"55"},{"size":1718,"mtime":1620674027661,"results":"74","hashOfConfig":"55"},{"size":653,"mtime":1620674027678,"results":"75","hashOfConfig":"55"},{"size":11082,"mtime":1620674027689,"results":"76","hashOfConfig":"55"},{"size":2857,"mtime":1620674027672,"results":"77","hashOfConfig":"55"},{"size":747,"mtime":1620674027666,"results":"78","hashOfConfig":"55"},{"size":7082,"mtime":1620674027665,"results":"79","hashOfConfig":"55"},{"size":3086,"mtime":1620674027676,"results":"80","hashOfConfig":"55"},{"size":465,"mtime":1614628637556,"results":"81","hashOfConfig":"55"},{"size":1756,"mtime":1614118356014,"results":"82","hashOfConfig":"55"},{"size":8419,"mtime":1620674027658,"results":"83","hashOfConfig":"55"},{"size":17713,"mtime":1620674027994,"results":"84","hashOfConfig":"55"},{"size":11461,"mtime":1620674027708,"results":"85","hashOfConfig":"55"},{"size":18810,"mtime":1620674027735,"results":"86","hashOfConfig":"55"},{"size":12841,"mtime":1620837102704,"results":"87","hashOfConfig":"55"},{"size":7552,"mtime":1620674027651,"results":"88","hashOfConfig":"55"},{"size":3098,"mtime":1620674027695,"results":"89","hashOfConfig":"55"},{"size":5923,"mtime":1620674027703,"results":"90","hashOfConfig":"55"},{"size":3488,"mtime":1620674027993,"results":"91","hashOfConfig":"55"},{"size":1727,"mtime":1620674027697,"results":"92","hashOfConfig":"55"},{"size":15609,"mtime":1620674027706,"results":"93","hashOfConfig":"55"},{"size":2353,"mtime":1620674027704,"results":"94","hashOfConfig":"55"},{"size":3857,"mtime":1620674027700,"results":"95","hashOfConfig":"55"},{"size":8112,"mtime":1620674027736,"results":"96","hashOfConfig":"55"},{"size":2454,"mtime":1620674027728,"results":"97","hashOfConfig":"55"},{"size":4558,"mtime":1620836542469,"results":"98","hashOfConfig":"55"},{"size":1626,"mtime":1620674027718,"results":"99","hashOfConfig":"55"},{"size":13855,"mtime":1620674027719,"results":"100","hashOfConfig":"55"},{"size":3315,"mtime":1620674027713,"results":"101","hashOfConfig":"55"},{"size":298,"mtime":1620674027669,"results":"102","hashOfConfig":"55"},{"size":2358,"mtime":1620674027655,"results":"103","hashOfConfig":"55"},{"size":2381,"mtime":1620674027731,"results":"104","hashOfConfig":"55"},{"size":10011,"mtime":1620674027738,"results":"105","hashOfConfig":"55"},{"size":16381,"mtime":1620674027733,"results":"106","hashOfConfig":"55"},{"size":327,"mtime":1620674027729,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rcmxdw",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\whitepaper\\Pdf.jsx",["224"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\index.js",[],["225","226"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\Dashboard.jsx",["227","228","229","230","231","232"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\acerca\\Acerca.jsx",["233","234","235","236","237","238","239","240","241","242"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\road_to_map\\Roaptomap.jsx",["243","244"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\proyectos\\Foco.jsx",["245","246","247","248"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Soporte.jsx",["249"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\navbar\\Navigation.jsx",["250","251","252","253","254","255","256","257","258","259","260"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\SignUpModal.jsx",["261","262","263","264","265","266"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\SignInModal.jsx",["267","268","269","270"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\WhitepaperHome.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\cuentaregresiva.js",["271","272","273","274"],"import '../../App.css';\r\nimport React, {Component} from 'react';\r\nimport Lineadias from '../../images/lineadias.svg';\r\n\r\n\r\nconst d = document;\r\n\r\n\r\nexport default function contador(id, limitDate, finalMessage) {\r\n    const $contador = document.getElementById(id),\r\n        contadorDate = new Date(limitDate).getTime();\r\n    let contadorTempo = setInterval(() => {\r\n        let now = new Date().getTime(),\r\n            limitTime = contadorDate - now,\r\n            days = (Math.floor(limitTime / (1000 * 60 * 60 * 24))),\r\n            hours = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60 * 24) / (1000 * 60 * 60))).slice(-2),\r\n            minutes = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60) / (1000 * 60))).slice(-2),\r\n            seconds = (\"0\" + Math.floor(limitTime % (1000 * 60) / (1000))).slice(-2);\r\n\r\n        $contador.innerHTML = `<button class=\" btn contador-fap fap-dias fap-btn \"><p class=\"num-conta\"> ${days}</p> <img src=${Lineadias} alt=\"linea\" class=\"linea-dias\"/></button> <i class=\"texto-contenedor\">\r\n    <br/>dias</i> \r\n    \r\n    <button class=\"btn contador-fap fap-horas fap-btn\"><p class=\"num-conta\"> ${hours}</p></button> <br/><i class=\"texto-contenedor texto-horas\">\r\n    <br/>horas</i>\r\n     <button class=\"btn contador-fap fap-minutos fap-btn \"><p class=\"num-conta\">${minutes}</p></button><br/><i class=\"texto-contenedor texto-min\">\r\n     <br/>minutos</i>\r\n    <button class=\"btn contador-fap fap-seg fap-btn\"><p class=\"num-conta\">${seconds}</p></button><br/><i class=\"texto-contenedor texto-seg\">\r\n    <br/>segundos</i> `\r\n\r\n        if (limitTime < 0) {\r\n            clearInterval(contadorTempo);\r\n            $contador.innerHTML = `<h1 class=\"fintokens\">${finalMessage}</h1>  `\r\n        }\r\n\r\n\r\n    }, 1000);\r\n\r\n\r\n}\r\n\r\n{/*window.onload = function()  { */\r\n}","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\i18n.js",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Home.jsx",["275","276"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\App.js",["277"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\contexts\\AuthContext.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\navbar\\mostrarmenu.js",["278","279","280"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\config\\firebase.js",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Banner.jsx",["281","282","283","284","285","286"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Countdown.jsx",["287","288"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Video.jsx",["289"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\proyectos\\Proyectos.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\PreguntasFrecuentes.jsx",["290"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Newsletter.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\MapaApp.jsx",["291","292","293","294","295","296","297","298","299","300","301","302"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\Ventajas.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\whitepaper\\Loader.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\whitepaper\\ControlPanel.jsx",["303","304"],"import React from 'react';\r\nimport Engrane1 from '../../images/engrane1.svg';\r\nimport './Whitepaper.css';\r\n\r\n\r\nconst ControlPanel = (props) =>{\r\n    const {pageNumber, numPages, setPageNumber,setScale} = props;\r\n    const isFirstPage = pageNumber===1;\r\n    const isLastPage =pageNumber===numPages;\r\n\r\n    const firstPageClass=isFirstPage ? 'disabled ':'clickable';\r\n    const lastPageClass=isLastPage ? 'disabled ':'clickable';\r\n\r\n    const goToFirstPage=()=>{\r\n        if(!isFirstPage) setPageNumber(1);\r\n    };\r\n   const goToPreviousPage=()=>{\r\n    if(!isFirstPage) setPageNumber(pageNumber -1);\r\n};\r\n   \r\n   const goToNextPage=()=>{\r\n    if(!isLastPage) setPageNumber(pageNumber +1 );\r\n   };\r\n   const goToLastPage=()=>{\r\n    if(!isLastPage) setPageNumber(numPages);\r\n   };\r\n        \r\n    const onChangePage=(e)=>{\r\n            const {value}=e.target;\r\n            setPageNumber(Number(value));\r\n    };\r\n    \r\n    return(\r\n        <div className=\"row control-panel \">\r\n            <div className=\" p-3 \">\r\n            <p className=\"control-para\">\r\n            <i className={`fas fa-fast-backward mx-3 ${firstPageClass}` } onClick={goToFirstPage}/>\r\n            <i className={`fas fa-backward mx-3 ${firstPageClass}` } onClick={goToPreviousPage}/>\r\n             <span>Page <input type=\"number\" min={1} max={numPages || 1} name=\"pageNumber\" \r\n             onChange={onChangePage}\r\n             value={pageNumber}className=\"input-pdf p-0 pl-2 \"/> {pageNumber} of {numPages}</span>\r\n            <i className={`fas fa-forward  mx-3 ${lastPageClass}`} onClick={goToNextPage}/>\r\n            <i className={`fas fa-fast-forward mx-3 ${lastPageClass}`} onClick={goToLastPage}/> </p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ControlPanel;","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\footer\\Footer.jsx",["305","306","307"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\wallet\\Wallet.jsx",["308","309","310","311","312","313","314","315","316","317","318"],"import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\n\r\nimport {useAuth} from \"../../contexts/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n//OWN IMPORTATIONS\r\nimport \"./../css/nucleo.css\";\r\nimport \"./../scss/argon-dashboard-react.scss\";\r\nimport \"./../checkout/css/style.css\";\r\nimport HeaderCards from \"./HeaderCards\";\r\n\r\n//MATERIAL IMPORTS\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport CropFreeIcon from '@material-ui/icons/CropFree';\r\n\r\n//QR UTILITIES IMPORTATIONS\r\nimport QRCode from \"react-qr-code\";\r\nimport QrReader from 'react-qr-reader'\r\nimport {db} from \"../../config/firebase\";\r\n\r\nimport {generateAccount} from \"tron-create-address\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Wallet = () => {\r\n\r\n    const {currentUser, logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n    const [scannerOpen, setScannerOpen] = useState(false);\r\n    const [scanValue, setScanValue] = useState(\"\");\r\n    const [logged, setLogged] = useState(false);\r\n    const [uid, setUid] = useState(\"\");\r\n    const [amount, setAmount] = useState(0);\r\n    const [userInfo, setUserInfo] = useState({});\r\n    const [tokensToSend, setTokensToSend] = useState(0);\r\n    //ESTO TIENE QUE IR EN EL BACKEND, AHORITA ES PARA HACER PRUEBAS RÁPIDO\r\n    const [tokenAddress, setTokenAddress] = useState(\"\");\r\n    const [tokenPrivateKey, setTokenPrivateKey] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let email = currentUser.email;\r\n            let id = currentUser.uid;\r\n            setUid(id);\r\n            getUserData(id);\r\n            console.log(userInfo);\r\n            console.log(\"HOLA\");\r\n            console.log(\"ADIOS\");\r\n            setLogged(true);\r\n            getData(id);\r\n        } catch (e) {\r\n            history.push(\"/Home\");\r\n            setLogged(false);\r\n        }\r\n    }, []);\r\n\r\n    const getUserData = async(id) => {\r\n        try{\r\n            let docRef = db.collection('credentials').doc(id);\r\n            await docRef.onSnapshot(doc => {\r\n                if(doc.exists){\r\n                    setUserInfo(doc.data());\r\n                    setAmount(doc.data().suns);\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.log(\"Wallet.jsx - getUserData()\" + e);\r\n        }\r\n    }\r\n\r\n    const getData = async (id) => {\r\n        await axios.get(\"https://sunshine-ico.uc.r.appspot.com/tron-data\", {\r\n            params: {\r\n                uid: id\r\n            }\r\n        }).then(response => {\r\n            console.log(\"LISTO\", response.data.tokenAddress);\r\n            setTokenAddress(response.data.tokenAddress);\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    const sendTokens = async e => {\r\n        e.preventDefault();\r\n        try{\r\n            const response = await axios.post(\"https://sunshine-ico.uc.r.appspot.com/send-tokens\", {\r\n                uid,\r\n                amount: tokensToSend,\r\n                toAddress: scanValue\r\n            });\r\n            console.log(response);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        //CONECTARSE CON /send-tokens EN BACKEND Y MANDAR uid, amount, toAddress\r\n    }\r\n\r\n    const ReadQR = ({setScanValue}) => {\r\n\r\n        const [value, setValue] = useState(\"\");\r\n        const [facing2, setFacing]=useState(\"near\");\r\n\r\n        const handleError = (e) => {\r\n            console.log(e);\r\n        }\r\n\r\n        if(value){\r\n            setScanValue(value);\r\n            document.getElementById(\"closeScanner\").click();\r\n            return null;\r\n        } else {\r\n\r\n            return (\r\n                    <QrReader\r\n                        delay={1000}\r\n                        style={{width: 350}}\r\n                        onError={handleError}\r\n                        onScan={data => {\r\n                            console.log(data);\r\n                            if(data){\r\n                                setValue(data)\r\n                            }\r\n                        }}\r\n                        facingMode=\"environment\"\r\n                    />\r\n            )\r\n        }\r\n    }\r\n\r\n    const renderWallet = () => {\r\n        if(logged){\r\n            return(\r\n                <div className=\"mt-5 mt-md-0 bodyWallet\">\r\n                    <a href=\"#\" type=\"button\" id=\"openScanner\" data-toggle=\"modal\"\r\n                       data-target=\"#exampleModalCenter\" />\r\n\r\n                    <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\"\r\n                         aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\" data-backdrop=\"static\"\r\n                         data-keyboard=\"false\">\r\n                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <button type=\"button\" onClick={() => {setScannerOpen(false)}} id=\"closeScanner\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span className=\"text-dark\" aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"qr-modal-body d-flex justify-content-center\">\r\n                                    {scannerOpen ? <ReadQR setScanValue={setScanValue} /> : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <HeaderCards tokensNumber={amount}/>\r\n                    {/* Page content */}\r\n                    <Container className=\"mt--7\" fluid>\r\n                        <Row className=\"d-flex justify-content-center\">\r\n                            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n\r\n                                <Card className=\"bg-gradient-default shadow\">\r\n                                    <CardHeader className=\"bg-transparent\">\r\n                                        <Row className=\"align-items-center\">\r\n                                            <div className=\"col-12\">\r\n                                                <p className=\"text-uppercase text-light mb-0\">\r\n                                                    Spot wallet\r\n                                                </p>\r\n                                                <h6 className=\"text-white mb-3\">SUN</h6>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"nav-wrapper\">\r\n                                                    <ul className=\"nav nav-pills nav-fill flex-column flex-md-row\"\r\n                                                        id=\"tabs-icons-text\" role=\"tablist\">\r\n                                                        <li className=\"nav-item\">\r\n                                                            <a className=\"nav-link mb-sm-3 mb-md-0 active\"\r\n                                                               id=\"tabs-icons-text-1-tab\" data-toggle=\"tab\"\r\n                                                               href=\"#tabs-icons-text-1\" role=\"tab\"\r\n                                                               aria-controls=\"tabs-icons-text-1\"\r\n                                                               aria-selected=\"true\">Recibir</a>\r\n                                                        </li>\r\n                                                        <li className=\"nav-item\">\r\n                                                            <a className=\"nav-link mb-sm-3 mb-md-0\" id=\"tabs-icons-text-2-tab\"\r\n                                                               data-toggle=\"tab\" href=\"#tabs-icons-text-2\" role=\"tab\"\r\n                                                               aria-controls=\"tabs-icons-text-2\"\r\n                                                               aria-selected=\"false\">Enviar</a>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Row>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"tab-content\" id=\"myTabContent\">\r\n                                                <div className=\"tab-pane fade show active\" id=\"tabs-icons-text-1\"\r\n                                                     role=\"tabpanel\" aria-labelledby=\"tabs-icons-text-1-tab\">\r\n                                                    <div className=\"col-12 d-flex justify-content-center\">\r\n                                                        <div style={{borderColor: \"white\", border: \"solid\", backgroundColor: \"white\", width: \"min-content\"}}>\r\n                                                            <QRCode value={tokenAddress} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-12 mt-5\">\r\n                                                        <h6 className=\"text-uppercase text-light ls-1 mb-1\">\r\n                                                            Wallet address\r\n                                                        </h6>\r\n                                                        <p className=\"text-light\">{tokenAddress}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"tab-pane fade\" id=\"tabs-icons-text-2\" role=\"tabpanel\"\r\n                                                     aria-labelledby=\"tabs-icons-text-2-tab\">\r\n                                                    <form onSubmit={sendTokens}>\r\n\r\n                                                        <div className=\"container px-md-5\">\r\n                                                            <div className=\"row px-md-5\">\r\n\r\n\r\n                                                                <div className=\"col-12 mb-4 px-md-5\">\r\n                                                                    <FormControl fullWidth style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\", borderRadius: 4}} variant=\"filled\">\r\n                                                                        <InputLabel htmlFor=\"filled-adornment-password\">Dirección de destino</InputLabel>\r\n                                                                        <FilledInput\r\n                                                                            id=\"filled-adornment-password\"\r\n                                                                            required\r\n                                                                            type={'text'}\r\n                                                                            value={scanValue}\r\n                                                                            onChange={e => setScanValue(e.target.value)}\r\n                                                                            endAdornment={\r\n                                                                                <InputAdornment position=\"end\">\r\n                                                                                    <IconButton\r\n                                                                                        aria-label=\"toggle password visibility\"\r\n                                                                                        onClick={() => {\r\n                                                                                            setScannerOpen(true);\r\n                                                                                            document.getElementById(\"openScanner\").click();\r\n                                                                                        }}\r\n                                                                                        edge=\"end\"\r\n                                                                                    >\r\n                                                                                        <CropFreeIcon />\r\n                                                                                    </IconButton>\r\n                                                                                </InputAdornment>\r\n                                                                            }\r\n                                                                        />\r\n                                                                    </FormControl>\r\n                                                                </div>\r\n\r\n\r\n                                                                <div className=\"col-12 mb-4 px-md-5\">\r\n\r\n                                                                    <TextField\r\n                                                                        fullWidth\r\n                                                                        required\r\n                                                                        id=\"filled-basic\"\r\n                                                                        label=\"Cantidad (SUN):\"\r\n                                                                        value={tokensToSend}\r\n                                                                        onChange={e => {\r\n                                                                            if(tokensToSend === 0){\r\n                                                                                setTokensToSend(null);\r\n                                                                            }\r\n                                                                            setTokensToSend(e.target.value);\r\n                                                                        }}\r\n                                                                        variant=\"filled\"\r\n                                                                        style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\", borderRadius: 4}}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row mt-2 px-md-5\">\r\n\r\n                                                                <div className=\"col-12 px-md-5 d-flex justify-content-start\">\r\n                                                                    <p className=\"text-light\">SUNS a enviar: <strong>{tokensToSend}</strong></p>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-12 px-md-5 d-flex justify-content-start\">\r\n                                                                    <p className=\"text-light\">SUNS restantes: <strong>{(amount - tokensToSend) || 0}</strong></p>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-12 px-md-5\">\r\n                                                                    <Divider light style={{backgroundColor: \"#FFFFFF\"}} />\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row mt-5 px-md-5\">\r\n                                                                <div className=\"col-12 px-md-5\">\r\n                                                                    <Button disabled fullWidth variant=\"contained\" size=\"large\" type=\"submit\" color=\"primary\">\r\n                                                                        ENVIAR\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {renderWallet()}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Wallet;\r\n","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\Recovery.jsx",["319","320","321","322"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\Profile.jsx",["323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import 'date-fns';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {useAuth} from \"../../contexts/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport {db, useStorage} from \"../../config/firebase\";\r\nimport axios from \"axios\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport 'react-phone-input-2/lib/material.css'\r\nimport {Document, Page} from 'react-pdf';\r\nimport ExpansionComponent from \"./ExpansionComponent\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n} from \"reactstrap\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport AVATAR from '../../../images/avatardefault.png';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nconst UserHeader = () => {\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n                style={{\r\n                    minHeight: \"200px\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center top\",\r\n                }}\r\n            >\r\n                {/* Mask */}\r\n                <span className=\"mask bg-gradient-default opacity-8\" />\r\n                {/* Header container */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const classes = useStyles();\r\n    const {currentUser, logout} = useAuth();\r\n    const [logged, setLogged] = useState(false);\r\n    const history = useHistory();\r\n    const [uid, setUid] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [birthday, setBirthday] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    const [countryCompleteName, setCountryCompleteName] = useState(\"\");\r\n    const [stateLocation, setStateLocation] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [profileStatus, setProfileStatus] = useState(0);\r\n    const [doc, setDoc] = useState(\"\");\r\n    const [jalaPorfavor, setAuthToken] = useState(\"\");\r\n    const [countriesAPI, setCountriesAPI] = useState([]);\r\n    const [statesAPI, setStatesAPI] = useState([]);\r\n    const [citiesAPI, setCitiesAPI] = useState([]);\r\n    const [filePreview, setFilePreview] = useState([]);\r\n    const [fileFirestore, setFileFirestore] = useState(null);\r\n    const [uploadValue, setUploadValue] = useState(0);\r\n    const [fileObject, setFileObject] = useState(\"\");\r\n    const [profilePictureStatus, setProfilePictureStatus] = useState(0);\r\n    const [croppedImage, setCroppedImage] = useState(null);\r\n    const [image, setImage] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            let email = currentUser.email;\r\n            let id = currentUser.uid;\r\n            if (!currentUser.emailVerified) {\r\n                setLogged(false);\r\n                logout();\r\n                history.push(\"/Home\");\r\n            } else {\r\n                setLogged(true);\r\n                history.push(\"/Profile\");\r\n                getUserData(id);\r\n                setUid(id);\r\n                getAuthTokenCountries().then(() => {\r\n                    getCountriesAPI();\r\n                });\r\n            }\r\n        } catch (e) {\r\n            history.push(\"/Home\");\r\n            setLogged(false);\r\n        }\r\n    }, [jalaPorfavor]);\r\n\r\n    const setFile = (e) => {\r\n        try {\r\n            const jpegImage = \"image/jpeg\";\r\n            const pngImage = \"image/png\";\r\n            const pdfDocument = \"application/pdf\";\r\n            const acceptedFiles = [jpegImage, pngImage, pdfDocument];\r\n            const maxSize = 5242880;\r\n\r\n            if (acceptedFiles.includes(e.type)) {\r\n                if (e.size <= maxSize) {\r\n                    switch (e.type) {\r\n                        case jpegImage:\r\n                        case pngImage:\r\n                            setFilePreview([URL.createObjectURL(e), \"image\"]);\r\n                            setFileObject(\"image\");\r\n                            console.log(e);\r\n                            setFileFirestore(e);\r\n                            break;\r\n\r\n                        case pdfDocument:\r\n                            setFilePreview([URL.createObjectURL(e), \"pdf\"]);\r\n                            setFileObject(\"pdf\");\r\n                            setFileFirestore(e);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    swal(\"Archivo muy pesado\", \"Tu archivo excede el peso permitido, maximo 5 MB\", \"error\");\r\n                }\r\n\r\n            } else {\r\n                swal(\"Archivo no válido\", \"Solo puedes subir un formato imagen o pdf\", \"error\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const showFile = () => {\r\n\r\n        if ((profileStatus === 1 || profileStatus === 2 || profileStatus === 5 || profileStatus === 7)) {\r\n            if (filePreview[1] === \"image\") {\r\n                return (\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\r\n                            <img src={filePreview[0]} className=\"img-fluid\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            } else if (filePreview[1] === \"pdf\") {\r\n                return (\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\r\n                            <Document file={filePreview[0]}>\r\n                                <Page pageNumber={1}/>\r\n                            </Document>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            if (fileObject === \"image\") {\r\n                return (\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\r\n                            <img src={doc} className=\"img-fluid\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            } else if (fileObject === \"pdf\") {\r\n                return (\r\n                    <div className=\"row d-flex justify-content-center\">\r\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\r\n                            <iframe\r\n                                src={doc}\r\n                                frameBorder=\"0\" width=\"100%\" height=\"300\"></iframe>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            } else {\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const getUserData = async (id) => {\r\n        try {\r\n            let docRef = db.collection('credentials').doc(id);\r\n            await docRef.onSnapshot(doc => {\r\n                if (doc.exists) {\r\n                    setName(doc.data().name);\r\n                    setLastname(doc.data().lastname);\r\n                    setBirthday(timeConverter(doc.data().birthday.seconds));\r\n                    setCountry(doc.data().country);\r\n                    setStateLocation(doc.data().state);\r\n                    setCity(doc.data().city);\r\n                    setPhone(doc.data().phone);\r\n                    setAddress(doc.data().address);\r\n                    setProfileStatus(doc.data().profileStatus);\r\n                    setDoc(doc.data().doc);\r\n                    setFileObject(doc.data().fileType);\r\n                    setProfilePictureStatus(doc.data().profilePictureStatus);\r\n                    setCroppedImage(doc.data().profilePicture)\r\n                    getStatesAPI(doc.data().countryComplete);\r\n                    setCountryCompleteName(doc.data().countryComplete);\r\n                }\r\n            });\r\n\r\n        } catch (e) {\r\n            //console.log(\"Profile.jsx - getUserData()\" + e);\r\n        }\r\n\r\n    }\r\n\r\n    const getAuthTokenCountries = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://www.universal-tutorial.com/api/getaccesstoken\", {\r\n                headers: {\r\n                    \"api-token\": \"8X4CFJBt--Ev5K8GkL_R9Z2lNS72XQ9ez_NutQRcq4bannc96Q4-YGjDq4IKqlDSFas\",\r\n                    \"user-email\": \"taikus.jango@sunshine-imagine.io\"\r\n                }\r\n            });\r\n            await setAuthToken(\"Bearer \" + response.data.auth_token);\r\n        } catch (e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    const getCountriesAPI = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://www.universal-tutorial.com/api/countries/\", {\r\n                headers: {\r\n                    Authorization: jalaPorfavor\r\n                }\r\n            });\r\n            setCountriesAPI(response.data);\r\n        } catch (e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    const getStatesAPI = async (countryAPI) => {\r\n        try {\r\n            const response = await axios.get(`https://www.universal-tutorial.com/api/states/${countryAPI}`, {\r\n                headers: {\r\n                    Authorization: jalaPorfavor\r\n                }\r\n            });\r\n            setStatesAPI(response.data);\r\n        } catch (e) {\r\n            //console.log(e);\r\n        }\r\n    }\r\n\r\n    const timeConverter = (UNIX_timestamp) => {\r\n        let a = new Date(UNIX_timestamp * 1000);\r\n        let year = a.getFullYear();\r\n        let month = a.getMonth() + 1;\r\n        let date = a.getDate().toString().length === 1 ? \"0\" + a.getDate().toString() : a.getDate();\r\n        let time = month + '/' + date + '/' + year;\r\n        return new Date(time);\r\n    }\r\n\r\n    const getStates = stateValueRequired => {\r\n        return eval(stateValueRequired);\r\n    }\r\n\r\n    const setStates = (stateRequired, value) => {\r\n        eval(stateRequired)(value);\r\n    }\r\n\r\n    const uploadProfilePicture = () => {\r\n        swal({\r\n            title: \"¿Estas seguro de subir esa foto?\",\r\n            text: \"Una vez enviada la foto no se podrá modificar, asegúrate de que cumpla los requisitos antes mencionados\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willConfirm) => {\r\n                if (willConfirm) {\r\n                    setOpen(true);\r\n                    const storageRef = useStorage.ref(`credentials/profilePictures-${uid}`);\r\n                    const task = storageRef.put(image);\r\n                    task.on('state_changed', snapshot => {\r\n                        let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                        setStates(\"setUploadValue\", percentage);\r\n                    }, error => {\r\n                        console.log(error);\r\n                    }, () => {\r\n                        storageRef.getDownloadURL().then(url => {\r\n                            db.collection('credentials').doc(uid).update({\r\n                                profilePicture: url,\r\n                                profilePictureStatus: 1\r\n                            }).then(() => {\r\n                                setOpen(false);\r\n                                swal(\"La foto de tu perfil ha sido actualizada con éxito\", \"\", \"success\");\r\n                            });\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    const getAge = (birthDateString) => {\r\n        let today = new Date();\r\n        let birthDate = new Date(birthDateString);\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        let m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    }\r\n\r\n    return (\r\n        <div className=\"pb-5 contenedor-profile\">\r\n            <UserHeader />\r\n            {/* Page content */}\r\n            <Container className=\"mt-3 mt--7 mb-5\" fluid>\r\n                <Row>\r\n                    <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\r\n                        <Card className=\"card-profile shadow mt-5 mt-lg-0\">\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col className=\"order-lg-2\" lg=\"3\">\r\n                                    <div className=\"card-profile-image\">\r\n                                        <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                                            <img\r\n                                                alt=\"...\"\r\n                                                className=\"rounded-circle\"\r\n                                                src={croppedImage || AVATAR}\r\n                                            />\r\n                                        </a>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <CardBody className=\"pt-5 pt-md-0 mt-5 pb-5\">\r\n                                <Row>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                                            {\r\n                                                profilePictureStatus === 0 ? (\r\n                                                    <UploadImage uploadProfilePicture={uploadProfilePicture} getStates={getStates} setStates={setStates}\r\n                                                                 profilePictureStatus={profilePictureStatus}/>) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <Backdrop className={classes.backdrop} open={open} >\r\n                                        <CircularProgress color=\"inherit\" />\r\n                                    </Backdrop>\r\n                                </Row>\r\n                                <div className=\"text-center text-dark mt-3\">\r\n                                    <h3>\r\n                                        {name} {lastname}\r\n                                        <span className=\"font-weight-light\"></span>\r\n                                    </h3>\r\n                                    <div className=\"h5 font-weight-400 mt-3\">\r\n                                        <i className=\"ni location_pin mr-2\" />\r\n                                        {getAge(birthday) ? `${getAge(birthday)} años` : '00 años'}\r\n                                    </div>\r\n                                    <div className=\"h5 font-weight-300\">\r\n                                        <i className=\"ni location_pin mr-2\" />\r\n                                        +{phone || '0000000000'}\r\n                                    </div>\r\n\r\n                                    <div className=\"h5 mt-4\">\r\n                                        <i className=\"ni business_briefcase-24 mr-2\" />\r\n                                        {city || 'Ciudad'}, {stateLocation || 'Estado'}, {countryCompleteName || 'País'}\r\n                                    </div>\r\n                                    <div>\r\n                                        <i className=\"ni education_hat mr-2\" />\r\n                                        {address || 'Dirección'}\r\n                                    </div>\r\n                                    <hr className=\"my-4\" />\r\n\r\n                                    <div className={classes.alert}>\r\n                                        {profileStatus === 3 ?\r\n                                            <Alert variant=\"filled\" severity=\"warning\">En espera de verificación — Se están\r\n                                                validando tus datos</Alert> : null}\r\n                                        {profileStatus === 4 ?\r\n                                            <Alert variant=\"filled\" severity=\"success\">Cuenta verificada</Alert> : null}\r\n                                        {profileStatus === 5 ?\r\n                                            <Alert variant=\"filled\" severity=\"error\">Cuenta no verificada — Verifica tu identificación oficial únicamente</Alert> : null}\r\n                                        {profileStatus === 6 ?\r\n                                            <Alert variant=\"filled\" severity=\"error\">Cuenta no verificada — Verifica tus datos personales únicamente</Alert> : null}\r\n                                        {profileStatus === 7 ?\r\n                                            <Alert variant=\"filled\" severity=\"error\">Cuenta no verificada — Verifica todos tus datos</Alert> : null}\r\n                                    </div>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"order-xl-1\" xl=\"8\">\r\n                        <Card className=\"bg-secondary shadow\">\r\n                            <ExpansionComponent getStates={getStates} setStates={setStates} uid={uid} showFile={showFile} setFile={setFile} profilePictureStatus={profilePictureStatus}/>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 300,\r\n        paddingBottom: 20,\r\n        marginTop: 20,\r\n        marginBottom: 20\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        marginTop: 20,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    cardActions: {},\r\n    large: {\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert: {\r\n        marginTop: 50,\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default Profile;\r\n","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\Checkout.jsx",["346","347","348","349","350","351","352","353"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\acerca\\cardsworkers.jsx",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\road_to_map\\carussel.jsx",["370","371","372","373","374","375","376","377","378","379","380","381","382"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\PasswordRecoveryModal.jsx",["383"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\wallet\\HeaderCards.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\CheckConnection.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\PurchaseHistory.jsx",["384"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\PaymentComponent.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\DollarMarktComponent.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\UploadImage.jsx",["385","386"],"import React, {useState, useCallback, useEffect} from 'react'\r\nimport Cropper from 'react-easy-crop'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {getCroppedImg} from '../js/canvasUtils'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\n\r\nconst UploadImage = ({ uploadProfilePicture, getStates, setStates, profilePictureStatus}) => {\r\n    const classes = useStyles();\r\n    const [imageSrc, setImageSrc] = useState(null);\r\n    const [crop, setCrop] = useState({x: 0, y: 0});\r\n    const [rotation, setRotation] = useState(0);\r\n    const [zoom, setZoom] = useState(1);\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n    const [hideButton, setHideButton] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setHideButton(!(profilePictureStatus === 0));\r\n    }, []);\r\n\r\n\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n        setCroppedAreaPixels(croppedAreaPixels);\r\n    }, []);\r\n\r\n    const showCroppedImage = useCallback(async () => {\r\n        try {\r\n            const croppedImage = await getCroppedImg(\r\n                imageSrc,\r\n                croppedAreaPixels,\r\n                rotation\r\n            )\r\n            setStates(\"setCroppedImage\", URL.createObjectURL(croppedImage))\r\n            setStates(\"setImage\", croppedImage);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }, [imageSrc, croppedAreaPixels, rotation]);\r\n\r\n    const onFileChange = async (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const file = e.target.files[0];\r\n            let imageDataUrl = await readFile(file);\r\n            setImageSrc(imageDataUrl);\r\n        }\r\n    }\r\n\r\n    const choiceImage = () => {\r\n        if (!imageSrc) {\r\n            document.getElementById(\"choiceImage\").click();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                profilePictureStatus === 0 ? (\r\n                    <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                        <Button disabled={hideButton} variant=\"contained\" color=\"primary\" component=\"span\" data-toggle=\"modal\"\r\n                                data-target=\"#uploadImage\"\r\n                                data-backdrop='static' data-keyboard='false' onClick={!hideButton ? choiceImage : null}>\r\n                            Elegir foto\r\n                        </Button>\r\n                        {getStates(\"croppedImage\" && getStates(\"image\")) ? (<Button onClick={uploadProfilePicture}>Subir foto</Button>) : null}\r\n                    </ButtonGroup>\r\n                ) : null\r\n            }\r\n\r\n            <div className=\"modal fade\" id=\"uploadImage\" tabIndex=\"-1\" role=\"dialog\"\r\n                 aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                    <div className=\"modal-content py-0\">\r\n\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title-dashboard\" id=\"exampleModalLabel\">Adapta tu imagen</h5>\r\n                            <button type=\"button\" className=\"close-modal\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <React.Fragment>\r\n                                <div className={classes.cropContainer}>\r\n                                    <Cropper\r\n                                        image={imageSrc}\r\n                                        crop={crop}\r\n                                        rotation={rotation}\r\n                                        zoom={zoom}\r\n                                        aspect={4 / 4}\r\n                                        onCropChange={setCrop}\r\n                                        onRotationChange={setRotation}\r\n                                        onCropComplete={onCropComplete}\r\n                                        onZoomChange={setZoom}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.controls}>\r\n                                    <div className={classes.sliderContainer}>\r\n                                        <Typography\r\n                                            variant=\"overline\"\r\n                                            classes={{root: classes.sliderLabel}}\r\n                                        >\r\n                                            Zoom\r\n                                        </Typography>\r\n                                        <Slider\r\n                                            value={zoom}\r\n                                            min={1}\r\n                                            max={3}\r\n                                            step={0.1}\r\n                                            aria-labelledby=\"Zoom\"\r\n                                            classes={{root: classes.slider}}\r\n                                            onChange={(e, zoom) => setZoom(zoom)}\r\n                                        />\r\n                                    </div>\r\n                                    <Button\r\n                                        onClick={showCroppedImage}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        classes={{root: classes.cropButton}}\r\n                                        data-dismiss=\"modal\" aria-label=\"Close\"\r\n                                    >\r\n                                        Finalizar\r\n                                    </Button>\r\n                                </div>\r\n                                <input type=\"file\" hidden id=\"choiceImage\" onChange={onFileChange} accept=\"image/*\"/>\r\n                                <label htmlFor=\"choiceImage\">\r\n                                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <PhotoCamera/>\r\n                                    </IconButton>\r\n                                </label>\r\n                            </React.Fragment>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst readFile = file => {\r\n    return new Promise(resolve => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => resolve(reader.result), false);\r\n        reader.readAsDataURL(file);\r\n    });\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cropContainer: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: 200,\r\n        background: '#333',\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: 400,\r\n        },\r\n    },\r\n    cropButton: {\r\n        flexShrink: 0,\r\n        marginLeft: 16,\r\n    },\r\n    controls: {\r\n        padding: 16,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n        [theme.breakpoints.up('sm')]: {\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n        },\r\n    },\r\n    sliderContainer: {\r\n        display: 'flex',\r\n        flex: '1',\r\n        alignItems: 'center',\r\n    },\r\n    sliderLabel: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            minWidth: 65,\r\n        },\r\n    },\r\n    slider: {\r\n        padding: '22px 0px',\r\n        marginLeft: 16,\r\n        [theme.breakpoints.up('sm')]: {\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            margin: '0 16px',\r\n        },\r\n    },\r\n}))\r\n\r\n\r\nexport default UploadImage;\r\n","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\js\\canvasUtils.js",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\TokenAmount.jsx",["387","388","389","390","391","392"],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\PaymentForm.jsx",["393"],"import React, {useState} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CREDIT from './../../../images/credit_card.png'\r\nimport OXXO from './../../../images/store.png';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function PaymentForm({handleNext}) {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Método de pago\r\n            </Typography>\r\n\r\n            <Grid container spacing={5} className=\"mt-3\">\r\n\r\n                <Grid item xs={12} md={12}>\r\n\r\n                    <Link onClick={() => handleNext(false, \"card\")} style={{cursor: \"pointer\", textDecoration: \"none\"}}>\r\n                        <Paper elevation={5}>\r\n                            <img src={CREDIT} className=\"img-fluid\" width=\"10%\" alt=\"\"/>\r\n                            <Typography variant=\"h6\">Tarjeta crédito / débito</Typography>\r\n                        </Paper>\r\n                    </Link>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={12}>\r\n                    <Link onClick={() => handleNext(false, \"oxxo\")} style={{cursor: \"pointer\", textDecoration: \"none\"}}>\r\n                        <Paper elevation={5}>\r\n                            <img src={OXXO} className=\"img-fluid\" width=\"10%\" alt=\"\"/>\r\n                            <Typography variant=\"h6\">Pago en oxxo</Typography>\r\n                        </Paper>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\Review.jsx",["394","395","396"],"import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {loadStripe} from \"@stripe/stripe-js\";\r\nimport {CardElement, Elements, useElements, useStripe} from \"@stripe/react-stripe-js\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst stripePromise = loadStripe('pk_test_51IUDGUD9LA3P3AmKfFAk32py2vEcZs0LEw7FWhU8Ebp1YgNqJK09LkJyo11b5dCXWk6ZluCo3JBmTTdbSTc61EKq00EqsKyM49');\r\n\r\nconst CheckoutForm = ({getStates, uid, handleNext, email, currencyType}) => {\r\n    const classes = useStyles();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [loading, setLoading] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [cardComplete, setCardComplete] = useState(false);\r\n    const [readyStripe, setReadyStripe] = useState(false);\r\n\r\n    const buyToken = async (e) => {\r\n        e.preventDefault();\r\n        if(cardComplete){\r\n            setLoading(true);\r\n            if (getStates(\"currency\") >= 1) {\r\n                setOpen(true);\r\n                const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n                    type: 'card',\r\n                    card: elements.getElement(CardElement),\r\n                    billing_details: {\r\n                        email,\r\n                        name: getStates('name') + \" \" + getStates('lastname'),\r\n                        address: {\r\n                            state: getStates('stateLocation'),\r\n                            country: getStates('country'),\r\n                            city: getStates('city'),\r\n                            line1: getStates('address')\r\n                        }\r\n                }\r\n                });\r\n\r\n                if (!error) {\r\n                    setLoading(true);\r\n                    const {id} = paymentMethod;\r\n                    console.log(\"TIPO DE DIVISA = \" + (currencyType.trim()===\"MX\" ? \"MXN\" : \"USD\"));\r\n                    try {\r\n                        const {data} = await axios.post('https://sunshine-ico.uc.r.appspot.com/api/checkout', {\r\n                            id,\r\n                            amount: getStates(\"currency\") * 100,\r\n                            uid,\r\n                            currency: (currencyType.trim()===\"MX\" ? \"MXN\" : \"USD\"),\r\n                            exchange: {\r\n                                usdToMxn: getStates(\"usdToMxn\"),\r\n                                mxnToUsd: getStates(\"mxnToUsd\")\r\n                            }\r\n                        });\r\n                        console.log(data);\r\n                        console.log(getStates(\"paymentDone\"))\r\n                        if (data.codeResponse === 'succeeded') {\r\n                            handleNext(true);\r\n                            console.log(getStates(\"paymentDone\"));\r\n                        } else if (data.codeResponse.code === 'card_declined') {\r\n                            setOpen(false);\r\n                            handleNext(false);\r\n                            switch (data.codeResponse.decline_code) {\r\n                                case 'generic_decline':\r\n                                    swal(\"Tarjeta rechazada\", \"Comunicate con tu banco para resolver el problema o inténtalo más tarde\", \"warning\");\r\n                                    break;\r\n                                case 'insufficient_funds':\r\n                                    swal(\"Tarjeta rechazada\", \"Parece que tu tarjeta no tiene fondos suficientes\", \"warning\");\r\n                                    break;\r\n                                case 'lost_card':\r\n                                case 'stolen_card':\r\n                                    swal(\"Tarjeta rechazada\", \"Parece que tu tarjeta tiene reporte de robo, comunicate con tu banco para resolver el problema\", \"warning\");\r\n                                    break;\r\n                                case \"card_not_supported\":\r\n                                    swal(\"Tarjeta rechazada\", \"Tu tarjeta no es soportada. Por favor usa Visa o Mastercard\", \"warning\");\r\n                                    break;\r\n                                default:\r\n                                    swal(\"Tarjeta rechazada\", \"Ocurrió un error al procesar el pago con la tarjeta indicada, intenta con otra\", \"warning\");\r\n                                    break;\r\n                            }\r\n                        } else {\r\n                            setOpen(false);\r\n                            handleNext(false);\r\n                            switch (data.codeResponse.code) {\r\n                                case 'expired_card':\r\n                                    swal(\"Tarjeta expirada\", \"Parece que tu tarjeta expiró, comunicate con tu banco\", \"warning\");\r\n                                    break;\r\n                                case 'incorrect_cvc':\r\n                                    swal(\"CVC Incorrecto\", \"Revisa el código CVC de tu tarjeta e inténtalo de nuevo, de lo contrario, comunicate con tu banco\", \"warning\");\r\n                                    break;\r\n                                case 'incorrect_number':\r\n                                    swal(\"Datos incorrectos\", \"Verifica que los datos de tu tarjeta sean correctos, de ser así, comunicate con tu banco para resolver el problema\", \"warning\");\r\n                                    break;\r\n                                case 'amount_too_small':\r\n                                    swal(\"Monto muy pequeño\", \"El monto ingresado de compra es muy pequeño para poder ser procesado\", \"warning\");\r\n                                    break;\r\n                                case 'parameter_invalid_integer':\r\n                                    swal(\"Verifica el monto\", \"El monto debe tener centavos válidos\", \"warning\");\r\n                                    break;\r\n                                case 'amount_too_large':\r\n                                    swal(\"Cantidad muy grande\", \"El monto no debe ser mayor a $999,999.99\", \"warning\");\r\n                                    break;\r\n                            }\r\n                        }\r\n                    } catch (error) {\r\n                        setOpen(false);\r\n                        handleNext(false);\r\n                        console.log(\"MENSAJE\");\r\n                        console.log(error);\r\n                    }\r\n                    setLoading(false);\r\n                } else {\r\n                    swal(\"No se pudo procesar el pago\", \"Verifica que los datos que pusiste sean correctos o intenta de nuevo más tarde!\", \"error\");\r\n                }\r\n                setOpen(false);\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    const buyTokenWithOxxo = async () => {\r\n        console.log(\"ENTRO A LA FUNCION\");\r\n        setOpen(true);\r\n        try{\r\n            console.log(\"ENTRO AL TRY\");\r\n            const {data} = await axios.post('https://sunshine-ico.uc.r.appspot.com/create-payment-intent', {\r\n                id: \"holaoxxo\",\r\n                amount: getStates(\"currency\"),\r\n                uid,\r\n                exchange: {\r\n                    usdToMxn: getStates(\"usdToMxn\"),\r\n                    mxnToUsd: getStates(\"mxnToUsd\")\r\n                }\r\n            });\r\n            \r\n            if(data.statusCode === \"successful\"){\r\n                stripe.confirmOxxoPayment(\r\n                    data.clientSecret,\r\n                    {\r\n                        payment_method: {\r\n                            billing_details: {\r\n                                name: getStates('name') + \" \" + getStates('lastname'),\r\n                                email,\r\n                            },\r\n                        },\r\n                    })// Stripe.js will open a modal to display the OXXO voucher to your customer\r\n                    .then(function(result) {\r\n                        // This promise resolves when the customer closes the modal\r\n                        console.log(\"EL USUARIO CERRO EL MODAL\");\r\n                        if (result.error) {\r\n                            // Display error to your customer\r\n                            console.log(result.error);\r\n                        }\r\n                    });\r\n                handleNext(true);\r\n            } else if (data.statusCode === \"amount-exceeded\"){\r\n                swal(\"Monto inválido\", \"El monto máximo que puedes pagar en oxxo son de $10,000 MXN\", \"warning\");\r\n            }\r\n\r\n\r\n            \r\n        } catch (e) {\r\n            console.log(\"ERROR AL INTENTAR PAGAR CON OXXO, INFO: \");\r\n            console.log(e.code, e.message);\r\n        }\r\n        console.log(\"AQUI YA DEBIO ACABAR LA FUNCION\");\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                getStates(\"paymentMethod\") === \"card\" ? (\r\n                    <form onSubmit={buyToken}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <CardElement onReady={() => setReadyStripe(true)} onChange={e => setCardComplete(e.complete)} options={{\r\n                                    style: {\r\n                                        base: {\r\n                                            fontSize: '17px',\r\n                                            color: '#424770',\r\n                                            '::placeholder': {\r\n                                                color: '#aab7c4',\r\n                                            },\r\n                                        },\r\n                                        invalid: {\r\n                                            color: '#9e2146',\r\n                                        },\r\n                                    },\r\n                                }}/>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button disabled={!readyStripe} variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\">\r\n                                    {readyStripe ? \"COMPRAR TOKEN\" : \"CARGANDO...\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                ) : (\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={buyTokenWithOxxo}>\r\n                                {open ? \"PROCESANDO...\" : \"GENERAR PAGO CON OXXO\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            }\r\n            <Backdrop className={classes.backdrop} open={open} >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default function Review({getStates, uid, handleNext, email}) {\r\n    const classes = useStyles();\r\n    const products = [\r\n        {name: 'Sun Token', desc: (getStates(\"currencyType\") === \"MX\" ? getStates(\"currency\") * getStates(\"mxnToUsd\") : getStates(\"currency\")), price: getStates(\"currency\") + ' ' + (getStates(\"currencyType\") === \"MX\" ? \"MXN\" : \"USD\")},\r\n    ];\r\n    const addresses = [getStates(\"address\"), getStates(\"city\"), getStates(\"stateLocation\"), getStates(\"country\")];\r\n    const payments = [\r\n        {name: 'Método de pago', detail: 'Tarjeta débito/crédito'},\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Datos del pago\r\n            </Typography>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography gutterBottom>{getStates(\"name\")} {getStates(\"lastname\")}</Typography>\r\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <List disablePadding>\r\n                {products.map((product) => (\r\n                    <ListItem className={classes.listItem} key={product.name}>\r\n                        <ListItemText primary={product.name} secondary={product.desc}/>\r\n                        <Typography variant=\"body2\">{product.price}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem className={classes.listItem}>\r\n                    <ListItemText primary=\"Total\"/>\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        {getStates(\"currency\")}\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} className=\"mt-3 mb-3\">\r\n                    <Elements stripe={stripePromise}>\r\n                        <CheckoutForm getStates={getStates} uid={uid} handleNext={handleNext} email={email} currencyType={getStates(\"currencyType\")}/>\r\n                    </Elements>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItem: {\r\n        padding: theme.spacing(1, 0),\r\n    },\r\n    total: {\r\n        fontWeight: 700,\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\checkout\\AddressForm.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\home\\ParticlesBackground.js",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\config\\Particles-config.js",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\ExpansionComponent.jsx",[],"C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\VerifiedProfile.jsx",["397"],"import React, {useState} from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport Camaraine from \"../../../images/camaraine.svg\";\r\nimport Pdfine from \"../../../images/pdfine.svg\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport swal from \"sweetalert\";\r\nimport {db, useStorage} from \"../../config/firebase\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {encryptData} from \"../js/encrypt\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nconst VerifiedProfile = ({getStates, setStates, uid, showFile, setFile}) => {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const masterCondition = getStates(\"profileStatus\") === 1 || getStates(\"profileStatus\") === 2 || getStates(\"profileStatus\") === 5 || getStates(\"profileStatus\") === 7;\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            if (masterCondition) {\r\n                if (getStates(\"address\") !== \"\") {\r\n                    if (getStates(\"fileFirestore\") !== null) {\r\n                        swal({\r\n                            title: \"¿Estas seguro de subir la información?\",\r\n                            text: \"Una vez enviada la información no se podrá modificar\",\r\n                            icon: \"warning\",\r\n                            buttons: true,\r\n                            dangerMode: true,\r\n                        })\r\n                            .then((willDelete) => {\r\n                                if (willDelete) {\r\n                                    setOpen(true);\r\n                                    const storageRef = useStorage.ref(`id/${encryptData(uid)}`);\r\n                                    const task = storageRef.put(getStates(\"fileFirestore\"));\r\n                                    task.on('state_changed', snapshot => {\r\n                                        let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                                        setStates(\"setUploadValue\", percentage);\r\n                                    }, error => {\r\n                                        console.log(error);\r\n                                    }, () => {\r\n                                        storageRef.getDownloadURL().then(url => {\r\n                                            db.collection('credentials').doc(uid).update({\r\n                                                profileStatus: 3,\r\n                                                doc: url,\r\n                                                fileType: getStates(\"fileObject\"),\r\n                                            }).then(() => {\r\n                                                setOpen(false);\r\n                                                swal(\"Información actualizada\", \"¡La información de tu perfil fue actualizada con éxito!\", \"success\");\r\n                                            });\r\n                                        })\r\n                                    })\r\n                                }\r\n                            });\r\n                    } else {\r\n                        swal(\"Te falta subir tu identifiación oficial\", \"Para poder continuar con la verificación de tus datos debes subir una foto o pdf de tu identifiacaión oficial de ambos lados!\", \"warning\");\r\n                    }\r\n\r\n                } else {\r\n                    swal(\"Información faltante\", \"Llena todos los campos correspondientes para poder continuar!\", \"warning\");\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(\"Profile.jsx - handleSubmit() -> \" + e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className={classes.root}\r\n                  id={(masterCondition) ? \"profileform\" : \"\"}\r\n                  onSubmit={(masterCondition) ? handleSubmit : () => false}>\r\n\r\n                <div className=\"col-12\">\r\n                    <Typography className={classes.title} variant=\"h4\" component=\"h4\">\r\n                        Sube un documento oficial (INE, Pasaporte, Licencia de conducir...)\r\n                    </Typography>\r\n                </div>\r\n\r\n                <Typography className={classes.title} variant=\"subtitle2\" component=\"h2\"\r\n                            color=\"textSecondary\">\r\n                    Verifica que tus datos coincidan con los datos personales que nos proporcionaste previamente\r\n                </Typography>\r\n\r\n\r\n                <div className=\"row mb-5 mt-5\">\r\n\r\n                    <div className=\"col-12\">\r\n                        <Typography className={classes.title} variant=\"h6\" component=\"h6\">\r\n                            Identificación oficial\r\n                        </Typography>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-5 px-5\">\r\n                        {\r\n                            !(masterCondition) ? showFile() :\r\n                                <span className=\"form-regi col-xl-5 col-lg-7 text-dark\">ID\r\n                                                        <label className=\"btn form-regi\" htmlFor=\"cameraine\">\r\n                                                            <img src={Camaraine} alt=\"\" className=\"\"/>\r\n                                                        </label>\r\n\r\n                                                        <label htmlFor=\"pdfine\" className=\"btn form-regi\">\r\n                                                            <img src={Pdfine} alt=\"\" className=\"\"/>\r\n                                                        </label>\r\n                                                        <div className=\" form-group  form-registro col-12 \">\r\n\r\n                                                            <input type=\"file\" id=\"cameraine\" className=\" d-none\"\r\n                                                                   accept=\"image/*\"\r\n                                                                   onChange={e => setFile(e.target.files[0])}>\r\n                                                            </input>\r\n\r\n                                                            <input type=\"file\" id=\"pdfine\"\r\n                                                                   accept=\"application/pdf\" className=\"d-none\"\r\n                                                                   onChange={e => setFile(e.target.files[0])}>\r\n                                                            </input>\r\n\r\n                                                            <div style={{\r\n                                                                position: 'absolute',\r\n                                                                justifycontent: \"center\",\r\n                                                                bottom: '10px',\r\n                                                                left: '50vw'\r\n                                                            }}>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"container\">\r\n                                                                {showFile()}\r\n                                                            </div>\r\n\r\n                                                            {/*}\r\n                                                            <div>\r\n                                                                <progress value={uploadValue} max=\"100\">\r\n                                                                    {uploadValue}%\r\n                                                                </progress>\r\n                                                                <p className=\"btn form-regi\">{`${uploadValue}%`}</p>\r\n                                                            </div>\r\n                                                            {*/}\r\n\r\n                                                        </div>\r\n                                                    </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-center\">\r\n                        <Button\r\n                            disabled={!(masterCondition)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon/>}\r\n                            type={(masterCondition) ? \"submit\" : \"button\"}\r\n                        >\r\n                            Enviar verificación\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Backdrop className={classes.backdrop} open={open} >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 300,\r\n        paddingBottom: 20,\r\n        marginTop: 20,\r\n        marginBottom: 20\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        marginTop: 20,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    cardActions: {},\r\n    large: {\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default VerifiedProfile;","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\profile\\PersonalData.jsx",["398","399","400","401"],"import 'date-fns';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, TextField, Avatar} from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport swal from \"sweetalert\";\r\nimport {db, useStorage} from \"../../config/firebase\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport UploadImage from \"./UploadImage\";\r\nimport 'react-phone-input-2/lib/material.css'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nconst PersonalData = ({getStates, setStates, uid, profilePictureStatus}) => {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const masterCondition = getStates(\"profileStatus\") === 0 || getStates(\"profileStatus\") === 6 || getStates(\"profileStatus\") === 7;\r\n\r\n    const getAge = (birthDateString) => {\r\n        let today = new Date();\r\n        let birthDate = new Date(birthDateString);\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        let m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        setStates(\"setBirthday\", date);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (masterCondition) {\r\n                if (getStates(\"name\") !== \"\" && getStates(\"lastname\") !== \"\" && getStates(\"birthday\") !== \"\" && getStates(\"country\") !== \"\" && getStates(\"stateLocation\") !== \"\" && getStates(\"city\") !== \"\" && getStates(\"phone\") !== \"\" && getStates(\"address\") !== \"\") {\r\n                    if (getAge(getStates(\"birthday\")) >= 18) {\r\n                        swal({\r\n                            title: \"¿Estas seguro de subir la información?\",\r\n                            text: \"Una vez enviada la información no se podrá modificar\",\r\n                            icon: \"warning\",\r\n                            buttons: true,\r\n                            dangerMode: true,\r\n                        })\r\n                            .then((willConfirm) => {\r\n                                if (willConfirm) {\r\n                                    setOpen(true);\r\n                                    db.collection('credentials').doc(uid).update({\r\n                                        birthday: getStates(\"birthday\"),\r\n                                        city: getStates(\"city\"),\r\n                                        country: getStates(\"country\"),\r\n                                        lastname: getStates(\"lastname\"),\r\n                                        name: getStates(\"name\"),\r\n                                        phone: getStates(\"phone\"),\r\n                                        state: getStates(\"stateLocation\"),\r\n                                        countryComplete: getStates(\"countryCompleteName\"),\r\n                                        address: getStates(\"address\"),\r\n                                        profileStatus: 1,\r\n                                    }).then(() => {\r\n                                        swal(\"Información actualizada\", \"¡La información de tu perfil ha sido actualizada con éxito!\", \"success\");\r\n                                        setOpen(false);\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                    } else {\r\n                        swal(\"Debes ser mayor de edad\", \"Para poder continuar con la verificación de tus datos debes contar con la mayoria de edad\", \"warning\");\r\n                    }\r\n\r\n                } else {\r\n                    swal(\"Información incompleta\", \"Llena todos los campos correspondientes para poder continuar\", \"warning\");\r\n                }\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(\"Profile.jsx - handleSubmit() -> \" + e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Typography className={classes.title} variant=\"h4\" component=\"h4\">\r\n                Datos personales\r\n            </Typography>\r\n            <form className={classes.root}\r\n                  id={(masterCondition) ? \"profileform\" : \"\"}\r\n                  onSubmit={(masterCondition) ? handleSubmit : () => false}>\r\n                <Typography className={classes.title} variant=\"subtitle2\" component=\"h2\"\r\n                            color=\"textSecondary\">\r\n                    Verifica que tus datos y foto coincidan con tu identificación oficial\r\n                </Typography>\r\n                <div className=\"row mt-3\">\r\n\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\r\n                        <TextField variant=\"outlined\" required\r\n                                   disabled={!(masterCondition)}\r\n                                   fullWidth id=\"outlined-basic\" label=\"Nombre(s)\"\r\n                                   style={{alignContent: \"center\"}} value={getStates(\"name\")}\r\n                                   onChange={(masterCondition) ? e => setStates(\"setName\", e.target.value) : () => false}/>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\r\n                        <TextField variant=\"outlined\" required\r\n                                   disabled={!(masterCondition)}\r\n                                   fullWidth id=\"outlined-basic\" label=\"Apellido(s)\" value={getStates(\"lastname\")}\r\n                                   onChange={(masterCondition) ? e => setStates(\"setLastname\", e.target.value) : () => false}/>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                inputVariant=\"outlined\"\r\n                                required\r\n                                id=\"date-picker-dialog\"\r\n                                disabled={!(masterCondition)}\r\n                                fullWidth\r\n                                label=\"Fecha nacimiento\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                value={getStates(\"birthday\") ? getStates(\"birthday\") : null}\r\n                                onChange={(masterCondition) ? handleDateChange : () => false}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\r\n                        <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\r\n                            {\r\n                                (masterCondition) ? (\r\n                                    <>\r\n                                        <InputLabel id=\"demo-simple-select-label\">País</InputLabel>\r\n                                        <Select\r\n                                            required\r\n                                            disabled={!(masterCondition)}\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={(masterCondition) ? getStates(\"country\") : false}\r\n                                            onChange={\r\n                                                (masterCondition) ?\r\n                                                    e => {\r\n                                                        setStates(\"setCountry\", e.target.value)\r\n                                                        setStates(\"setStateLocation\", \"\")\r\n                                                        setStates(\"setCity\", \"\")\r\n                                                        setStates(\"getStatesAPI\", e.currentTarget.id)\r\n                                                        setStates(\"setCountryCompleteName\", e.currentTarget.id)\r\n                                                    } : () => false}>\r\n                                            {\r\n                                                getStates(\"countriesAPI\").map((value, index) => (\r\n                                                    <MenuItem key={index} id={value.country_name}\r\n                                                              value={value.country_short_name}>{value.country_name}</MenuItem>\r\n                                                ))\r\n                                            }\r\n                                        </Select>\r\n                                    </>\r\n                                ) : (\r\n                                    <TextField variant=\"outlined\" required\r\n                                               disabled={!(masterCondition)}\r\n                                               fullWidth id=\"outlined-basic\" label=\"País\" value={getStates(\"country\")}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\r\n                        <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\r\n\r\n                            {\r\n                                (masterCondition) ? (\r\n                                    <>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Estado</InputLabel>\r\n                                        <Select\r\n                                            required\r\n                                            disabled={!(masterCondition)}\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select-state\"\r\n                                            value={(masterCondition) ? getStates(\"stateLocation\") : false}\r\n                                            onChange={\r\n                                                (masterCondition) ?\r\n                                                    e => {\r\n                                                        setStates(\"setStateLocation\", e.target.value)\r\n                                                        setStates(\"setCity\", \"\")\r\n                                                    } : () => false}>\r\n                                            {\r\n                                                getStates(\"statesAPI\").map((value, index) => (\r\n                                                    <MenuItem key={index}\r\n                                                              value={value.state_name}>{value.state_name}</MenuItem>\r\n                                                ))\r\n                                            }\r\n                                        </Select>\r\n                                    </>\r\n                                ) : (\r\n                                    <TextField variant=\"outlined\" required\r\n                                               disabled={!(masterCondition)}\r\n                                               fullWidth id=\"outlined-basic\" label=\"Estado\"\r\n                                               value={getStates(\"stateLocation\")}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\r\n                        <TextField variant=\"outlined\" required\r\n                                   disabled={!(masterCondition)}\r\n                                   fullWidth id=\"outlined-basic\" label=\"Ciudad\" value={getStates(\"city\")}\r\n                                   onChange={(masterCondition) ? e => setStates(\"setCity\", e.target.value) : () => false}/>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\r\n                        {!(masterCondition) ?\r\n                            <TextField required variant=\"outlined\"\r\n                                       disabled={!(masterCondition)}\r\n                                       fullWidth id=\"outlined-basic\" label=\"Número telefonico\"\r\n                                       value={\"+\" + getStates(\"phone\")}\r\n                                       onChange={(masterCondition) ? e => setStates(\"setPhone\", e.target.value) : () => false}/> :\r\n                            <PhoneInput\r\n                                disabled={!(masterCondition)}\r\n                                country={'mx'}\r\n                                inputStyle={{height: 56, width: \"100%\"}}\r\n                                value={getStates(\"phone\")}\r\n                                onChange={(masterCondition) ? e => setStates(\"setPhone\", e) : () => false}\r\n                            />}\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row mt-5 mb-5 px-5 mt-5\">\r\n                        <div className=\"col-12\">\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                disabled={!(masterCondition)}\r\n                                fullWidth\r\n                                id=\"standard-multiline-static\"\r\n                                label=\"Dirección\"\r\n                                multiline\r\n                                rows={4}\r\n                                value={getStates(\"address\")}\r\n                                onChange={(masterCondition) ? e => setStates(\"setAddress\", e.target.value) : () => false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-center\">\r\n                        <Button\r\n                            disabled={!(masterCondition)}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon/>}\r\n                            type={(masterCondition) ? \"submit\" : \"button\"}\r\n                        >\r\n                            Enviar\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Backdrop className={classes.backdrop} open={open} >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 300,\r\n        paddingBottom: 20,\r\n        marginTop: 20,\r\n        marginBottom: 20\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        marginTop: 20,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    cardActions: {},\r\n    large: {\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n        marginBottom: 10\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nexport default PersonalData;","C:\\Users\\Augusto\\Documents\\ico-web-final\\src\\componentes\\user\\js\\encrypt.js",[],{"ruleId":"402","severity":1,"message":"403","line":46,"column":13,"nodeType":"404","endLine":46,"endColumn":307},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":10,"column":8,"nodeType":"411","messageId":"412","endLine":10,"endColumn":23},{"ruleId":"409","severity":1,"message":"413","line":14,"column":25,"nodeType":"411","messageId":"412","endLine":14,"endColumn":31},{"ruleId":"409","severity":1,"message":"414","line":15,"column":12,"nodeType":"411","messageId":"412","endLine":15,"endColumn":23},{"ruleId":"409","severity":1,"message":"415","line":19,"column":12,"nodeType":"411","messageId":"412","endLine":19,"endColumn":22},{"ruleId":"409","severity":1,"message":"416","line":19,"column":24,"nodeType":"411","messageId":"412","endLine":19,"endColumn":37},{"ruleId":"417","severity":1,"message":"418","line":52,"column":7,"nodeType":"419","endLine":52,"endColumn":9,"suggestions":"420"},{"ruleId":"409","severity":1,"message":"421","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":22},{"ruleId":"409","severity":1,"message":"422","line":29,"column":12,"nodeType":"411","messageId":"412","endLine":29,"endColumn":16},{"ruleId":"409","severity":1,"message":"423","line":29,"column":18,"nodeType":"411","messageId":"412","endLine":29,"endColumn":25},{"ruleId":"409","severity":1,"message":"424","line":30,"column":12,"nodeType":"411","messageId":"412","endLine":30,"endColumn":28},{"ruleId":"409","severity":1,"message":"425","line":30,"column":30,"nodeType":"411","messageId":"412","endLine":30,"endColumn":49},{"ruleId":"409","severity":1,"message":"426","line":32,"column":11,"nodeType":"411","messageId":"412","endLine":32,"endColumn":20},{"ruleId":"427","severity":1,"message":"428","line":46,"column":21,"nodeType":"429","messageId":"430","endLine":46,"endColumn":25},{"ruleId":"431","severity":1,"message":"432","line":217,"column":45,"nodeType":"404","endLine":217,"endColumn":145},{"ruleId":"433","severity":1,"message":"434","line":230,"column":53,"nodeType":"404","messageId":"435","endLine":230,"endColumn":101,"fix":"436"},{"ruleId":"433","severity":1,"message":"434","line":235,"column":53,"nodeType":"404","messageId":"435","endLine":235,"endColumn":154,"fix":"437"},{"ruleId":"409","severity":1,"message":"438","line":3,"column":16,"nodeType":"411","messageId":"412","endLine":3,"endColumn":25},{"ruleId":"409","severity":1,"message":"439","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":19},{"ruleId":"409","severity":1,"message":"438","line":4,"column":16,"nodeType":"411","messageId":"412","endLine":4,"endColumn":25},{"ruleId":"409","severity":1,"message":"440","line":4,"column":27,"nodeType":"411","messageId":"412","endLine":4,"endColumn":36},{"ruleId":"409","severity":1,"message":"441","line":4,"column":38,"nodeType":"411","messageId":"412","endLine":4,"endColumn":46},{"ruleId":"409","severity":1,"message":"442","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":12},{"ruleId":"409","severity":1,"message":"443","line":2,"column":8,"nodeType":"411","messageId":"412","endLine":2,"endColumn":16},{"ruleId":"409","severity":1,"message":"440","line":5,"column":26,"nodeType":"411","messageId":"412","endLine":5,"endColumn":35},{"ruleId":"409","severity":1,"message":"444","line":27,"column":20,"nodeType":"411","messageId":"412","endLine":27,"endColumn":29},{"ruleId":"445","severity":1,"message":"446","line":51,"column":9,"nodeType":"447","messageId":"448","endLine":60,"endColumn":10},{"ruleId":"449","severity":1,"message":"450","line":70,"column":29,"nodeType":"404","endLine":70,"endColumn":64},{"ruleId":"451","severity":1,"message":"452","line":84,"column":29,"nodeType":"404","endLine":84,"endColumn":159},{"ruleId":"451","severity":1,"message":"452","line":88,"column":29,"nodeType":"404","endLine":88,"endColumn":159},{"ruleId":"449","severity":1,"message":"450","line":119,"column":29,"nodeType":"404","endLine":119,"endColumn":64},{"ruleId":"451","severity":1,"message":"452","line":147,"column":29,"nodeType":"404","endLine":147,"endColumn":100},{"ruleId":"451","severity":1,"message":"452","line":153,"column":29,"nodeType":"404","endLine":153,"endColumn":100},{"ruleId":"451","severity":1,"message":"452","line":160,"column":29,"nodeType":"404","endLine":160,"endColumn":159},{"ruleId":"451","severity":1,"message":"452","line":164,"column":29,"nodeType":"404","endLine":164,"endColumn":159},{"ruleId":"409","severity":1,"message":"440","line":1,"column":26,"nodeType":"411","messageId":"412","endLine":1,"endColumn":35},{"ruleId":"409","severity":1,"message":"453","line":38,"column":12,"nodeType":"411","messageId":"412","endLine":38,"endColumn":21},{"ruleId":"409","severity":1,"message":"454","line":38,"column":23,"nodeType":"411","messageId":"412","endLine":38,"endColumn":35},{"ruleId":"409","severity":1,"message":"455","line":39,"column":12,"nodeType":"411","messageId":"412","endLine":39,"endColumn":23},{"ruleId":"456","severity":1,"message":"457","line":254,"column":102,"nodeType":"458","messageId":"459","endLine":254,"endColumn":104},{"ruleId":"445","severity":1,"message":"446","line":256,"column":45,"nodeType":"447","messageId":"448","endLine":294,"endColumn":46},{"ruleId":"409","severity":1,"message":"460","line":5,"column":9,"nodeType":"411","messageId":"412","endLine":5,"endColumn":16},{"ruleId":"409","severity":1,"message":"461","line":26,"column":19,"nodeType":"411","messageId":"412","endLine":26,"endColumn":30},{"ruleId":"445","severity":1,"message":"446","line":140,"column":13,"nodeType":"447","messageId":"448","endLine":149,"endColumn":14},{"ruleId":"451","severity":1,"message":"452","line":350,"column":37,"nodeType":"404","endLine":351,"endColumn":69},{"ruleId":"409","severity":1,"message":"462","line":2,"column":8,"nodeType":"411","messageId":"412","endLine":2,"endColumn":13},{"ruleId":"409","severity":1,"message":"438","line":2,"column":16,"nodeType":"411","messageId":"412","endLine":2,"endColumn":25},{"ruleId":"409","severity":1,"message":"463","line":6,"column":7,"nodeType":"411","messageId":"412","endLine":6,"endColumn":8},{"ruleId":"464","severity":1,"message":"465","line":41,"column":1,"nodeType":"466","messageId":"467","endLine":42,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":27,"column":42,"nodeType":"470","messageId":"471","endLine":27,"endColumn":54},{"ruleId":"449","severity":1,"message":"450","line":32,"column":1,"nodeType":"404","endLine":32,"endColumn":57},{"ruleId":"409","severity":1,"message":"472","line":22,"column":8,"nodeType":"411","messageId":"412","endLine":22,"endColumn":19},{"ruleId":"409","severity":1,"message":"462","line":1,"column":8,"nodeType":"411","messageId":"412","endLine":1,"endColumn":13},{"ruleId":"409","severity":1,"message":"438","line":1,"column":16,"nodeType":"411","messageId":"412","endLine":1,"endColumn":25},{"ruleId":"409","severity":1,"message":"473","line":2,"column":8,"nodeType":"411","messageId":"412","endLine":2,"endColumn":9},{"ruleId":"409","severity":1,"message":"438","line":1,"column":27,"nodeType":"411","messageId":"412","endLine":1,"endColumn":36},{"ruleId":"409","severity":1,"message":"474","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":16},{"ruleId":"409","severity":1,"message":"475","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":12},{"ruleId":"449","severity":1,"message":"450","line":41,"column":21,"nodeType":"404","endLine":41,"endColumn":84},{"ruleId":"476","severity":1,"message":"477","line":49,"column":25,"nodeType":"404","endLine":50,"endColumn":67},{"ruleId":"449","severity":1,"message":"450","line":62,"column":17,"nodeType":"404","endLine":62,"endColumn":60},{"ruleId":"449","severity":1,"message":"450","line":33,"column":21,"nodeType":"404","endLine":33,"endColumn":72},{"ruleId":"449","severity":1,"message":"450","line":44,"column":25,"nodeType":"404","endLine":44,"endColumn":74},{"ruleId":"402","severity":1,"message":"403","line":11,"column":17,"nodeType":"404","endLine":13,"endColumn":41},{"ruleId":"449","severity":1,"message":"450","line":80,"column":29,"nodeType":"404","endLine":80,"endColumn":104},{"ruleId":"449","severity":1,"message":"450","line":29,"column":21,"nodeType":"404","endLine":29,"endColumn":75},{"ruleId":"449","severity":1,"message":"450","line":30,"column":21,"nodeType":"404","endLine":30,"endColumn":79},{"ruleId":"449","severity":1,"message":"450","line":46,"column":25,"nodeType":"404","endLine":46,"endColumn":80},{"ruleId":"449","severity":1,"message":"450","line":57,"column":21,"nodeType":"404","endLine":57,"endColumn":89},{"ruleId":"449","severity":1,"message":"450","line":64,"column":5,"nodeType":"404","endLine":64,"endColumn":58},{"ruleId":"449","severity":1,"message":"450","line":77,"column":5,"nodeType":"404","endLine":77,"endColumn":59},{"ruleId":"449","severity":1,"message":"450","line":90,"column":5,"nodeType":"404","endLine":90,"endColumn":59},{"ruleId":"449","severity":1,"message":"450","line":103,"column":5,"nodeType":"404","endLine":103,"endColumn":73},{"ruleId":"449","severity":1,"message":"450","line":116,"column":5,"nodeType":"404","endLine":116,"endColumn":73},{"ruleId":"449","severity":1,"message":"450","line":143,"column":21,"nodeType":"404","endLine":143,"endColumn":69},{"ruleId":"449","severity":1,"message":"450","line":149,"column":21,"nodeType":"404","endLine":149,"endColumn":60},{"ruleId":"449","severity":1,"message":"450","line":153,"column":21,"nodeType":"404","endLine":153,"endColumn":68},{"ruleId":"409","severity":1,"message":"478","line":2,"column":8,"nodeType":"411","messageId":"412","endLine":2,"endColumn":16},{"ruleId":"409","severity":1,"message":"479","line":7,"column":48,"nodeType":"411","messageId":"412","endLine":7,"endColumn":56},{"ruleId":"409","severity":1,"message":"480","line":7,"column":8,"nodeType":"411","messageId":"412","endLine":7,"endColumn":13},{"ruleId":"409","severity":1,"message":"481","line":11,"column":8,"nodeType":"411","messageId":"412","endLine":11,"endColumn":15},{"ruleId":"409","severity":1,"message":"482","line":13,"column":8,"nodeType":"411","messageId":"412","endLine":13,"endColumn":14},{"ruleId":"409","severity":1,"message":"483","line":6,"column":5,"nodeType":"411","messageId":"412","endLine":6,"endColumn":10},{"ruleId":"409","severity":1,"message":"484","line":37,"column":9,"nodeType":"411","messageId":"412","endLine":37,"endColumn":24},{"ruleId":"409","severity":1,"message":"413","line":43,"column":25,"nodeType":"411","messageId":"412","endLine":43,"endColumn":31},{"ruleId":"409","severity":1,"message":"485","line":55,"column":12,"nodeType":"411","messageId":"412","endLine":55,"endColumn":27},{"ruleId":"409","severity":1,"message":"486","line":55,"column":29,"nodeType":"411","messageId":"412","endLine":55,"endColumn":47},{"ruleId":"409","severity":1,"message":"487","line":59,"column":17,"nodeType":"411","messageId":"412","endLine":59,"endColumn":22},{"ruleId":"417","severity":1,"message":"488","line":72,"column":8,"nodeType":"419","endLine":72,"endColumn":10,"suggestions":"489"},{"ruleId":"409","severity":1,"message":"490","line":119,"column":16,"nodeType":"411","messageId":"412","endLine":119,"endColumn":23},{"ruleId":"409","severity":1,"message":"491","line":119,"column":25,"nodeType":"411","messageId":"412","endLine":119,"endColumn":34},{"ruleId":"492","severity":1,"message":"493","line":152,"column":21,"nodeType":"404","endLine":153,"endColumn":60},{"ruleId":"451","severity":1,"message":"452","line":152,"column":21,"nodeType":"404","endLine":153,"endColumn":60},{"ruleId":"409","severity":1,"message":"494","line":29,"column":12,"nodeType":"411","messageId":"412","endLine":29,"endColumn":17},{"ruleId":"417","severity":1,"message":"495","line":35,"column":8,"nodeType":"419","endLine":35,"endColumn":10,"suggestions":"496"},{"ruleId":"456","severity":1,"message":"457","line":105,"column":102,"nodeType":"458","messageId":"459","endLine":105,"endColumn":104},{"ruleId":"445","severity":1,"message":"446","line":107,"column":45,"nodeType":"447","messageId":"448","endLine":139,"endColumn":46},{"ruleId":"409","severity":1,"message":"497","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":19},{"ruleId":"409","severity":1,"message":"498","line":5,"column":8,"nodeType":"411","messageId":"412","endLine":5,"endColumn":19},{"ruleId":"409","severity":1,"message":"499","line":17,"column":5,"nodeType":"411","messageId":"412","endLine":17,"endColumn":11},{"ruleId":"409","severity":1,"message":"500","line":19,"column":5,"nodeType":"411","messageId":"412","endLine":19,"endColumn":15},{"ruleId":"409","severity":1,"message":"501","line":21,"column":5,"nodeType":"411","messageId":"412","endLine":21,"endColumn":14},{"ruleId":"409","severity":1,"message":"502","line":22,"column":5,"nodeType":"411","messageId":"412","endLine":22,"endColumn":9},{"ruleId":"409","severity":1,"message":"503","line":23,"column":5,"nodeType":"411","messageId":"412","endLine":23,"endColumn":10},{"ruleId":"409","severity":1,"message":"504","line":57,"column":12,"nodeType":"411","messageId":"412","endLine":57,"endColumn":18},{"ruleId":"409","severity":1,"message":"505","line":63,"column":12,"nodeType":"411","messageId":"412","endLine":63,"endColumn":19},{"ruleId":"409","severity":1,"message":"506","line":72,"column":12,"nodeType":"411","messageId":"412","endLine":72,"endColumn":24},{"ruleId":"409","severity":1,"message":"507","line":73,"column":12,"nodeType":"411","messageId":"412","endLine":73,"endColumn":21},{"ruleId":"409","severity":1,"message":"508","line":74,"column":12,"nodeType":"411","messageId":"412","endLine":74,"endColumn":21},{"ruleId":"409","severity":1,"message":"509","line":74,"column":23,"nodeType":"411","messageId":"412","endLine":74,"endColumn":35},{"ruleId":"409","severity":1,"message":"510","line":76,"column":12,"nodeType":"411","messageId":"412","endLine":76,"endColumn":25},{"ruleId":"409","severity":1,"message":"455","line":77,"column":12,"nodeType":"411","messageId":"412","endLine":77,"endColumn":23},{"ruleId":"409","severity":1,"message":"511","line":77,"column":25,"nodeType":"411","messageId":"412","endLine":77,"endColumn":39},{"ruleId":"409","severity":1,"message":"512","line":81,"column":19,"nodeType":"411","messageId":"412","endLine":81,"endColumn":27},{"ruleId":"409","severity":1,"message":"487","line":86,"column":17,"nodeType":"411","messageId":"412","endLine":86,"endColumn":22},{"ruleId":"417","severity":1,"message":"513","line":105,"column":8,"nodeType":"419","endLine":105,"endColumn":22,"suggestions":"514"},{"ruleId":"445","severity":1,"message":"446","line":117,"column":21,"nodeType":"447","messageId":"448","endLine":131,"endColumn":22},{"ruleId":"402","severity":1,"message":"403","line":184,"column":29,"nodeType":"404","endLine":186,"endColumn":75},{"ruleId":"427","severity":1,"message":"428","line":279,"column":16,"nodeType":"429","messageId":"430","endLine":279,"endColumn":20},{"ruleId":"427","severity":1,"message":"428","line":283,"column":9,"nodeType":"429","messageId":"430","endLine":283,"endColumn":13},{"ruleId":"409","severity":1,"message":"515","line":26,"column":12,"nodeType":"411","messageId":"412","endLine":26,"endColumn":20},{"ruleId":"409","severity":1,"message":"516","line":33,"column":12,"nodeType":"411","messageId":"412","endLine":33,"endColumn":19},{"ruleId":"409","severity":1,"message":"517","line":34,"column":12,"nodeType":"411","messageId":"412","endLine":34,"endColumn":21},{"ruleId":"409","severity":1,"message":"518","line":35,"column":12,"nodeType":"411","messageId":"412","endLine":35,"endColumn":23},{"ruleId":"417","severity":1,"message":"519","line":47,"column":8,"nodeType":"419","endLine":47,"endColumn":10,"suggestions":"520"},{"ruleId":"427","severity":1,"message":"428","line":70,"column":9,"nodeType":"429","messageId":"430","endLine":70,"endColumn":13},{"ruleId":"427","severity":1,"message":"428","line":74,"column":16,"nodeType":"429","messageId":"430","endLine":74,"endColumn":20},{"ruleId":"445","severity":1,"message":"446","line":94,"column":9,"nodeType":"447","messageId":"448","endLine":182,"endColumn":10},{"ruleId":"409","severity":1,"message":"421","line":4,"column":8,"nodeType":"411","messageId":"412","endLine":4,"endColumn":22},{"ruleId":"409","severity":1,"message":"521","line":5,"column":8,"nodeType":"411","messageId":"412","endLine":5,"endColumn":14},{"ruleId":"409","severity":1,"message":"442","line":21,"column":8,"nodeType":"411","messageId":"412","endLine":21,"endColumn":12},{"ruleId":"409","severity":1,"message":"522","line":22,"column":10,"nodeType":"411","messageId":"412","endLine":22,"endColumn":17},{"ruleId":"409","severity":1,"message":"523","line":23,"column":20,"nodeType":"411","messageId":"412","endLine":23,"endColumn":30},{"ruleId":"409","severity":1,"message":"524","line":23,"column":42,"nodeType":"411","messageId":"412","endLine":23,"endColumn":53},{"ruleId":"409","severity":1,"message":"422","line":29,"column":12,"nodeType":"411","messageId":"412","endLine":29,"endColumn":16},{"ruleId":"409","severity":1,"message":"423","line":29,"column":18,"nodeType":"411","messageId":"412","endLine":29,"endColumn":25},{"ruleId":"409","severity":1,"message":"424","line":30,"column":12,"nodeType":"411","messageId":"412","endLine":30,"endColumn":28},{"ruleId":"409","severity":1,"message":"425","line":30,"column":30,"nodeType":"411","messageId":"412","endLine":30,"endColumn":49},{"ruleId":"409","severity":1,"message":"426","line":32,"column":11,"nodeType":"411","messageId":"412","endLine":32,"endColumn":20},{"ruleId":"427","severity":1,"message":"428","line":46,"column":21,"nodeType":"429","messageId":"430","endLine":46,"endColumn":25},{"ruleId":"409","severity":1,"message":"525","line":56,"column":11,"nodeType":"411","messageId":"412","endLine":56,"endColumn":22},{"ruleId":"449","severity":1,"message":"450","line":152,"column":11,"nodeType":"404","endLine":152,"endColumn":63},{"ruleId":"433","severity":1,"message":"434","line":159,"column":53,"nodeType":"404","messageId":"435","endLine":159,"endColumn":101,"fix":"526"},{"ruleId":"433","severity":1,"message":"434","line":164,"column":53,"nodeType":"404","messageId":"435","endLine":164,"endColumn":154,"fix":"527"},{"ruleId":"409","severity":1,"message":"528","line":2,"column":8,"nodeType":"411","messageId":"412","endLine":2,"endColumn":16},{"ruleId":"409","severity":1,"message":"439","line":3,"column":8,"nodeType":"411","messageId":"412","endLine":3,"endColumn":19},{"ruleId":"409","severity":1,"message":"441","line":13,"column":16,"nodeType":"411","messageId":"412","endLine":13,"endColumn":24},{"ruleId":"409","severity":1,"message":"474","line":14,"column":8,"nodeType":"411","messageId":"412","endLine":14,"endColumn":16},{"ruleId":"409","severity":1,"message":"523","line":17,"column":20,"nodeType":"411","messageId":"412","endLine":17,"endColumn":30},{"ruleId":"449","severity":1,"message":"450","line":30,"column":17,"nodeType":"404","endLine":30,"endColumn":63},{"ruleId":"449","severity":1,"message":"450","line":36,"column":21,"nodeType":"404","endLine":36,"endColumn":69},{"ruleId":"449","severity":1,"message":"450","line":40,"column":21,"nodeType":"404","endLine":40,"endColumn":69},{"ruleId":"449","severity":1,"message":"450","line":44,"column":21,"nodeType":"404","endLine":44,"endColumn":70},{"ruleId":"449","severity":1,"message":"450","line":48,"column":21,"nodeType":"404","endLine":48,"endColumn":69},{"ruleId":"449","severity":1,"message":"450","line":52,"column":21,"nodeType":"404","endLine":52,"endColumn":69},{"ruleId":"449","severity":1,"message":"450","line":57,"column":21,"nodeType":"404","endLine":57,"endColumn":59},{"ruleId":"449","severity":1,"message":"450","line":62,"column":21,"nodeType":"404","endLine":62,"endColumn":69},{"ruleId":"409","severity":1,"message":"440","line":1,"column":26,"nodeType":"411","messageId":"412","endLine":1,"endColumn":35},{"ruleId":"417","severity":1,"message":"529","line":137,"column":8,"nodeType":"419","endLine":137,"endColumn":10,"suggestions":"530"},{"ruleId":"417","severity":1,"message":"531","line":24,"column":8,"nodeType":"419","endLine":24,"endColumn":10,"suggestions":"532"},{"ruleId":"417","severity":1,"message":"533","line":43,"column":8,"nodeType":"419","endLine":43,"endColumn":47,"suggestions":"534"},{"ruleId":"409","severity":1,"message":"441","line":1,"column":16,"nodeType":"411","messageId":"412","endLine":1,"endColumn":24},{"ruleId":"417","severity":1,"message":"535","line":26,"column":8,"nodeType":"419","endLine":26,"endColumn":10,"suggestions":"536"},{"ruleId":"537","severity":1,"message":"538","line":32,"column":17,"nodeType":"539","messageId":"540","endLine":32,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":36,"column":17,"nodeType":"539","messageId":"540","endLine":36,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":40,"column":17,"nodeType":"539","messageId":"540","endLine":40,"endColumn":23},{"ruleId":"431","severity":1,"message":"432","line":68,"column":25,"nodeType":"404","endLine":68,"endColumn":116},{"ruleId":"409","severity":1,"message":"441","line":1,"column":16,"nodeType":"411","messageId":"412","endLine":1,"endColumn":24},{"ruleId":"409","severity":1,"message":"516","line":22,"column":12,"nodeType":"411","messageId":"412","endLine":22,"endColumn":19},{"ruleId":"445","severity":1,"message":"446","line":92,"column":29,"nodeType":"447","messageId":"448","endLine":111,"endColumn":30},{"ruleId":"409","severity":1,"message":"541","line":235,"column":11,"nodeType":"411","messageId":"412","endLine":235,"endColumn":19},{"ruleId":"409","severity":1,"message":"542","line":3,"column":17,"nodeType":"411","messageId":"412","endLine":3,"endColumn":26},{"ruleId":"409","severity":1,"message":"440","line":2,"column":16,"nodeType":"411","messageId":"412","endLine":2,"endColumn":25},{"ruleId":"409","severity":1,"message":"543","line":4,"column":28,"nodeType":"411","messageId":"412","endLine":4,"endColumn":34},{"ruleId":"409","severity":1,"message":"544","line":10,"column":13,"nodeType":"411","messageId":"412","endLine":10,"endColumn":23},{"ruleId":"409","severity":1,"message":"545","line":16,"column":8,"nodeType":"411","messageId":"412","endLine":16,"endColumn":19},"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-native-reassign",["546"],"no-negated-in-lhs",["547"],"no-unused-vars","'CheckConnection' is defined but never used.","Identifier","unusedVar","'logout' is assigned a value but never used.","'signinEmail' is assigned a value but never used.","'cryptoData' is assigned a value but never used.","'setCryptoData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.uid', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["548"],"'EquipoSunshine' is defined but never used.","'team' is assigned a value but never used.","'setTeam' is assigned a value but never used.","'differencesItems' is assigned a value but never used.","'setDifferencesItems' is assigned a value but never used.","'fetchData' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"549","text":"550"},{"range":"551","text":"550"},"'Component' is defined but never used.","'monedafinal' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Roll' is defined but never used.","'Openzepp' is defined but never used.","'setLogged' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'uploadValue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'NavLink' is defined but never used.","'currentUser' is assigned a value but never used.","'React' is defined but never used.","'d' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Watsappicon' is defined but never used.","'$' is defined but never used.","'ReactDOM' is defined but never used.","'Fade' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","'Engrane1' is defined but never used.","'setScale' is assigned a value but never used.","'Gmail' is defined but never used.","'Youtube' is defined but never used.","'moneda' is defined but never used.","'Table' is defined but never used.","'generateAccount' is defined but never used.","'tokenPrivateKey' is assigned a value but never used.","'setTokenPrivateKey' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.uid', 'history', and 'userInfo'. Either include them or remove the dependency array.",["552"],"'facing2' is assigned a value but never used.","'setFacing' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'ready' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["553"],"'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'CardHeader' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'logged' is assigned a value but never used.","'country' is assigned a value but never used.","'countriesAPI' is assigned a value but never used.","'statesAPI' is assigned a value but never used.","'citiesAPI' is assigned a value but never used.","'setCitiesAPI' is assigned a value but never used.","'fileFirestore' is assigned a value but never used.","'setUploadValue' is assigned a value but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.emailVerified', 'currentUser.uid', 'getCountriesAPI', 'getUserData', 'history', and 'logout'. Either include them or remove the dependency array.",["554"],"'mxnToUsd' is assigned a value but never used.","'loading' is assigned a value but never used.","'paymentID' is assigned a value but never used.","'paymentDone' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allData.address', 'allData.city', 'allData.country', 'allData.lastname', 'allData.name', and 'allData.state'. Either include them or remove the dependency array. If 'setName' needs the current value of 'allData.name', you can also switch to useReducer instead of useState and read 'allData.name' in the reducer.",["555"],"'Footer' is defined but never used.","'Divider' is defined but never used.","'showArrows' is defined but never used.","'onClickItem' is defined but never used.","'differences' is assigned a value but never used.",{"range":"556","text":"550"},{"range":"557","text":"550"},"'maparoad' is defined but never used.","React Hook useEffect has missing dependencies: 'getData' and 'uid'. Either include them or remove the dependency array.",["558"],"React Hook useEffect has a missing dependency: 'profilePictureStatus'. Either include it or remove the dependency array. If 'setHideButton' needs the current value of 'profilePictureStatus', you can also switch to useReducer instead of useState and read 'profilePictureStatus' in the reducer.",["559"],"React Hook useCallback has a missing dependency: 'setStates'. Either include it or remove the dependency array. If 'setStates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["560"],"React Hook useEffect has a missing dependency: 'currencyConversor'. Either include it or remove the dependency array. If 'currencyConversor' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["561"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'payments' is assigned a value but never used.","'TextField' is defined but never used.","'Avatar' is defined but never used.","'useStorage' is defined but never used.","'UploadImage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"562","fix":"563"},[10078,10078]," rel=\"noreferrer\"",[10514,10514],{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},[6542,6542],[7000,7000],{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},"Update the dependencies array to be: [currentUser.email, currentUser.uid, history]",{"range":"580","text":"581"},"Update the dependencies array to be: [currentUser.email, currentUser.uid, history, userInfo]",{"range":"582","text":"583"},"Update the dependencies array to be: [id]",{"range":"584","text":"585"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",{"range":"586","text":"587"},"Update the dependencies array to be: [allData.address, allData.city, allData.country, allData.lastname, allData.name, allData.state]",{"range":"588","text":"589"},"Update the dependencies array to be: [getData, uid]",{"range":"590","text":"591"},"Update the dependencies array to be: [profilePictureStatus]",{"range":"592","text":"593"},"Update the dependencies array to be: [imageSrc, croppedAreaPixels, rotation, setStates]",{"range":"594","text":"595"},"Update the dependencies array to be: [currencyConversor]",{"range":"596","text":"597"},[1886,1888],"[currentUser.email, currentUser.uid, history]",[2335,2337],"[currentUser.email, currentUser.uid, history, userInfo]",[1382,1384],"[id]",[3754,3768],"[currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",[2068,2070],"[allData.address, allData.city, allData.country, allData.lastname, allData.name, allData.state]",[5276,5278],"[getData, uid]",[1074,1076],"[profilePictureStatus]",[1656,1695],"[imageSrc, croppedAreaPixels, rotation, setStates]",[632,634],"[currencyConversor]"]