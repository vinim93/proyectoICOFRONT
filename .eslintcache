[{"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\index.js":"1","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\App.js":"2","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\i18n.js":"3","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\Pdf.jsx":"4","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Home.jsx":"5","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\acerca\\Acerca.jsx":"6","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\navbar\\Navigation.jsx":"7","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\proyectos\\Foco.jsx":"8","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\contexts\\AuthContext.jsx":"9","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Recovery.jsx":"10","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\wallet\\Wallet.jsx":"11","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Dashboard.jsx":"12","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\Profile.jsx":"13","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\road_to_map\\Roaptomap.jsx":"14","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Checkout.jsx":"15","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\acerca\\cardsworkers.jsx":"16","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\road_to_map\\carussel.jsx":"17","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\navbar\\mostrarmenu.js":"18","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\firebase.js":"19","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\Loader.jsx":"20","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\ControlPanel.jsx":"21","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Video.jsx":"22","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Countdown.jsx":"23","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Soporte.jsx":"24","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Newsletter.jsx":"25","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Banner.jsx":"26","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\proyectos\\Proyectos.jsx":"27","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\PreguntasFrecuentes.jsx":"28","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\WhitepaperHome.jsx":"29","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Ventajas.jsx":"30","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\MapaApp.jsx":"31","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PasswordRecoveryModal.jsx":"32","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\SignInModal.jsx":"33","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\SignUpModal.jsx":"34","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Review.jsx":"35","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\TokenAmount.jsx":"36","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\PaymentForm.jsx":"37","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\AddressForm.jsx":"38","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\ExpansionComponent.jsx":"39","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\UploadImage.jsx":"40","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\footer\\Footer.jsx":"41","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\cuentaregresiva.js":"42","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\js\\canvasUtils.js":"43","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\CheckConnection.jsx":"44","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PaymentComponent.jsx":"45","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PurchaseHistory.jsx":"46","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\DollarMarktComponent.jsx":"47","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\VerifiedProfile.jsx":"48","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\PersonalData.jsx":"49","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\js\\encrypt.js":"50","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\ParticlesBackground.js":"51","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\Particles-config.js":"52","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\wallet\\HeaderCards.jsx":"53"},{"size":318,"mtime":1621530275119,"results":"54","hashOfConfig":"55"},{"size":2746,"mtime":1622131996755,"results":"56","hashOfConfig":"55"},{"size":1645,"mtime":1615483048459,"results":"57","hashOfConfig":"55"},{"size":2433,"mtime":1622131996776,"results":"58","hashOfConfig":"55"},{"size":1489,"mtime":1621530274596,"results":"59","hashOfConfig":"55"},{"size":11440,"mtime":1621530274585,"results":"60","hashOfConfig":"55"},{"size":8832,"mtime":1622131996767,"results":"61","hashOfConfig":"55"},{"size":496,"mtime":1621530274606,"results":"62","hashOfConfig":"55"},{"size":1464,"mtime":1621530274590,"results":"63","hashOfConfig":"55"},{"size":11202,"mtime":1621530274614,"results":"64","hashOfConfig":"55"},{"size":17383,"mtime":1622131996776,"results":"65","hashOfConfig":"55"},{"size":3982,"mtime":1621530274612,"results":"66","hashOfConfig":"55"},{"size":18346,"mtime":1621530274630,"results":"67","hashOfConfig":"55"},{"size":1742,"mtime":1621530274608,"results":"68","hashOfConfig":"55"},{"size":12577,"mtime":1622131996771,"results":"69","hashOfConfig":"55"},{"size":7552,"mtime":1621530274587,"results":"70","hashOfConfig":"55"},{"size":3098,"mtime":1621530274610,"results":"71","hashOfConfig":"55"},{"size":519,"mtime":1621530274605,"results":"72","hashOfConfig":"55"},{"size":597,"mtime":1614706468740,"results":"73","hashOfConfig":"55"},{"size":447,"mtime":1614359919258,"results":"74","hashOfConfig":"55"},{"size":1707,"mtime":1614113281254,"results":"75","hashOfConfig":"55"},{"size":661,"mtime":1622132028199,"results":"76","hashOfConfig":"55"},{"size":1665,"mtime":1621530274595,"results":"77","hashOfConfig":"55"},{"size":1438,"mtime":1621530274601,"results":"78","hashOfConfig":"55"},{"size":721,"mtime":1621530274598,"results":"79","hashOfConfig":"55"},{"size":2203,"mtime":1621530274594,"results":"80","hashOfConfig":"55"},{"size":10875,"mtime":1621530274607,"results":"81","hashOfConfig":"55"},{"size":2770,"mtime":1621530274600,"results":"82","hashOfConfig":"55"},{"size":809,"mtime":1622131996766,"results":"83","hashOfConfig":"55"},{"size":3005,"mtime":1622131996765,"results":"84","hashOfConfig":"55"},{"size":6921,"mtime":1621530274597,"results":"85","hashOfConfig":"55"},{"size":5783,"mtime":1621530274613,"results":"86","hashOfConfig":"55"},{"size":16099,"mtime":1621530274616,"results":"87","hashOfConfig":"55"},{"size":28208,"mtime":1621530274617,"results":"88","hashOfConfig":"55"},{"size":13565,"mtime":1621530274622,"results":"89","hashOfConfig":"55"},{"size":4310,"mtime":1622131996773,"results":"90","hashOfConfig":"55"},{"size":1586,"mtime":1621530274621,"results":"91","hashOfConfig":"55"},{"size":3229,"mtime":1621530274618,"results":"92","hashOfConfig":"55"},{"size":2329,"mtime":1621530274627,"results":"93","hashOfConfig":"55"},{"size":7912,"mtime":1621530274630,"results":"94","hashOfConfig":"55"},{"size":8217,"mtime":1622131996764,"results":"95","hashOfConfig":"55"},{"size":1745,"mtime":1614722443860,"results":"96","hashOfConfig":"55"},{"size":2388,"mtime":1621530274626,"results":"97","hashOfConfig":"55"},{"size":1680,"mtime":1621530274610,"results":"98","hashOfConfig":"55"},{"size":2301,"mtime":1621530274614,"results":"99","hashOfConfig":"55"},{"size":15231,"mtime":1621530274614,"results":"100","hashOfConfig":"55"},{"size":3775,"mtime":1622131996769,"results":"101","hashOfConfig":"55"},{"size":9797,"mtime":1621530274631,"results":"102","hashOfConfig":"55"},{"size":16050,"mtime":1621530274628,"results":"103","hashOfConfig":"55"},{"size":317,"mtime":1621530274627,"results":"104","hashOfConfig":"55"},{"size":298,"mtime":1621530274598,"results":"105","hashOfConfig":"55"},{"size":2358,"mtime":1621530274590,"results":"106","hashOfConfig":"55"},{"size":3422,"mtime":1621530274693,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1v3rkac",{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":2,"source":"153","usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"110"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\index.js",[],["248","249"],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\App.js",["250"],"import React from \"react\";\n\nimport './App.css';\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport \"bootstrap/dist/css/manuel.js\";\n\nimport Navigation from \"./componentes/navbar/Navigation\";\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n}\n    from \"react-router-dom\";\nimport Acerca from \"./componentes/acerca/Acerca\";\nimport Home from './componentes/home/Home';\nimport Pdf from \"./componentes/whitepaper/Pdf\";\nimport Foco from \"./componentes/proyectos/Foco\";\nimport RoaptoMapa from './componentes/road_to_map/Roaptomap';\nimport Watsappicon from './images/watsapp-icon.png';\nimport Dashboard from \"./componentes/user/Dashboard\";\nimport Profile from \"./componentes/user/profile/Profile\";\nimport Recovery from \"./componentes/user/Recovery\";\nimport {AuthProvider} from \"./componentes/contexts/AuthContext\";\nimport Checkout from \"./componentes/user/checkout/Checkout\";\nimport Wallet from \"./componentes/user/wallet/Wallet\";\nimport \"firebase/auth\";\n\n\nconst App = () => {\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                <AuthProvider>\n                    <Navigation/>\n                    <Switch>\n                        <Route path=\"/Roaptomap\" component={RoaptoMapa}/>\n                        <Route path=\"/Acerca\" component={Acerca}/>\n                        <Route path=\"/Proyectos\" component={Foco}/>\n                        <Route path=\"/Home\" component={Home}/>\n                        <Route path=\"/Pdf\" exact><Pdf/></Route>\n                        <Route path=\"/\" exact component={Dashboard} />\n                        <Route path={\"/Profile\"} exact component={Profile}/>\n                        <Route path={\"/Checkout\"} component={Checkout}/>\n                        <Route path=\"/Recovery/:id\">\n                            <Recovery />\n                        </Route>\n                        <Route path={\"/Wallet\"} component={Wallet}/>\n                    </Switch>\n                </AuthProvider>\n                <div className=\"whats-content\">\n{/*\n                    <a href=\"https://api.whatsapp.com/send?phone=525584465710&text=hola%20%20quiero%20contactarneme%20con%20sunshine\"\n                       className=\"whats-content\" target=\"_blank\">\n                        <img src={Watsappicon} alt=\"\" className=\"whatsapp-img \"/>\n                    </a>\n                    \n                    <a href=\"tel:525584465710\" className=\"whats-content\">\n                        <img src={Telicon} alt=\"\" className=\"tel-img img-fluid\"/>\n                    </a>\n                    */}\n                </div>\n\n            </div>\n        </BrowserRouter>\n\n\n    )\n\n}\n\nexport default App;\n\n\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\i18n.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\Pdf.jsx",["251","252","253","254"],"import React, { useState } from 'react';\nimport '../../App.css';\nimport './Whitepaper.css';\nimport Docpdf from '../../docs/Avance.pdf';\nimport Loader from './Loader';\nimport $ from \"jquery\";\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\nimport { useTranslation } from 'react-i18next';\nimport ControlPanel from './ControlPanel';\nimport { StartValueType } from 'tsparticles/dist/Enums';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\n/*import { defaultLayoutPlugin } from '@react-pdf-viewer/default-layout';\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';*/\n\n\nconst Pdf = () => {\n\n  const { t } = useTranslation();\n\n  const docupdf = [\n    {\n      pdfesp: t(`Whitepaper.Urlesp`),\n      pdfespG:t(`Whitepaper.UrlespG`)\n\n    }\n  ];\n\n\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [scale, setScale] = useState(1.0);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setIsLoading(false);\n\n  }\n\n  return (\n\n    <div className=\"row\" >\n\n      {\n        docupdf.map((value, index) => (\n          <div id={index} className=\"col-12  fondopdf p-3 d-none d-md-block\" >\n\n            < iframe width='800' data-toggle=\"collapse\" data-target=\".navbar-collapse.show\" className=\"google-viewer\" height='600' crossorigin=\"anonymous\"\n              frameborder='0' src={value.pdfespG} ></iframe>\n\n            <Loader isLoading={isLoading} />\n          </div>\n        ))\n      }\n\n      {\n        docupdf.map((value, index) => (\n          <div id={index} className=\"col-12 fondopdf p-3 d-block d-md-none\">\n            <Loader isLoading={isLoading} />\n            <ControlPanel className=\"\"\n              numPages={numPages}\n              pageNumber={pageNumber}\n              setPageNumber={setPageNumber}\n              setScale={setScale} />\n            {console.log(value.pdfesp)}\n            <Document className=\"pdfcontainer \" id={index} \n            \n              file={value.pdfesp}\n              onLoadSuccess={onDocumentLoadSuccess}\n            >\n\n              <Page pageNumber={pageNumber} className=\"   \" scale={scale} />\n\n            </Document>\n          </div>\n        ))\n      }\n    </div>\n\n\n\n  );\n}\n\n\n\nexport default Pdf;\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Home.jsx",["255","256"],"import React, {Suspense, lazy} from 'react';\nimport '../../App.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport monedag from \"../../images/moneda.gif\";\nimport Banner from \"./Banner\";\n\n\n\n/*const Banner =lazy(()=>import ('./Banner'));*/\nconst Video =lazy(()=>import ('./Video'));\nconst Countdown =lazy(()=>import ('./Countdown'));\nconst Proyectos =lazy(()=>import ('../proyectos/Proyectos'));\nconst Soporte =lazy(()=>import ('./Soporte'));\nconst PreguntasFrecuentes  =lazy(()=>import ('./PreguntasFrecuentes'));\nconst Newsletter =lazy(()=>import ('./Newsletter'));\nconst MapaApp =lazy(()=>import ('./MapaApp'));\nconst Ventajas =lazy(()=>import ('./Ventajas'));\nconst WhitepaperHome =lazy(()=>import ('./WhitepaperHome'));\nconst Footer =lazy(()=>import ('../footer/Footer'));\n\n\n\nconst Home = () => {\n\n    return (\n        <div className=\"container-fluid\" className=\"\" >\n            <Banner/>\n<Suspense fallback={\n<div className=\"  container mt-5 text-center   justify-content-center\">\n\n<img className=\"moneda-carga\" align=\"top\"src={monedag}/><p className=\"\">CARGANDO...</p> \n    \n</div>\n}>\n            \n            <Video/>\n            <Countdown/>\n            <WhitepaperHome />\n            <Ventajas />\n            <Proyectos />\n            <MapaApp />\n            <Soporte />\n            <PreguntasFrecuentes />\n            <Newsletter />\n            <Footer/>\n\n            </Suspense>\n        </div>\n    )\n}\n\n\nexport default Home;\n\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\acerca\\Acerca.jsx",["257","258","259","260","261","262","263","264","265","266"],"import React, {useState, useEffect} from \"react\";\nimport '../../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport EquipoSunshine from \"../../images/team.png\";\nimport Footer from '../footer/Footer';\nimport Linkecontact from \"../../images/linkecontact.svg\";\nimport Twitercontact from \"../../images/twitercontact.svg\";\nimport {db} from \"../config/firebase\";\nimport './css/styles.css';\nimport { useTranslation } from 'react-i18next';\nimport ACCESIBILIDAD from '../../images/Accesibilidad-01.png';\nimport PRIVACIDAD from '../../images/provacidad-04.png';\nimport SOLIDEZ from '../../images/solidez-02.png';\nimport TRABAJOEQUIPO from '../../images/trabajo en equipo-03.png';\nimport VIRY from '../../images/team/VIRY.jpg';\nimport JOSS from '../../images/team/JOS.jpg';\nimport CHRIS from '../../images/team/CHRIS.jpg';\nimport MANU from '../../images/team/MANU.jpg';\nimport CRIS from '../../images/team/CRIS.jpg';\nimport Fade from 'react-reveal/Fade';\nimport Zoom from 'react-reveal/Zoom';\nimport Cardsworkers from \"./cardsworkers.jsx\";\n\n\n\nconst Acerca = () => {\n\n    const { t } = useTranslation();\n    const [team, setTeam] = useState([]);\n    const [differencesItems, setDifferencesItems] = useState([]);\n\n    const fetchData = async() => {\n        const collections = ['team', 'differencesItems'];\n        await collections.forEach(element => {\n            db.collection(element)\n                .get()\n                .then(snapshot => {\n                    let tempArray = [];\n                    snapshot\n                        .docs.forEach(item => {\n                            tempArray.push(item.data());\n                        });\n                    //LA SIGUIENTE LINEA ES PARA GUARDAR LOS DATOS EN EL STATE CORRESPONDIENTE SEGUN CADA ELEMENTO DEL ARRAY \"collections\"\n                    // EJ. setTeam(tempArray) , setDifferencesItems(tempArray), etc...\n                    //NOTA: eval NO DEBERIA SER USADO PARA GUARDAR DATOS EN UNA COLECCION, AQUI SE USA PARA MOSTRAR DATOS EN EL LADO DEL CLIENTE SOLAMENTE\n                    eval(`set${element.charAt(0).toUpperCase() + element.slice(1)}`)(tempArray);\n                })\n        });\n    }\n\n    useEffect(() => {\n        //fetchData();\n    }, []);\n\n\n    const differences = [\n        {\n            image: ACCESIBILIDAD,\n            title: t('AboutSection.Differences.Items.0.Title'),\n            description: t('AboutSection.Differences.Items.0.Text')\n        },\n        {\n            image: PRIVACIDAD,\n            title: t('AboutSection.Differences.Items.1.Title'),\n            description: t('AboutSection.Differences.Items.1.Text')\n        },\n        {\n            image: SOLIDEZ,\n            title: t('AboutSection.Differences.Items.2.Title'),\n            description: t('AboutSection.Differences.Items.2.Text')\n        },\n        {\n            image: TRABAJOEQUIPO,\n            title: t('AboutSection.Differences.Items.3.Title'),\n            description: t('AboutSection.Differences.Items.3.Text')\n        }\n    ];\n\n    const team2 = [\n        {\n            image: VIRY,\n            name: t('AboutSection.Team.Items.0.Name'),\n            career: t('AboutSection.Team.Items.0.Career'),\n            description: t('AboutSection.Team.Items.0.Description'),\n            social: {\n                linkedin: \"https://mx.linkedin.com/in/viry-uribe-879b68163/\",\n                twitter: \"https://twitter.com/home?lang=es\"\n            }\n        },\n        {\n            image: JOSS,\n            name: t('AboutSection.Team.Items.1.Name'),\n            career: t('AboutSection.Team.Items.1.Career'),\n            description: t('AboutSection.Team.Items.1.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jocelyn-uribe-maldonado-720a90203/\",\n                twitter: \"https://twitter.com/jocelyn_um\"\n            }\n        },\n        {\n            image: CHRIS,\n            name: t('AboutSection.Team.Items.2.Name'),\n            career: t('AboutSection.Team.Items.2.Career'),\n            description: t('AboutSection.Team.Items.2.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/ahtziri-antonio-pe%C3%B1a-142705179/\",\n                twitter: \"\"\n            }\n        },\n        {\n            image: MANU,\n            name: t('AboutSection.Team.Items.3.Name'),\n            career: t('AboutSection.Team.Items.3.Career'),\n            description: t('AboutSection.Team.Items.3.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/jose-manuel-viniegra-molina-aab9a51a8/\",\n                twitter: \"https://twitter.com/manuel87129931\"\n            }\n        },\n        {\n            image: CRIS,\n            name: t('AboutSection.Team.Items.4.Name'),\n            career: t('AboutSection.Team.Items.4.Career'),\n            description: t('AboutSection.Team.Items.4.Description'),\n            social: {\n                linkedin: \"https://www.linkedin.com/in/cristian-augusto-armenta-garcia/\",\n                twitter: \"https://twitter.com/CRISTIANAUGUS14\"\n            }\n        }\n    ]\n\n    return (\n        <div className=\"\">\n           \n\n\n            <div className=\"container-fluid\">\n            <Fade left cascade>\n                <div className=\"row mt-5 mb-5 pt-5 pb-5 pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5 bg-about2\">\n                    <div className=\"col-12 mt-5  pb-5\">\n                        <h1 className=\"text-center text-preview text-size-banner\">\n                            {t('AboutSection.Title')}\n                        </h1>\n                        <hr/>\n                    </div>\n                    <div className=\"col-12 mb-5\">\n                        <p className=\"text-center mb-5 text-preview pl-md-5 pr-md-5 pl-lg-5 pr-lg-5 pl-xl-5 pr-xl-5\" style={{fontSize: 30}}>\n                            {t('AboutSection.Introduction.0')}\n                        </p>\n                       \n                    </div>\n\n                </div>\n\n                <div className=\"row justify-content-center\">\n               \n                <div  className=\"  col-md-3 cont-card-mision  p-5 \">\n                       \n                        <div className=\" d-flex justify-content-center mt-5    \">\n                            <h3 className=\"title-vision \">   {t('AboutSection.Mision.Title')}</h3>\n                        </div>\n                        <div className=\"col-12 d-flex text-center \">\n                            <h5 className=\"parrafo-vision p-1\"> {t('AboutSection.Mision.description')}</h5>\n                        </div>\n                    </div>\n\n\n                    \n                    <div  className=\"  col-md-3  cont-card-mision p-5 \">\n                       \n                       <div className=\"d-flex  justify-content-center mt-5  \">\n                           <h3 className=\"title-vision \"> {t('AboutSection.Vision.Title')}</h3>\n                       </div>\n                       <div className=\"col-12 d-flex text-center \">\n                           <h5 className=\"parrafo-vision p-1\">{t('AboutSection.Vision.description')}\n\n</h5>\n                       </div>\n                   </div>\n                    </div>\n                </Fade>\n\n                <div className=\"  row  pb-5  justify-content-center\">\n                    <div className=\"col-12  pt-4 pb-4\">\n                        <h1 className=\"text-size-title-differences text-center\"> <Fade left cascade>{t('AboutSection.Differences.Title')}</Fade></h1>\n                    </div>\n                    {\n                        differences.map((value, index) => (\n                            <Zoom>\n                            <div id={index} \n                            className=\" col-12 col-sm-12 row col-lg-4 col-xl-4 cont-diferencia    \">\n                                <img src={value.image} alt=\"\" className=\"icons-differences \"/>\n                                <h3 className=\"text-center\">{value.title}</h3>\n                                <p  className=\"text-center\">{value.description}</p>\n                            </div>\n                            </Zoom>\n                        ))\n                    }\n \n                          \n                   \n                </div>\n          \n                \n            <Cardsworkers/>\n            \n            <div className=\"container-fluid pb-5 d-block d-md-none\">\n            \n                <div className=\"container \">\n                    <div className=\"row pb-5\">\n                        {\n                            team2.map((value, index) => (\n                                <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4\">\n                                    <div className=\"card text-light text-center mt-5 mb-5 bg-cards\">\n\n                                        <div className=\"card-img-top mt-5\"> \n                                            <img className=\"rounded-circle img-fluid teams-images w-50\" src={value.image} alt=\"Card image cap\"/>\n                                        </div>\n\n                                        <div className=\"card-body mt-3 d-block\">\n                                            <h3 className=\"card-title mb-3\">{value.name}</h3>\n                                            <h6 className=\"card-subtitle mb-4\">{value.career}</h6>\n                                            <div style={{height: 120}}>\n                                                <p className=\"card-text mb-4\">{value.description}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"card-body border-top\">\n                                            <div className=\"row\">\n                                                <div className=\"col-6\">\n                                                    <a href={value.social.linkedin} target=\"_blank\">\n                                                        <img src={Linkecontact} alt=\"face\"/>\n                                                    </a>\n                                                </div>\n                                                <div className=\"col-6\">\n                                                    <a href={value.social.twitter || \"#\"} className={value.social.twitter || \"disabled\"} target=\"_blank\">\n                                                        <img src={Twitercontact} alt=\"face\"/>\n                                                    </a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <button className=\"btn bg-cards text-light btn-lg btn-block\" data-toggle=\"modal\"\n                                    data-target=\"#staticBackdropcon\">{t('AboutSection.ButtonText')}</button>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n              \n            </div>\n            \n            <div className=\"container-fluid\">\n                <Footer/>\n            </div>\n\n\n                                   \n        </div>\n\n\n    )\n}\n\n\nexport default Acerca;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\navbar\\Navigation.jsx",["267","268","269","270","271","272","273","274","275"],"import '../../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport logonav from '../../icons/logonav.svg';\nimport React, {useState, useEffect} from 'react';\nimport \"firebase/auth\";\nimport {NavLink, useHistory} from 'react-router-dom';\nimport 'firebase/firestore';\nimport SignUpModal from \"../user/SignUpModal\";\nimport SignInModal from \"../user/SignInModal\";\nimport './mostrarmenu';\nimport {useTranslation} from 'react-i18next';\nimport i18next from 'i18next';\nimport USAFLAG from \"../../images/usa_flag_icon.svg\";\nimport MEXICOFLAG from \"../../images/mexico_flag_icon.svg\";\nimport {useAuth} from \"../contexts/AuthContext\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PasswordRecoveryModal from \"../user/PasswordRecoveryModal\";\n\nconst Navigation = () => {\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {currentUser, logout} = useAuth();\n    const [logged, setLogged] = useState(currentUser ? true : false);\n\n    function handleClick(lang) {\n        i18next.changeLanguage(lang)\n    }\n\n    async function handleLogout() {\n        try {\n            await logout();\n            window.location.reload();\n            history.push(\"/Home\");\n        } catch {\n        }\n    }\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick2 = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (e) => {\n        setAnchorEl(null);\n        console.log(e);\n        switch (e) {\n            case \"profile\":\n                history.push(\"./Profile\");\n                break;\n            case \"logout\":\n                handleLogout();\n                break;\n            case \"settings\":\n                break;\n        }\n    };\n\n    const renderNavbar = () => {\n        if (logged) {\n\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top bg-light\" id=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img className=\"  \" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\"\n                                data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\">\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <h5>SUNSHINE</h5>\n                                </li>\n\n                            </ul>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <div>\n                                <Button aria-controls=\"simple-menu\" variant=\"contained\" color=\"primary\"\n                                        aria-haspopup=\"true\" onClick={handleClick2}>\n                                    {currentUser ? currentUser.email : \"Invitado\"} <ExpandMoreIcon/>\n                                </Button>\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={handleClose}\n                                >\n                                    <MenuItem id=\"profile\" onClick={e => handleClose(e.target.id)}>Perfil</MenuItem>\n                                    <MenuItem id=\"settings\" onClick={e => handleClose(e.target.id)}>Ajustes</MenuItem>\n                                    <MenuItem id=\"logout\" onClick={e => handleClose(e.target.id)}>Cerrar\n                                        sesión</MenuItem>\n                                </Menu>\n                            </div>\n\n                        </div>\n                    </div>\n                </nav>\n            )\n\n        } else {\n            return (\n                <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\" id=\"navbar\">\n                    <div className=\"container-fluid\">\n                        <NavLink className=\"navbar-brand navegacion  \" to=\"/\">\n                            <img className=\"  \" src={logonav}/>\n                        </NavLink>\n                        <button className=\"navbar-toggler mr-auto\" id=\"boton-nav\" type=\"button\" data-toggle=\"collapse\"\n                                data-target=\"#navbar-menu\"\n                                aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\" collapse navbar-collapse\" id=\"navbar-menu\">\n                            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                                <li className=\"nav-item\">\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./Acerca\">{t('Navbar.Acerca')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" tap-index=\"-1\"\n                                             activeClassName=\"active\" area-disabled=\"true\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./Roaptomap\">{t('Navbar.RoadToMap')}\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item \">\n\n                                    <NavLink className=\"navbar-brand nav-link navegacion\" activeClassName=\"active\"\n                                             area-disabled=\"true\" data-toggle=\"collapse\"\n                                             data-target=\".navbar-collapse.show\"\n                                             to=\"./Proyectos\">{t('Navbar.Proyectos')}\n                                    </NavLink>\n                                </li>\n                            </ul>\n\n                            <button disabled type=\"button\" className=\"navsesion btn btn-link\"\n                            >{t('Navbar.SignIn')}\n                            </button>\n\n                            <button disabled type=\"button\" className=\"navsesion btn btn-link\"\n                            >\n                                {t('Navbar.SignUp')}\n                            </button>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('en')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={USAFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                            <a href=\"#\" className=\"btn btn-link\" onClick={() => handleClick('es')}\n                               data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                                <img src={MEXICOFLAG} className=\"img-fluid\" style={{width: 50}} alt=\"\"/>\n                            </a>\n\n                        </div>\n                        <SignUpModal/>\n                        <SignInModal/>\n                        <PasswordRecoveryModal/>\n                    </div>\n                </nav>\n            )\n        }\n    }\n\n    return (\n\n        <>\n            {renderNavbar()}\n        </>\n    )\n}\nexport default Navigation;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\proyectos\\Foco.jsx",["276","277","278","279"],"import '../../App.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component, useEffect, useState} from 'react';\nimport Footer from '../footer/Footer';\nimport Proyectos from \"./Proyectos\";\nimport Roll from 'react-reveal/Roll';\n\n\n\nconst Foco = () => {\n    return (\n        \n        <div className=\"mt-5\">\n           \n            <Proyectos />\n           \n            <Footer/>\n        </div>\n       \n    )\n}\n\nexport default Foco\n    ","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\contexts\\AuthContext.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Recovery.jsx",["280","281","282","283"],"import React, {useEffect, useState} from 'react';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Card from \"@material-ui/core/Card\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Input from '@material-ui/core/Input';\nimport passwordValidator from \"password-validator\";\nimport swal2 from \"@sweetalert/with-react\";\nimport swal from \"sweetalert\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport axios from \"axios\";\n\n\nconst Recovery = () => {\n    const classes = useStyles();\n    const [values, setValues] = useState({\n        showPassword1: false,\n        showPassword2: false\n    });\n    const [password, setPassword] = useState(\"\");\n    const [password2, setPassword2] = useState(\"\");\n    const [ready, setReady] = useState(false);\n    const history = useHistory();\n    const {id} = useParams();\n\n    useEffect(() => {\n        verifyToken(id);\n    }, []);\n\n    const verifyToken = async token => {\n        axios.get(\"https://sunshine-ico.uc.r.appspot.com/reset\", {\n            params: {\n                resetPasswordToken: token\n            },\n        }).then(response => {\n            if(response.data.message === \"token-ok\"){\n                console.log(response.data.uid);\n                setReady(true);\n            } else {\n                console.log(\"No hay nada que mostrar\");\n                setReady(false);\n            }\n        }).catch(e => {\n            console.log(e.data);\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (password !== \"\" && password2 !== \"\") {\n            let schema = new passwordValidator();\n            schema\n                .is().min(8)\n                .is().max(100)\n                .has().uppercase()\n                .has().lowercase()\n                .has().digits(1)\n                .has().not().spaces();\n\n            if (schema.validate(password)) {\n                console.log(\"FORMATO VALIDO\");\n                if(password === password2){\n                    swal({\n                        title: \"Contraseña cambiada!\",\n                        text: \"Inicia sesión en tu cuenta con tu nueva contraseña\",\n                        icon: \"success\",\n                        button: \"Iniciar sesión!\",\n                        closeOnClickOutside: false\n                    }).then(confirm => {\n                        if(confirm){\n                            //CAMBIAR PASS EN FIRESTORE\n                            //ENVIAR AL LOGIN\n                            history.push(\"/Home\");\n                            document.getElementById(\"signInButton\").click();\n                        }\n                    });\n                } else {\n                    swal({\n                        title: \"Las contraseñas no coinciden\",\n                        text: \"Asegurate de escribir las mismas contraseñas en los campos correspondientes!\",\n                        icon: \"warning\",\n                        button: \"Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n            } else {\n                swal2({\n                    text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                    closeOnClickOutside: false,\n                    buttons: {\n                        cancel: \"Entendido\",\n                    },\n                    content: (\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <ul>\n                                    {\n                                        schema.validate(password, {list: true}).map((element, index) => {\n                                            console.log(element);\n                                            switch(element) {\n                                                case 'min':\n\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                    )\n\n                                                case 'max':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                    )\n\n                                                case 'uppercase':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo una letra mayuscula</p></li>\n                                                    )\n\n                                                case 'lowercase':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo 1 letra minuscula</p></li>\n                                                    )\n\n                                                case 'spaces':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">No debe contener espacios</p></li>\n                                                    )\n\n                                                case 'digits':\n                                                    return(\n                                                        <li key={index} className=\"text-dark text-justify\"><p className=\"text-danger\">Mínimo 1 número</p></li>\n                                                    )\n\n                                            }\n\n                                        })\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        } else {\n            //LLENA TODOS LOS CAMPOS\n        }\n    }\n\n    const handleClickShowPassword = (id) => {\n        if (id === 1) {\n            setValues({...values, showPassword1: !values.showPassword1});\n        } else if (id === 2) {\n            setValues({...values, showPassword2: !values.showPassword2});\n        }\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n\n        <div className=\"container\">\n            <Card className={classes.root}>\n\n                <CardContent>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"row\">\n\n                            <div className=\"col-12\">\n                                <h3>Cambia tu contraseña</h3>\n                            </div>\n\n\n                            <div className=\"col-12 mt-5 mb-4\">\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Contraseña nueva</InputLabel>\n                                    <Input\n                                        required\n                                        id=\"standard-adornment-password\"\n                                        type={values.showPassword1 ? 'text' : 'password'}\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={() => handleClickShowPassword(1)}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {values.showPassword1 ? <Visibility/> : <VisibilityOff/>}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className=\"col-12 mb-5\">\n                                <FormControl>\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Repite tu contraseña</InputLabel>\n                                    <Input\n                                        required\n                                        id=\"standard-adornment-password\"\n                                        type={values.showPassword2 ? 'text' : 'password'}\n                                        value={password2}\n                                        onChange={e => setPassword2(e.target.value)}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={() => handleClickShowPassword(2)}\n                                                    onMouseDown={handleMouseDownPassword}\n                                                >\n                                                    {values.showPassword2 ? <Visibility/> : <VisibilityOff/>}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </FormControl>\n                            </div>\n\n                            <div className=\"col-12\">\n                                <Button variant=\"contained\" type=\"submit\" size=\"large\" color=\"primary\">\n                                    Enviar\n                                </Button>\n                            </div>\n\n                        </div>\n                    </form>\n\n                </CardContent>\n                <CardActions>\n                </CardActions>\n            </Card>\n        </div>\n\n    );\n};\n\nexport default Recovery;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 150\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        width: '25ch',\n    },\n}));","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\wallet\\Wallet.jsx",["284","285","286","287","288","289","290","291","292","293","294"],"import React, {useEffect, useState} from \"react\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Table,\n    Container,\n    Row,\n    Col,\n} from \"reactstrap\";\n\nimport {useAuth} from \"../../contexts/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\n//OWN IMPORTATIONS\nimport \"./../css/nucleo.css\";\nimport \"./../scss/argon-dashboard-react.scss\";\nimport \"./../checkout/css/style.css\";\nimport HeaderCards from \"./HeaderCards\";\n\n//MATERIAL IMPORTS\nimport TextField from '@material-ui/core/TextField';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\n\n//QR UTILITIES IMPORTATIONS\nimport QRCode from \"react-qr-code\";\nimport QrReader from 'react-qr-reader'\nimport {db} from \"../../config/firebase\";\n\nimport {generateAccount} from \"tron-create-address\";\nimport axios from \"axios\";\n\n\nconst Wallet = () => {\n\n    const {currentUser, logout} = useAuth();\n    const history = useHistory();\n\n    const [scannerOpen, setScannerOpen] = useState(false);\n    const [scanValue, setScanValue] = useState(\"\");\n    const [logged, setLogged] = useState(false);\n    const [uid, setUid] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const [userInfo, setUserInfo] = useState({});\n    const [tokensToSend, setTokensToSend] = useState(0);\n    //ESTO TIENE QUE IR EN EL BACKEND, AHORITA ES PARA HACER PRUEBAS RÁPIDO\n    const [tokenAddress, setTokenAddress] = useState(\"\");\n    const [tokenPrivateKey, setTokenPrivateKey] = useState(\"\");\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            let id = currentUser.uid;\n            setUid(id);\n            getUserData(id);\n            console.log(userInfo);\n            console.log(\"HOLA\");\n            console.log(\"ADIOS\");\n            setLogged(true);\n            getData(id);\n        } catch (e) {\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    }, []);\n\n    const getUserData = async(id) => {\n        try{\n            let docRef = db.collection('credentials').doc(id);\n            await docRef.onSnapshot(doc => {\n                if(doc.exists){\n                    setUserInfo(doc.data());\n                    setAmount(doc.data().suns);\n                }\n            })\n        } catch (e) {\n            console.log(\"Wallet.jsx - getUserData()\" + e);\n        }\n    }\n\n    const getData = async (id) => {\n        await axios.get(\"https://sunshine-ico.uc.r.appspot.com/tron-data\", {\n            params: {\n                uid: id\n            }\n        }).then(response => {\n            console.log(\"LISTO\", response.data.tokenAddress);\n            setTokenAddress(response.data.tokenAddress);\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n\n    const sendTokens = async e => {\n        e.preventDefault();\n        try{\n            const response = await axios.post(\"https://sunshine-ico.uc.r.appspot.com/send-tokens\", {\n                uid,\n                amount: tokensToSend,\n                toAddress: scanValue\n            });\n            console.log(response);\n        } catch (e) {\n            console.log(e);\n        }\n        //CONECTARSE CON /send-tokens EN BACKEND Y MANDAR uid, amount, toAddress\n    }\n\n    const ReadQR = ({setScanValue}) => {\n\n        const [value, setValue] = useState(\"\");\n        const [facing2, setFacing]=useState(\"near\");\n\n        const handleError = (e) => {\n            console.log(e);\n        }\n\n        if(value){\n            setScanValue(value);\n            document.getElementById(\"closeScanner\").click();\n            return null;\n        } else {\n\n            return (\n                    <QrReader\n                        delay={1000}\n                        style={{width: 350}}\n                        onError={handleError}\n                        onScan={data => {\n                            console.log(data);\n                            if(data){\n                                setValue(data)\n                            }\n                        }}\n                        facingMode=\"environment\"\n                    />\n            )\n        }\n    }\n\n    const renderWallet = () => {\n        if(logged){\n            return(\n                <div className=\"mt-5 mt-md-0 bodyWallet\">\n                    <a href=\"#\" type=\"button\" id=\"openScanner\" data-toggle=\"modal\"\n                       data-target=\"#exampleModalCenter\" />\n\n                    <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\"\n                         aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\" data-backdrop=\"static\"\n                         data-keyboard=\"false\">\n                        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                    <button type=\"button\" onClick={() => {setScannerOpen(false)}} id=\"closeScanner\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span className=\"text-dark\" aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div className=\"qr-modal-body d-flex justify-content-center\">\n                                    {scannerOpen ? <ReadQR setScanValue={setScanValue} /> : null}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <HeaderCards tokensNumber={amount}/>\n                    {/* Page content */}\n                    <Container className=\"mt--7\" fluid>\n                        <Row className=\"d-flex justify-content-center\">\n                            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n\n                                <Card className=\"bg-gradient-default shadow\">\n                                    <CardHeader className=\"bg-transparent\">\n                                        <Row className=\"align-items-center\">\n                                            <div className=\"col-12\">\n                                                <p className=\"text-uppercase text-light mb-0\">\n                                                    Spot wallet\n                                                </p>\n                                                <h6 className=\"text-white mb-3\">SUN</h6>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <div className=\"nav-wrapper\">\n                                                    <ul className=\"nav nav-pills nav-fill flex-column flex-md-row\"\n                                                        id=\"tabs-icons-text\" role=\"tablist\">\n                                                        <li className=\"nav-item\">\n                                                            <a className=\"nav-link mb-sm-3 mb-md-0 active\"\n                                                               id=\"tabs-icons-text-1-tab\" data-toggle=\"tab\"\n                                                               href=\"#tabs-icons-text-1\" role=\"tab\"\n                                                               aria-controls=\"tabs-icons-text-1\"\n                                                               aria-selected=\"true\">Recibir</a>\n                                                        </li>\n                                                        <li className=\"nav-item\">\n                                                            <a className=\"nav-link mb-sm-3 mb-md-0\" id=\"tabs-icons-text-2-tab\"\n                                                               data-toggle=\"tab\" href=\"#tabs-icons-text-2\" role=\"tab\"\n                                                               aria-controls=\"tabs-icons-text-2\"\n                                                               aria-selected=\"false\">Enviar</a>\n                                                        </li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </Row>\n                                    </CardHeader>\n                                    <CardBody>\n                                        <div className=\"card-body\">\n                                            <div className=\"tab-content\" id=\"myTabContent\">\n                                                <div className=\"tab-pane fade show active\" id=\"tabs-icons-text-1\"\n                                                     role=\"tabpanel\" aria-labelledby=\"tabs-icons-text-1-tab\">\n                                                    <div className=\"col-12 d-flex justify-content-center\">\n                                                        <div style={{borderColor: \"white\", border: \"solid\", backgroundColor: \"white\", width: \"min-content\"}}>\n                                                            <QRCode value={tokenAddress} />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-12 mt-5\">\n                                                        <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                                                            Wallet address\n                                                        </h6>\n                                                        <p className=\"text-light\">{tokenAddress}</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"tab-pane fade\" id=\"tabs-icons-text-2\" role=\"tabpanel\"\n                                                     aria-labelledby=\"tabs-icons-text-2-tab\">\n                                                    <form onSubmit={sendTokens}>\n\n                                                        <div className=\"container px-md-5\">\n                                                            <div className=\"row px-md-5\">\n\n\n                                                                <div className=\"col-12 mb-4 px-md-5\">\n                                                                    <FormControl fullWidth style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\", borderRadius: 4}} variant=\"filled\">\n                                                                        <InputLabel htmlFor=\"filled-adornment-password\">Dirección de destino</InputLabel>\n                                                                        <FilledInput\n                                                                            id=\"filled-adornment-password\"\n                                                                            required\n                                                                            type={'text'}\n                                                                            value={scanValue}\n                                                                            onChange={e => setScanValue(e.target.value)}\n                                                                            endAdornment={\n                                                                                <InputAdornment position=\"end\">\n                                                                                    <IconButton\n                                                                                        aria-label=\"toggle password visibility\"\n                                                                                        onClick={() => {\n                                                                                            setScannerOpen(true);\n                                                                                            document.getElementById(\"openScanner\").click();\n                                                                                        }}\n                                                                                        edge=\"end\"\n                                                                                    >\n                                                                                        <CropFreeIcon />\n                                                                                    </IconButton>\n                                                                                </InputAdornment>\n                                                                            }\n                                                                        />\n                                                                    </FormControl>\n                                                                </div>\n\n\n                                                                <div className=\"col-12 mb-4 px-md-5\">\n\n                                                                    <TextField\n                                                                        fullWidth\n                                                                        required\n                                                                        id=\"filled-basic\"\n                                                                        label=\"Cantidad (SUN):\"\n                                                                        value={tokensToSend}\n                                                                        onChange={e => {\n                                                                            if(tokensToSend === 0){\n                                                                                setTokensToSend(null);\n                                                                            }\n                                                                            setTokensToSend(e.target.value);\n                                                                        }}\n                                                                        variant=\"filled\"\n                                                                        style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\", borderRadius: 4}}\n                                                                    />\n\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row mt-2 px-md-5\">\n\n                                                                <div className=\"col-12 px-md-5 d-flex justify-content-start\">\n                                                                    <p className=\"text-light\">SUNS a enviar: <strong>{tokensToSend}</strong></p>\n                                                                </div>\n\n                                                                <div className=\"col-12 px-md-5 d-flex justify-content-start\">\n                                                                    <p className=\"text-light\">SUNS restantes: <strong>{(amount - tokensToSend) || 0}</strong></p>\n                                                                </div>\n\n                                                                <div className=\"col-12 px-md-5\">\n                                                                    <Divider light style={{backgroundColor: \"#FFFFFF\"}} />\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row mt-5 px-md-5\">\n                                                                <div className=\"col-12 px-md-5\">\n                                                                    <Button disabled fullWidth variant=\"contained\" size=\"large\" type=\"submit\" color=\"primary\">\n                                                                        ENVIAR\n                                                                    </Button>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n\n    return (\n        <>\n            {renderWallet()}\n        </>\n    );\n};\n\nexport default Wallet;\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\Dashboard.jsx",["295","296","297","298","299","300"],"import React, {useState, useEffect} from 'react';\nimport {useAuth} from \"../contexts/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\nimport moneda_dashboard from \"../../images/moneda-dashboard.svg\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DollarMarktComponent from \"./DollarMarktComponent\";\nimport PaymentComponent from \"./PaymentComponent\";\nimport {db} from \"../config/firebase\";\nimport PurchaseHistory from \"./PurchaseHistory\";\nimport CheckConnection from \"./CheckConnection\";\nimport NumberFormat from \"react-number-format\";\n\nconst Dashboard = () => {\n    const {currentUser, logout} = useAuth();\n    const [signinEmail, setSigninEmail] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const [logged, setLogged] = useState(false);\n    const [cryptoData, setCryptoData] = useState([{}]);\n    const [userInfo, setUserInfo] = useState({});\n    const history = useHistory();\n\n    const getUserData = async(id) => {\n        try{\n            let docRef = db.collection('credentials').doc(id);\n            await docRef.onSnapshot(doc => {\n                if(doc.exists){\n                    setUserInfo(doc.data());\n                    setAmount(doc.data().suns);\n                }\n            })\n        } catch (e) {\n            console.log(\"Dashboard.jsx - getUserData()\" + e);\n        }\n    }\n\n    useEffect(() => {\n        try{\n            let email = currentUser.email;\n            let id = currentUser.uid;\n            setSigninEmail(email);\n            setUid(id);\n            setLogged(true);\n            history.push(\"/\");\n            getUserData(id);\n        } catch (e) {\n            console.log(\"ACASO SERE YO SEÑOR?\");\n            setSigninEmail(\"\");\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    },[]);\n\n    const renderData = () => {\n        if(logged && Object.keys(userInfo).length !== 0){\n            return (\n                <div className=\"container-fluid\">\n                    <div className=\"row mt-5\">\n\n                        <div className=\"col-12 mt-5 d-flex justify-content-center\">\n                            <img src={moneda_dashboard} className=\"img-fluid\" style={{width: 400}} alt=\"MONEDA-SUNSHINE\"/>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center\">\n                            <h1>\n                                <NumberFormat\n                                    type=\"text\"\n                                    displayType=\"text\"\n                                    value={amount}\n                                    thousandSeparator={true}\n                                />\n                                <br/>SUNIS</h1>\n                        </div>\n\n                        <div className=\"col-12 d-flex justify-content-center mt-5\">\n                            <button className=\"material\" data-toggle=\"modal\" data-target=\"#exampleModal\">Mercado de criptos<ExpandMoreIcon style={{ fontSize: 40 }} /> </button>\n                        </div>\n\n                        <div className=\"col-12\">\n                            <button className=\"btn material2 ml-3 mr-3\" data-toggle=\"modal\" data-target=\"#paymentModal\" data-backdrop='static' data-keyboard='false'>Comprar</button>\n                            <a className=\"btn material2 ml-3 mr-3\" href=\"Wallet\">Wallet</a>\n                        </div>\n\n                        <DollarMarktComponent />\n                        <PaymentComponent email={currentUser.email} userData={uid} allData={userInfo} />\n\n                    </div>\n\n                    <div className=\"row mt-5\">\n                        <PurchaseHistory uid={uid} />\n                    </div>\n\n                </div>\n\n            )\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <div className=\"container-fluid fondo-dashboard\">\n            {renderData()}\n        </div>\n    )\n\n};\n\nexport default Dashboard;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\Profile.jsx",["301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import 'date-fns';\nimport React, {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport {useAuth} from \"../../contexts/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport {db, useStorage} from \"../../config/firebase\";\nimport axios from \"axios\";\nimport Alert from '@material-ui/lab/Alert';\nimport 'react-phone-input-2/lib/material.css'\nimport {Document, Page} from 'react-pdf';\nimport ExpansionComponent from \"./ExpansionComponent\";\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col,\n} from \"reactstrap\";\nimport UploadImage from \"./UploadImage\";\nimport AVATAR from '../../../images/avatardefault.png';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nconst UserHeader = () => {\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"200px\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\",\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\" />\n                {/* Header container */}\n            </div>\n        </>\n    );\n};\n\n\nconst Profile = () => {\n\n    const classes = useStyles();\n    const {currentUser, logout} = useAuth();\n    const [logged, setLogged] = useState(false);\n    const history = useHistory();\n    const [uid, setUid] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [birthday, setBirthday] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    const [countryCompleteName, setCountryCompleteName] = useState(\"\");\n    const [stateLocation, setStateLocation] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [profileStatus, setProfileStatus] = useState(0);\n    const [doc, setDoc] = useState(\"\");\n    const [jalaPorfavor, setAuthToken] = useState(\"\");\n    const [countriesAPI, setCountriesAPI] = useState([]);\n    const [statesAPI, setStatesAPI] = useState([]);\n    const [citiesAPI, setCitiesAPI] = useState([]);\n    const [filePreview, setFilePreview] = useState([]);\n    const [fileFirestore, setFileFirestore] = useState(null);\n    const [uploadValue, setUploadValue] = useState(0);\n    const [fileObject, setFileObject] = useState(\"\");\n    const [profilePictureStatus, setProfilePictureStatus] = useState(0);\n    const [croppedImage, setCroppedImage] = useState(null);\n    const [image, setImage] = useState(\"\");\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        try {\n            let email = currentUser.email;\n            let id = currentUser.uid;\n            if (!currentUser.emailVerified) {\n                setLogged(false);\n                logout();\n                history.push(\"/Home\");\n            } else {\n                setLogged(true);\n                history.push(\"/Profile\");\n                getUserData(id);\n                setUid(id);\n                getAuthTokenCountries().then(() => {\n                    getCountriesAPI();\n                });\n            }\n        } catch (e) {\n            history.push(\"/Home\");\n            setLogged(false);\n        }\n    }, [jalaPorfavor]);\n\n    const setFile = (e) => {\n        try {\n            const jpegImage = \"image/jpeg\";\n            const pngImage = \"image/png\";\n            const pdfDocument = \"application/pdf\";\n            const acceptedFiles = [jpegImage, pngImage, pdfDocument];\n            const maxSize = 5242880;\n\n            if (acceptedFiles.includes(e.type)) {\n                if (e.size <= maxSize) {\n                    switch (e.type) {\n                        case jpegImage:\n                        case pngImage:\n                            setFilePreview([URL.createObjectURL(e), \"image\"]);\n                            setFileObject(\"image\");\n                            console.log(e);\n                            setFileFirestore(e);\n                            break;\n\n                        case pdfDocument:\n                            setFilePreview([URL.createObjectURL(e), \"pdf\"]);\n                            setFileObject(\"pdf\");\n                            setFileFirestore(e);\n                            break;\n                    }\n                } else {\n                    swal(\"Archivo muy pesado\", \"Tu archivo excede el peso permitido, maximo 5 MB\", \"error\");\n                }\n\n            } else {\n                swal(\"Archivo no válido\", \"Solo puedes subir un formato imagen o pdf\", \"error\");\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const showFile = () => {\n\n        if ((profileStatus === 1 || profileStatus === 2 || profileStatus === 5 || profileStatus === 7)) {\n            if (filePreview[1] === \"image\") {\n                return (\n                    <div className=\"row d-flex justify-content-center\">\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\n                            <img src={filePreview[0]} className=\"img-fluid\" alt=\"\"/>\n                        </div>\n                    </div>\n\n                )\n            } else if (filePreview[1] === \"pdf\") {\n                return (\n                    <div className=\"row d-flex justify-content-center\">\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\n                            <Document file={filePreview[0]}>\n                                <Page pageNumber={1}/>\n                            </Document>\n                        </div>\n                    </div>\n\n                )\n            } else {\n                return null;\n            }\n        } else {\n            if (fileObject === \"image\") {\n                return (\n                    <div className=\"row d-flex justify-content-center\">\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\n                            <img src={doc} className=\"img-fluid\" alt=\"\"/>\n                        </div>\n                    </div>\n\n                )\n            } else if (fileObject === \"pdf\") {\n                return (\n                    <div className=\"row d-flex justify-content-center\">\n                        <div className=\"col-12 col-sm-12 col-xl-6 w-25 h-25\">\n                            <iframe\n                                src={doc}\n                                frameBorder=\"0\" width=\"100%\" height=\"300\"></iframe>\n                        </div>\n                    </div>\n\n                )\n            } else {\n                return null;\n            }\n\n        }\n\n\n    }\n\n    const getUserData = async (id) => {\n        try {\n            let docRef = db.collection('credentials').doc(id);\n            await docRef.onSnapshot(doc => {\n                if (doc.exists) {\n                    setName(doc.data().name);\n                    setLastname(doc.data().lastname);\n                    setBirthday(timeConverter(doc.data().birthday.seconds));\n                    setCountry(doc.data().country);\n                    setStateLocation(doc.data().state);\n                    setCity(doc.data().city);\n                    setPhone(doc.data().phone);\n                    setAddress(doc.data().address);\n                    setProfileStatus(doc.data().profileStatus);\n                    setDoc(doc.data().doc);\n                    setFileObject(doc.data().fileType);\n                    setProfilePictureStatus(doc.data().profilePictureStatus);\n                    setCroppedImage(doc.data().profilePicture)\n                    getStatesAPI(doc.data().countryComplete);\n                    setCountryCompleteName(doc.data().countryComplete);\n                }\n            });\n\n        } catch (e) {\n            //console.log(\"Profile.jsx - getUserData()\" + e);\n        }\n\n    }\n\n    const getAuthTokenCountries = async () => {\n        try {\n            const response = await axios.get(\"https://www.universal-tutorial.com/api/getaccesstoken\", {\n                headers: {\n                    \"api-token\": \"8X4CFJBt--Ev5K8GkL_R9Z2lNS72XQ9ez_NutQRcq4bannc96Q4-YGjDq4IKqlDSFas\",\n                    \"user-email\": \"taikus.jango@sunshine-imagine.io\"\n                }\n            });\n            await setAuthToken(\"Bearer \" + response.data.auth_token);\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    const getCountriesAPI = async () => {\n        try {\n            const response = await axios.get(\"https://www.universal-tutorial.com/api/countries/\", {\n                headers: {\n                    Authorization: jalaPorfavor\n                }\n            });\n            setCountriesAPI(response.data);\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    const getStatesAPI = async (countryAPI) => {\n        try {\n            const response = await axios.get(`https://www.universal-tutorial.com/api/states/${countryAPI}`, {\n                headers: {\n                    Authorization: jalaPorfavor\n                }\n            });\n            setStatesAPI(response.data);\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    const timeConverter = (UNIX_timestamp) => {\n        let a = new Date(UNIX_timestamp * 1000);\n        let year = a.getFullYear();\n        let month = a.getMonth() + 1;\n        let date = a.getDate().toString().length === 1 ? \"0\" + a.getDate().toString() : a.getDate();\n        let time = month + '/' + date + '/' + year;\n        return new Date(time);\n    }\n\n    const getStates = stateValueRequired => {\n        return eval(stateValueRequired);\n    }\n\n    const setStates = (stateRequired, value) => {\n        eval(stateRequired)(value);\n    }\n\n    const uploadProfilePicture = () => {\n        swal({\n            title: \"¿Estas seguro de subir esa foto?\",\n            text: \"Una vez enviada la foto no se podrá modificar, asegúrate de que cumpla los requisitos antes mencionados\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((willConfirm) => {\n                if (willConfirm) {\n                    setOpen(true);\n                    const storageRef = useStorage.ref(`credentials/profilePictures-${uid}`);\n                    const task = storageRef.put(image);\n                    task.on('state_changed', snapshot => {\n                        let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                        setStates(\"setUploadValue\", percentage);\n                    }, error => {\n                        console.log(error);\n                    }, () => {\n                        storageRef.getDownloadURL().then(url => {\n                            db.collection('credentials').doc(uid).update({\n                                profilePicture: url,\n                                profilePictureStatus: 1\n                            }).then(() => {\n                                setOpen(false);\n                                swal(\"La foto de tu perfil ha sido actualizada con éxito\", \"\", \"success\");\n                            });\n                        })\n                    });\n                }\n            });\n    }\n\n    const getAge = (birthDateString) => {\n        let today = new Date();\n        let birthDate = new Date(birthDateString);\n        let age = today.getFullYear() - birthDate.getFullYear();\n        let m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        return age;\n    }\n\n    return (\n        <div className=\"pb-5 contenedor-profile\">\n            <UserHeader />\n            {/* Page content */}\n            <Container className=\"mt-3 mt--7 mb-5\" fluid>\n                <Row>\n                    <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n                        <Card className=\"card-profile shadow mt-5 mt-lg-0\">\n                            <Row className=\"justify-content-center\">\n                                <Col className=\"order-lg-2\" lg=\"3\">\n                                    <div className=\"card-profile-image\">\n                                        <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                                            <img\n                                                alt=\"...\"\n                                                className=\"rounded-circle\"\n                                                src={croppedImage || AVATAR}\n                                            />\n                                        </a>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <CardBody className=\"pt-5 pt-md-0 mt-5 pb-5\">\n                                <Row>\n                                    <div className=\"col\">\n                                        <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                                            {\n                                                profilePictureStatus === 0 ? (\n                                                    <UploadImage uploadProfilePicture={uploadProfilePicture} getStates={getStates} setStates={setStates}\n                                                                 profilePictureStatus={profilePictureStatus}/>) : null\n                                            }\n                                        </div>\n                                    </div>\n                                    <Backdrop className={classes.backdrop} open={open} >\n                                        <CircularProgress color=\"inherit\" />\n                                    </Backdrop>\n                                </Row>\n                                <div className=\"text-center text-dark mt-3\">\n                                    <h3>\n                                        {name} {lastname}\n                                        <span className=\"font-weight-light\"></span>\n                                    </h3>\n                                    <div className=\"h5 font-weight-400 mt-3\">\n                                        <i className=\"ni location_pin mr-2\" />\n                                        {getAge(birthday) ? `${getAge(birthday)} años` : '00 años'}\n                                    </div>\n                                    <div className=\"h5 font-weight-300\">\n                                        <i className=\"ni location_pin mr-2\" />\n                                        +{phone || '0000000000'}\n                                    </div>\n\n                                    <div className=\"h5 mt-4\">\n                                        <i className=\"ni business_briefcase-24 mr-2\" />\n                                        {city || 'Ciudad'}, {stateLocation || 'Estado'}, {countryCompleteName || 'País'}\n                                    </div>\n                                    <div>\n                                        <i className=\"ni education_hat mr-2\" />\n                                        {address || 'Dirección'}\n                                    </div>\n                                    <hr className=\"my-4\" />\n\n                                    <div className={classes.alert}>\n                                        {profileStatus === 3 ?\n                                            <Alert variant=\"filled\" severity=\"warning\">En espera de verificación — Se están\n                                                validando tus datos</Alert> : null}\n                                        {profileStatus === 4 ?\n                                            <Alert variant=\"filled\" severity=\"success\">Cuenta verificada</Alert> : null}\n                                        {profileStatus === 5 ?\n                                            <Alert variant=\"filled\" severity=\"error\">Cuenta no verificada — Verifica tu identificación oficial únicamente</Alert> : null}\n                                        {profileStatus === 6 ?\n                                            <Alert variant=\"filled\" severity=\"error\">Cuenta no verificada — Verifica tus datos personales únicamente</Alert> : null}\n                                        {profileStatus === 7 ?\n                                            <Alert variant=\"filled\" severity=\"error\">Cuenta no verificada — Verifica todos tus datos</Alert> : null}\n                                    </div>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col className=\"order-xl-1\" xl=\"8\">\n                        <Card className=\"bg-secondary shadow\">\n                            <ExpansionComponent getStates={getStates} setStates={setStates} uid={uid} showFile={showFile} setFile={setFile} profilePictureStatus={profilePictureStatus}/>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        marginTop: 20,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    cardActions: {},\n    large: {\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert: {\n        marginTop: 50,\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nexport default Profile;\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\road_to_map\\Roaptomap.jsx",["324","325"],"import '../../App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, {Component} from \"react\";\nimport Footer from '../footer/Footer';\nimport DemoCarousel from './carussel.jsx';\nimport maparoad from '../../images/road-map.png';\nimport monedafinal from \"../../images/monedafinal.png\";\nimport {useTranslation} from 'react-i18next';\nimport lineascar from \"../../images/lineas.svg\";\n\nconst RoaptoMapa = () => {\n    const {t} = useTranslation();\n\n    return (\n\n        <div className=\" road \">\n            <div className=\"row \">\n            <img  className=\"img-fluid linea-car-1 d-flex d-md-none\"src={lineascar} alt=\"linacarrusel\"/>\n                <p className=\"text-roap-map  \">\n                    <h1 align=\"center\">ROAD MAP</h1>\n                   \n                    <p className=\"text-roap-1 d-none d-md-flex\">{t('RoadToMap.0')}</p>\n                    <p className=\"text-roap-2 d-none d-md-flex\">{t('RoadToMap.1')}</p>\n                    <p className=\"text-roap-3 d-none d-md-flex\">{t('RoadToMap.2')}</p>\n                    <p className=\"text-roap-4 d-none d-md-flex\">{t('RoadToMap.3')}</p>\n                    <p className=\"text-roap-5 d-none d-md-flex\">{t('RoadToMap.4')}</p>\n                    <p className=\"text-roap-6 d-none d-md-flex\">{t('RoadToMap.5')}</p>\n                    <p className=\"text-roap-7 d-none d-md-flex\">{t('RoadToMap.6')}</p>\n                    <p className=\"text-roap-8 d-none d-md-flex\">{t('RoadToMap.7')}</p>\n                    \n                </p>\n                \n                <img src={maparoad} className=\" d-none d-md-flex  maparoad \" alt=\"\"/>\n                 \n            </div>\n           \n<DemoCarousel/>\n            <Footer/>\n        </div>\n\n\n    )\n}\n\n\nexport default RoaptoMapa;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Checkout.jsx",["326","327","328","329","330","331","332","333"],"import React, {useState, useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport './css/style.css';\nimport TokenAmount from \"./TokenAmount\";\nimport DONE from './../../../images/done.png';\nimport swal from \"sweetalert\";\nimport axios from \"axios\";\n\nconst steps = ['Token', 'Método', 'Datos', 'Compra'];\n\nexport default function Checkout({uid, email, allData}) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const [currency, setCurrency] = useState(null);\n    const [usdToMxn, setUsdToMxn] = useState(0);\n    const [mxnToUsd, setMxnToUsd] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [stateLocation, setStateLocation] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [paymentID, setPaymentID] = useState(\"\");\n    const [paymentDone, setPaymentDone] = useState(false);\n    const [currencyType, setCurrencyType] = useState('USD');\n    const [paymentMethod, setPaymentMethod] = useState('');\n    //SI TU EDITOR DE TEXTO TE INDICA QUE DICHOS ESTADOS NO ESTAN SIENDO UTILIZADOS REVISA LAS 2 FUNCIONES DE ABAJO\n\n    useEffect(() => {\n        currencyConversor(\"USD\", \"MXN\");\n        currencyConversor(\"MXN\", \"USD\");\n        setName(allData.name);\n        setLastname(allData.lastname);\n        setAddress(allData.address);\n        setCity(allData.city);\n        setStateLocation(allData.state);\n        setCountry(allData.country);\n    }, []);\n\n    const currencyConversor = async (from, to) => {\n        try {\n            //const result = await axios.get(`https://free.currconv.com/api/v7/convert?q=${from}_${to}&compact=ultra&apiKey=8a57011799b9d69fa40a`);\n            const result = await axios.get(`https://api.coingate.com/v2/rates/merchant/${from}/${to}`);\n            if (from === \"USD\" && to === \"MXN\") {\n                setUsdToMxn(result);\n            } else if (from === \"MXN\" && to === \"USD\") {\n                setMxnToUsd(result);\n            }\n        } catch (e) {\n            console.log(\"NO AGARRA LA API DE INTERCAMBIO DE MONEDA = \", e);\n        }\n    }\n\n    const setStates = (state, value) => {\n        eval(state)(value);\n    }\n\n    const getStates = (state) => {\n        return eval(state);\n    }\n\n    const getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <TokenAmount currency={currency} setCurrency={setCurrency} setStates={setStates}\n                                    getStates={getStates}/>;\n            case 1:\n                return <PaymentForm handleNext={handleNext}/>;\n            case 2:\n                return <AddressForm getStates={getStates}/>;\n            case 3:\n                return <Review getStates={getStates} uid={uid} handleNext={handleNext} email={email}/>;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const handleNext = (payment = false, paymentOption = \"\") => {\n        switch (activeStep) {\n            case 0:\n\n                if (allData.profileStatus === 4) {\n                    if (currencyType === \"USD\") {\n                        if (parseFloat(currency) >= 1) {\n                            if (parseFloat(currency) <= 999999) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad muy grande\", \"El monto no debe ser mayor a $999,999.99\", \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    } else if (currencyType === \"MX\") {\n                        if (parseFloat(currency) >= usdToMxn.toFixed(2)) {\n                            if (parseFloat(currency) <= 999999) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad muy grande\", \"El monto no debe ser mayor a $999,999.99\", \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", `Debes pagar la mínima cantidad de $${usdToMxn.toFixed(2)} MXN`, \"warning\");\n                        }\n                    } else if (currencyType === \"SUN\") {\n                        if (parseFloat(currency) >= 1) {\n                            setActiveStep(activeStep + 1);\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    }\n                } else {\n\n                    if (currencyType === \"USD\") {\n                        if (parseFloat(currency) >= 1) {\n                            if (parseFloat(currency) <= 1000) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad limitada\", \"Tu límite es de $1000 USD, si deseas incrementar tu límite de depósito debes ir a tu perfíl y verificar tu cuenta\", \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    } else if (currencyType === \"MX\") {\n                        console.log(typeof currency);\n                        if (parseFloat(currency) >= usdToMxn.toFixed(2)) {\n                            if (parseFloat(currency) <= usdToMxn.toFixed(2) * 1000) {\n                                setActiveStep(activeStep + 1);\n                            } else {\n                                swal(\"Cantidad limitada\", `Tu límite es de $${usdToMxn.toFixed(2) * 1000} MXN, si deseas incrementar tu límite de depósito debes ir a tu perfíl y verificar tu cuenta`, \"warning\");\n                            }\n                        } else {\n                            swal(\"Monto inválido\", `Debes pagar la mínima cantidad de $${usdToMxn.toFixed(2)} MXN`, \"warning\");\n                        }\n                    } else if (currencyType === \"SUN\") {\n                        if (parseFloat(currency) >= 1) {\n                            setActiveStep(activeStep + 1);\n                        } else {\n                            swal(\"Monto inválido\", \"Debes pagar la mínima cantidad de $1 USD\", \"warning\");\n                        }\n                    }\n\n                }\n\n                break;\n            case 1:\n                if (paymentOption === \"card\") {\n                    setPaymentMethod(paymentOption);\n                    setActiveStep(activeStep + 1);\n                } else if (paymentOption === \"oxxo\") {\n                    if (currencyType === \"USD\") {\n                        swal(\"Pago con dolar inválido\", \"No puedes pagar en oxxo con dolar, tienes que cambiar la divisa a pesos mexicanos\", \"warning\");\n                    } else {\n                        setPaymentMethod(paymentOption);\n                        setActiveStep(activeStep + 1);\n                    }\n                }\n                break;\n            case 2:\n                if (name !== \"\" && lastname !== \"\" && address !== \"\" && city !== \"\" && stateLocation !== \"\" && country !== \"\") {\n                    setActiveStep(activeStep + 1);\n                }\n                break;\n            case 3:\n                if (payment) {\n                    setActiveStep(activeStep + 1);\n                }\n                break;\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    const buyAgain = () => {\n        setActiveStep(0);\n        setCurrencyType('USD');\n        setPaymentMethod('');\n        setCurrency(null);\n        setLoading(false);\n        setPaymentID(\"\");\n        setPaymentDone(false);\n    }\n\n    return (\n        <div className=\"mt-0\">\n            <React.Fragment>\n                <CssBaseline/>\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        <Stepper activeStep={activeStep} className={classes.stepper}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                        <React.Fragment>\n                            {activeStep === steps.length ? (\n                                <React.Fragment>\n                                    <Typography variant=\"h5\" gutterBottom>\n                                        {paymentMethod === \"card\" ? \"¡Gracias por tu compra!\" : \"¡Referencia de oxxo generada!\"}\n                                    </Typography>\n                                    <img src={DONE} className=\"img-fluid mb-3\" width=\"13%\" alt=\"PAGO REALIZADO\"/>\n                                    <Typography variant=\"subtitle1\">\n                                        {paymentMethod === \"card\" ? \"¡Hemos enviado tu comprobante de pago al correo electrónico que registraste!\" : \"¡Tienes 24 hrs para realizar el pago en oxxo!\"}\n                                    </Typography>\n                                    <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={buyAgain}>\n                                        Comprar de nuevo\n                                    </Button>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    {getStepContent(activeStep)}\n                                    <div className={classes.buttons}>\n                                        {activeStep !== 0 && (\n                                            <Button onClick={handleBack} className={classes.button}>\n                                                Atrás\n                                            </Button>\n                                        )}\n                                        {activeStep === steps.length - 1  ? null : (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleNext}\n                                                className={classes.button}\n                                            >\n                                                Siguiente\n                                            </Button>\n                                        )\n                                        }\n                                    </div>\n                                </React.Fragment>\n                            )}\n                        </React.Fragment>\n                    </Paper>\n                </main>\n            </React.Fragment>\n        </div>\n\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        padding: theme.spacing(1),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(1),\n            marginBottom: theme.spacing(0),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n}));","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\acerca\\cardsworkers.jsx",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, {useState, useEffect} from \"react\";\r\n\r\n\r\nimport EquipoSunshine from \"../../images/team.png\";\r\nimport Footer from '../footer/Footer';\r\nimport Linkecontact from \"../../images/linkecontact.svg\";\r\nimport Twitercontact from \"../../images/twitercontact.svg\";\r\nimport {db} from \"../config/firebase\";\r\n\r\nimport './css/cards.scss';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ACCESIBILIDAD from '../../images/Accesibilidad-01.png';\r\nimport PRIVACIDAD from '../../images/provacidad-04.png';\r\nimport SOLIDEZ from '../../images/solidez-02.png';\r\nimport TRABAJOEQUIPO from '../../images/trabajo en equipo-03.png';\r\nimport VIRY from '../../images/team/VIRY.jpg';\r\nimport JOSS from '../../images/team/JOS.jpg';\r\nimport CHRIS from '../../images/team/CHRIS.jpg';\r\nimport MANU from '../../images/team/MANU.jpg';\r\nimport CRIS from '../../images/team/CRIS.jpg';\r\nimport Roll from 'react-reveal/Roll';\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { Carousel, showArrows, onChange, onClickItem, } from \"react-responsive-carousel\";\r\n\r\n\r\n\r\nconst Cardsworkers = () => {\r\n    const { t } = useTranslation();\r\n    const [team, setTeam] = useState([]);\r\n    const [differencesItems, setDifferencesItems] = useState([]);\r\n\r\n    const fetchData = async() => {\r\n        const collections = ['team', 'differencesItems'];\r\n        await collections.forEach(element => {\r\n            db.collection(element)\r\n                .get()\r\n                .then(snapshot => {\r\n                    let tempArray = [];\r\n                    snapshot\r\n                        .docs.forEach(item => {\r\n                            tempArray.push(item.data());\r\n                        });\r\n                    //LA SIGUIENTE LINEA ES PARA GUARDAR LOS DATOS EN EL STATE CORRESPONDIENTE SEGUN CADA ELEMENTO DEL ARRAY \"collections\"\r\n                    // EJ. setTeam(tempArray) , setDifferencesItems(tempArray), etc...\r\n                    //NOTA: eval NO DEBERIA SER USADO PARA GUARDAR DATOS EN UNA COLECCION, AQUI SE USA PARA MOSTRAR DATOS EN EL LADO DEL CLIENTE SOLAMENTE\r\n                    eval(`set${element.charAt(0).toUpperCase() + element.slice(1)}`)(tempArray);\r\n                })\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        //fetchData();\r\n    }, []);\r\n\r\n\r\n    const differences = [\r\n        {\r\n            image: ACCESIBILIDAD,\r\n            title: t('AboutSection.Differences.Items.0.Title'),\r\n            description: t('AboutSection.Differences.Items.0.Text')\r\n        },\r\n        {\r\n            image: PRIVACIDAD,\r\n            title: t('AboutSection.Differences.Items.1.Title'),\r\n            description: t('AboutSection.Differences.Items.1.Text')\r\n        },\r\n        {\r\n            image: SOLIDEZ,\r\n            title: t('AboutSection.Differences.Items.2.Title'),\r\n            description: t('AboutSection.Differences.Items.2.Text')\r\n        },\r\n        {\r\n            image: TRABAJOEQUIPO,\r\n            title: t('AboutSection.Differences.Items.3.Title'),\r\n            description: t('AboutSection.Differences.Items.3.Text')\r\n        }\r\n    ];\r\n\r\n    const team2 = [\r\n        {\r\n            image: VIRY,\r\n            name: t('AboutSection.Team.Items.0.Name'),\r\n            career: t('AboutSection.Team.Items.0.Career'),\r\n            description: t('AboutSection.Team.Items.0.Description'),\r\n            social: {\r\n                linkedin: \"https://mx.linkedin.com/in/viry-uribe-879b68163/\",\r\n                twitter: \"https://twitter.com/home?lang=es\"\r\n            }\r\n        },\r\n        {\r\n            image: JOSS,\r\n            name: t('AboutSection.Team.Items.1.Name'),\r\n            career: t('AboutSection.Team.Items.1.Career'),\r\n            description: t('AboutSection.Team.Items.1.Description'),\r\n            social: {\r\n                linkedin: \"https://www.linkedin.com/in/jocelyn-uribe-maldonado-720a90203/\",\r\n                twitter: \"https://twitter.com/jocelyn_um\"\r\n            }\r\n        },\r\n        {\r\n            image: CHRIS,\r\n            name: t('AboutSection.Team.Items.2.Name'),\r\n            career: t('AboutSection.Team.Items.2.Career'),\r\n            description: t('AboutSection.Team.Items.2.Description'),\r\n            social: {\r\n                linkedin: \"https://www.linkedin.com/in/ahtziri-antonio-pe%C3%B1a-142705179/\",\r\n                twitter: \"\"\r\n            }\r\n        },\r\n        {\r\n            image: MANU,\r\n            name: t('AboutSection.Team.Items.3.Name'),\r\n            career: t('AboutSection.Team.Items.3.Career'),\r\n            description: t('AboutSection.Team.Items.3.Description'),\r\n            social: {\r\n                linkedin: \"https://www.linkedin.com/in/jose-manuel-viniegra-molina-aab9a51a8/\",\r\n                twitter: \"https://twitter.com/manuel87129931\"\r\n            }\r\n        },\r\n        {\r\n            image: CRIS,\r\n            name: t('AboutSection.Team.Items.4.Name'),\r\n            career: t('AboutSection.Team.Items.4.Career'),\r\n            description: t('AboutSection.Team.Items.4.Description'),\r\n            social: {\r\n                linkedin: \"https://www.linkedin.com/in/cristian-augusto-armenta-garcia/\",\r\n                twitter: \"https://twitter.com/CRISTIANAUGUS14\"\r\n            }\r\n        }\r\n    ]\r\n    return(\r\n       <div className=\"col-12 justify-content-center container-full-cards \">\r\n             <h1 className=\"display-4 font-weight-bold titu-team   position-relative\">\r\n                                {t('AboutSection.Banner')}\r\n                            </h1>\r\n           <Carousel  className=\"d-none d-md-flex \" showArrows={true} infiniteLoop autoPlay\r\n            emulateTouch={true}\r\n            centerMode={true}\r\n            selectedItem={2}\r\n            showIndicators={false}\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            centerSlidePercentage={25}\r\n             onChange={onChange}  >\r\n            {\r\n                            team2.map((value, index) => (\r\n        <div id=\"cont-cards\" className=\" containercard \">\r\n \r\n \r\n            <div className=\"card-wrap-personal\">\r\n          <div className=\"card-personal\" >\r\n          <img className=\"card-bg-personal\" src={value.image}></img>\r\n          <div className=\"card-info-personal\">\r\n            <h1  className=\"card-titles\" slot=\"header\">{value.name}</h1>\r\n            <h6 className=\"card-subtitle mb-4\">{value.career}</h6>\r\n            <p slot=\"content\">{value.description}</p>\r\n            <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                                                    <a href={value.social.linkedin} target=\"_blank\">\r\n                                                        <img src={Linkecontact} alt=\"face\" className=\"img-fluid\"/>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <a href={value.social.twitter || \"#\"} className={value.social.twitter|| \"disabled\" } target=\"_blank\">\r\n                                                        <img src={Twitercontact} alt=\"face\" className=\"img-flui\"/>\r\n                                                    </a>\r\n                                                </div>\r\n                                                </div>\r\n          </div>\r\n          </div>\r\n          </div> \r\n                        \r\n        \r\n          \r\n            \r\n        </div>\r\n          ))\r\n        }\r\n         </Carousel>     \r\n        </div>\r\n    )\r\n            \r\n    \r\n}\r\n\r\nexport default Cardsworkers;\r\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\road_to_map\\carussel.jsx",["350","351","352","353","354","355","356","357","358","359","360","361","362"],"\r\nimport maparoad from '../../images/road-map.png';\r\nimport monedafinal from \"../../images/monedafinal.png\";\r\nimport fondocarro from \"../../images/fondo-carro.svg\";\r\nimport fondocarro2 from \"../../images/fondo-carro2.svg\";\r\nimport fondocarro3 from \"../../images/fondo-carro3.svg\";\r\nimport fondocarro4 from \"../../images/fondo-carro4.svg\";\r\nimport fondocarro5 from \"../../images/fondo-carro5.svg\";\r\nimport fondocarro6 from \"../../images/fondo-carro6.svg\";\r\nimport fondocarro7 from \"../../images/fondo-carro7.svg\";\r\nimport fondocarro8 from \"../../images/fondo-carro8.svg\";\r\n\r\nimport React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport {useTranslation} from 'react-i18next';\r\nimport { Carousel, showArrows, onChange, onClickItem, onClickThumb } from \"react-responsive-carousel\";\r\nimport \"./carrousel.css\";\r\n\r\n\r\nconst DemoCarousel = () => {\r\n    const {t} = useTranslation();\r\n        return (\r\n            \r\n            <Carousel  className=\"d-block  d-md-none\"showArrows={true} infiniteLoop autoPlay\r\n            emulateTouch={true}\r\n             transitionTime={600}onChange={onChange} onClickItem={onClickItem} onClickThumb={onClickThumb} >\r\n                \r\n                <div className=\"cont-car-carrusel \">\r\n                <img className=\"img-fluid\" src={fondocarro} />\r\n                   \r\n                   \r\n                    <p className=\"legend\">{t('RoadToMap.0')}</p>\r\n                </div>\r\n                <div className=\"cont-car-carrusel \">\r\n                    <img className=\" img-fluid\" src={fondocarro3} />\r\n                    <p className=\"legend\">{t('RoadToMap.1')}</p>\r\n                </div>\r\n                <div className=\"cont-car-carrusel \">\r\n                    <img className=\" img-fluid\" src={fondocarro2} />\r\n                    <p className=\"legend\">{t('RoadToMap.2')}</p>\r\n                </div>\r\n                <div className=\"cont-car-carrusel \">\r\n                    <img  className=\" img-fluid\" src={fondocarro4} />\r\n                    <p className=\"legend\">{t('RoadToMap.3')}</p>\r\n                </div>\r\n                <div className=\"cont-car-carrusel \">\r\n                    <img className=\" img-fluid\" src={fondocarro5} />\r\n                    <p className=\"legend\">{t('RoadToMap.4')}</p>\r\n                </div>\r\n                <div className=\"cont-car-carrusel\">\r\n                    <img className=\" img-fluid\" src={fondocarro6} />\r\n                    <p className=\"legend\">{t('RoadToMap.5')}</p>\r\n                </div>\r\n                <div className=\"cont-car-carrusel\">\r\n               \r\n                    <img className=\"\" src={fondocarro7} />\r\n                    <p className=\"legend\">{t('RoadToMap.6')}</p>\r\n                </div>\r\n                <div className=\"cont-car-carrusel\">\r\n               \r\n                    <img className=\" img-fluid\" src={fondocarro8} />\r\n                    <p className=\"legend\">{t('RoadToMap.7')}</p>\r\n                </div>\r\n            </Carousel>\r\n        );\r\n        }\r\n\r\n\r\nexport default DemoCarousel;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\navbar\\mostrarmenu.js",["363","364","365"],"import React, {Component} from 'react';\r\nimport $ from \"jquery\";\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function (e) {\r\n\r\nlet ubicacionPrincipal =window.pageYOffset;\r\nwindow.onscroll=function(){\r\n    let Dezplazamiento_actual =window.pageYOffset;\r\n    if(ubicacionPrincipal >=Dezplazamiento_actual){\r\n        document.getElementById('navbar').style.top='0';\r\n    }\r\n    else{\r\n          document.getElementById('navbar').style.top='-100px';\r\n    }\r\n    ubicacionPrincipal=Dezplazamiento_actual ;\r\n}\r\n});\r\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\firebase.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\Loader.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\whitepaper\\ControlPanel.jsx",["366","367"],"import React from 'react';\nimport Engrane1 from '../../images/engrane1.svg';\nimport './Whitepaper.css';\n\n\nconst ControlPanel = (props) =>{\n    const {pageNumber, numPages, setPageNumber,setScale} = props;\n    const isFirstPage = pageNumber===1;\n    const isLastPage =pageNumber===numPages;\n\n    const firstPageClass=isFirstPage ? 'disabled ':'clickable';\n    const lastPageClass=isLastPage ? 'disabled ':'clickable';\n\n    const goToFirstPage=()=>{\n        if(!isFirstPage) setPageNumber(1);\n    };\n   const goToPreviousPage=()=>{\n    if(!isFirstPage) setPageNumber(pageNumber -1);\n};\n   \n   const goToNextPage=()=>{\n    if(!isLastPage) setPageNumber(pageNumber +1 );\n   };\n   const goToLastPage=()=>{\n    if(!isLastPage) setPageNumber(numPages);\n   };\n        \n    const onChangePage=(e)=>{\n            const {value}=e.target;\n            setPageNumber(Number(value));\n    };\n    \n    return(\n        <div className=\"row control-panel \">\n            <div className=\" p-3 \">\n            <p className=\"control-para\">\n            <i className={`fas fa-fast-backward mx-3 ${firstPageClass}` } onClick={goToFirstPage}/>\n            <i className={`fas fa-backward mx-3 ${firstPageClass}` } onClick={goToPreviousPage}/>\n             <span>Page <input type=\"number\" min={1} max={numPages || 1} name=\"pageNumber\" \n             onChange={onChangePage}\n             value={pageNumber}className=\"input-pdf p-0 pl-2 \"/> {pageNumber} of {numPages}</span>\n            <i className={`fas fa-forward  mx-3 ${lastPageClass}`} onClick={goToNextPage}/>\n            <i className={`fas fa-fast-forward mx-3 ${lastPageClass}`} onClick={goToLastPage}/> </p>\n            </div>\n        </div>\n    )\n};\n\n\nexport default ControlPanel;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Video.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Countdown.jsx",["368","369"],"import React, {useEffect} from 'react';\nimport rectangulo1 from \"../../images/rectangulo1.svg\";\nimport tecnologias from \"../../images/tecnologias.svg\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport contador from \"./cuentaregresiva\";\nimport Zoom from 'react-reveal/Zoom';\nimport { useTranslation } from 'react-i18next';\n\n\nconst Countdown = () => {\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        contador(\"contador\",\n            \"Feb 28  , 2021 16:30:00\",\n            \"...\");\n    }, []);\n\n    return (\n        <div className=\"row fondosec3-alter fondosec3\">\n\n            <div className=\" col-12 \">\n                <p className=\"sec3con\">\n                    {t('CountdownL.Title')}\n                </p><br/>\n                <div className=\"container-contador\">\n                <p id=\"contador\" className=\"\"></p>\n                </div>\n            </div>\n\n            <ul className=\"rectangulo1   text-center\">\n                <li className=\" cont-li-cap\">\n                    <img src={rectangulo1} className=\"rectanguloimg \"/>\n                </li>\n\n                <li className=\" row cap justify-content-around text-left\">\n                    <p className=\"col-4\">SOFT CAP<br/><p className=\"cap-min\">$ 15 M USD</p></p>\n                    <p className=\"col-4\">HARD CAP<br/> <p className=\"cap-min\">$ 250 M USD</p></p>\n\n                </li>\n                      <Zoom>\n                <li className=\" tecno \">\n                   \n                        <img src={tecnologias} className=\" img-tecno  \"/>\n                   \n                </li>\n                </Zoom>\n            </ul>\n\n        </div>\n    );\n};\n\nexport default Countdown;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Soporte.jsx",["370"],"import React from 'react';\nimport Openzepp from \"../../images/zeppelin_icon.svg\";\nimport Github from \"../../images/github_icon.svg\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./css/styles.css\";\nimport {useTranslation} from 'react-i18next';\n\nconst Soporte = () => {\n\n    const {t} = useTranslation();\n\n    const items = [\n        {\n            icon: Github,\n            title: t('Support.Items.Github.Title'),\n            text: t('Support.Items.Github.Text')\n        }\n       \n    ];\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 fondoedi\">\n                <span className=\"text-soporte\">\n                    {t('Support.Title')}\n                </span>\n                <div className=\"row fondo-opa d-flex justify-content-center pb-5\">\n                {\n                    items.map((value, index) => (\n                            <div key={index} className=\" img-meto m-4 col-12 col-lg-4 col-md-4\">\n                                <img src={value.icon} className=\"img-fluid img-soporte   mt-1 mt-lg-5\" alt=\"\"/>\n                                <h4 className=\"mt-3\">{value.title}</h4>\n                                <p className=\" text-zep\">\n                                    {value.text}\n                                </p>\n                            </div>\n                    ))\n                }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Soporte;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Newsletter.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Banner.jsx",["371","372","373","374","375","376"],"import React, {useEffect, Component } from 'react';\nimport ParticlesBackground from './ParticlesBackground.js';\nimport ReactDOM from \"react-dom\";\nimport monedag from \"../../images/moneda2.gif\";\nimport monedafinal from \"../../images/monedafinal.png\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Zoom from 'react-reveal/Zoom';\n\nimport {useTranslation} from \"react-i18next\";\n\nimport Fade from 'react-reveal/Fade';\n\nconst Banner  = () => {\n    useEffect(() => {\n        <ParticlesBackground />   \n    }, []);\n    \n    \n    \n   \n    const { t } = useTranslation();\n\n    return (\n        \n       <div className=\"fondogalaxy\" >\n            <div className=\"position-absolute  particles-cont\">\n          \n\n            <ParticlesBackground >   \n            </ParticlesBackground>\n        </div>\n           \n\n        <div className=\"row fondogalaxy  \" >\n        <Zoom top>\n            <div className=\" col-lg-7 parte col-md-7\" >\n                <p className=\"moneda1 text-lg-left \">\n                    {t('Banner.Titulo.0')}\n                    <p className=\"revo1\">{t('Banner.Titulo.1')}</p>\n                    <p className=\"tec1\">{t('Banner.Titulo.2')}</p>\n                    <img className=\"moneda d-block  d-md-none\"  src={monedafinal}/>\n                    <p className=\"  hometext1  text-center d-none  d-md-block\">\n                        {t('Banner.Texto')}\n                    </p>\n                    <p className=\"hometext1 col-12 text-left  d-block  d-md-none\">\n                        {t('Banner.Texto')} </p>\n                    <div className=\"text-lg-center text-left text-sm-center\">\n\n                        <button className=\"btn btn-light-moon btn-link boton1 disabled \" \n                                role=\"button\" data-toggle=\"modal\">\n                            {t('Banner.TextoBoton')}\n                        </button>\n                    </div>\n\n                </p>\n\n            </div>\n            </Zoom>\n           \n            <div className=\" col-lg-5 col-md-5 d-none col-sm-5 d-md-block   contenedor\">\n\n                <img className=\"moneda   \"  src={monedag}/>\n\n            </div>\n            \n           \n        </div>\n        </div>\n    );\n};\n\nexport default Banner;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\proyectos\\Proyectos.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\PreguntasFrecuentes.jsx",["377"],"import React from 'react';\nimport Depmason from \"../../images/depmason.svg\";\nimport Imgpreg from \"../../images/imgpreg.svg\";\nimport Depmenos from \"../../images/depmenos.svg\";\nimport Fade from 'react-reveal/Fade';\n\n\nimport {useTranslation} from 'react-i18next';\n\nconst PreguntasFrecuentes = () => {\n\n    const {t} = useTranslation();\n\n    const changeIcon = (imageID) => {\n        let image = document.getElementById(imageID)\n        if (image.src.match(\"on\")) {\n            image.src = Depmenos;\n        } else {\n            image.src = Depmason;\n        }\n    }\n\n    const items = [\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.0.Title'),\n            text: t('FAQ.Items.0.Text'),\n            id: \"myImageA\"\n        },\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.1.Title'),\n            text: t('FAQ.Items.1.Text'),\n            id: \"myImageB\"\n        },\n      \n        {\n            icon: Depmason,\n            title: t('FAQ.Items.2.Title'),\n            text: t('FAQ.Items.2.Text'),\n            id: \"myImageD\"\n        },\n        {\n            icon: Depmason,\n            title: t('FAQ.Items.3.Title'),\n            text: t('FAQ.Items.3.Text'),\n            id: \"myImageE\"\n        },\n    ]\n\n    return (\n        <div className=\"row fondo-preg\">\n            <p className=\"frecprec\">{t('FAQ.Title')}</p>\n            <div className=\"col-lg-6 col-md-6 col-12 preguntas\">\n\n                {\n                    items.map((value, index) => (\n                        <div key={index}>\n                            <Fade left cascade>\n                            <p className=\"\">\n                                <button className=\"btn btn-preg1\" onClick={() => changeIcon(value.id)}\n                                        type=\"button\" data-toggle=\"collapse\" data-target={\"#\"+value.id+\"target\"}\n                                        aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                    <img src={value.icon} id={value.id} alt=\"\" className=\"mas\"/>{value.title}\n                                </button>\n                            </p>\n                            <div className=\"collapse btn-res1 \" id={value.id+\"target\"}>\n                                <div className=\"text-preg\">\n                                    {value.text}\n                                </div>\n                            </div>\n                            </Fade>\n                        </div>\n                    ))\n                }\n\n            </div>\n\n                        <div className=\"col-md-6 col-12\">\n                            <img src={Imgpreg} id=\"\" className=\"PREGIMG d-none d-lg-block d-md-block\"/>\n\n                        </div>\n\n        </div>\n    );\n};\n\nexport default PreguntasFrecuentes;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\WhitepaperHome.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\Ventajas.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\MapaApp.jsx",["378","379","380","381","382","383","384","385","386","387","388","389"],"import React from 'react';\nimport Textmoneda from \"../../images/textmoneda.svg\";\nimport Nuestraapp from \"../../images/nuestraapp.svg\";\nimport Google from \"../../images/google.png\";\nimport Apple from \"../../images/apple.png\";\nimport Mapa from \"../../images/mapacirculo.svg\"\nimport Mapamini from \"../../images/mapacirculomini.svg\"\nimport monedafinal from \"../../images/monedafinal.png\";\nimport Boton1token from \"../../images/boton1token.svg\";\nimport Boton2token from \"../../images/boton2token.svg\";\nimport Boton3token from \"../../images/boton3token.svg\";\nimport Boton4token from \"../../images/boton4token.svg\";\nimport Boton5token from \"../../images/boton5token.svg\";\nimport Fade from 'react-reveal/Fade';\n\nimport {useTranslation} from 'react-i18next';\n\nconst MapaApp = () => {\n\n    const {t} = useTranslation();\n\n    return (\n        <>\n        <Fade left>\n            <div className=\"row mapacon\">\n                <div className=\"col-12\">\n                    <p className=\"dis-fondos\">{t('MapaApp.Funding.Title')}</p>\n                    <p className=\"dis-tokens\">{t('MapaApp.Tokens.Title')}</p>\n                    <img src={Mapa} className=\" mapaes d-none d-md-flex\"/>\n                    <img src={Mapamini} className=\" mapaes d-flex d-md-none\"/>\n                    <p className=\"por-syn\">40% <br/><p className=\"por-syn2\">{t('MapaApp.Funding.Symphony')}</p></p>\n                    <p className=\"por-hawk\">30% <br/><p className=\"por-hawk2\">{t('MapaApp.Funding.Hawk')}</p></p>\n                    <p className=\"por-lion\">30% <br/><p className=\"por-lion2\">{t('MapaApp.Funding.Lion')}</p></p>\n\n                    <p className=\"por-reinversion\">70% <br/><p className=\"por-reinversion2\">{t('MapaApp.Tokens.Reinvestment')}</p></p>\n                    <p className=\"por-sunholders\">27% <br/><p className=\"por-sunholders2\">{t('MapaApp.Tokens.Sunholders')}</p></p>\n                    <p className=\"por-equipo\">3% <br/><p className=\"por-equipo2\">{t('MapaApp.Tokens.SUNTeam')}</p></p>\n                    <p className=\"text-center sun-usd\">{t('MapaApp.Price')}</p>\n\n                </div>\n            </div>\n            <div className=\"row text-moneda pt-3 pb-5\">\n                <div className=\"col-12 d-none d-md-block\">\n                    <h1 className=\"titu-token text-center\">{t('MapaApp.SunshineToken.Title')}</h1>\n                    <p className=\"cont-text-moneda\">\n                        <img src={Textmoneda} className=\" col-6\" align=\"left\"/>\n                        <p className=\"parrafos-tokens\">{t('MapaApp.SunshineToken.Items.0')}</p>\n                        <p className=\"parrafos-tokens\">{t('MapaApp.SunshineToken.Items.1')}</p>\n                        <p className=\"parrafos-tokens parra-3\">{t('MapaApp.SunshineToken.Items.2')}</p>\n                        <p className=\"parrafos-tokens\">{t('MapaApp.SunshineToken.Items.3')}</p>\n                        <p className=\"parrafos-tokens\">{t('MapaApp.SunshineToken.Items.4')}</p>\n                    </p>\n                    \n                </div>\n                <div className=\"col-12 cont-token d-block d-md-none \">\n                    <h1 className=\"titu-token text-center\">{t('MapaApp.SunshineToken.Title')}</h1>\n                    <img src={monedafinal} className=\" img-token   col-6\" align=\"left\"/>\n                    \n                    <div id=\"accordion\">\n\n<div class=\"btn card-token card \">\n  <div class=\"\">\n    <a class=\" btn-img-token1 card-link \" data-toggle=\"collapse\" href=\"#collapseOne\">\n    <img src={Boton1token} className=\" btn-img-token \" />\n    </a>\n  </div>\n  <div id=\"collapseOne\" class=\"collapse show position-absolute cont-text-token \" data-parent=\"#accordion\">\n    <div class=\"card-body \">\n    <p className=\"\">{t('MapaApp.SunshineToken.Items.0')}</p>\n    </div>\n  </div>\n</div>\n\n<div class=\"btn card-token card\">\n  <div class=\"\">\n    <a class=\"  btn-img-token2 collapsed card-link\" data-toggle=\"collapse\" href=\"#collapseTwo\">\n    <img src={Boton2token} className=\" btn-img-token  \" />\n    </a>\n  </div>\n  <div id=\"collapseTwo\" class=\"collapse position-absolute cont-text-token \" data-parent=\"#accordion\">\n    <div class=\"card-body \">\n    <p className=\"\">{t('MapaApp.SunshineToken.Items.1')}</p>\n    </div>\n  </div>\n</div>\n\n<div class=\"btn  card-token  card\">\n  <div class=\"\">\n    <a class=\"collapsed btn-img-token3 card-link\" data-toggle=\"collapse\" href=\"#collapseThree\">\n    <img src={Boton3token} className=\" btn-img-token  \" />\n    </a>\n  </div>\n  <div id=\"collapseThree\" class=\"collapse position-absolute cont-text-token \" data-parent=\"#accordion\">\n    <div class=\"card-body\">\n    <p className=\"\">{t('MapaApp.SunshineToken.Items.2')}</p>\n    </div>\n  </div>\n</div>\n\n<div class=\"btn card-token card\">\n  <div class=\"\">\n    <a class=\"collapsed card-link\" data-toggle=\"collapse\" href=\"#collapsefour\">\n    <img src={Boton4token} className=\"btn-img-token btn-img-token4  \" />\n    </a>\n  </div>\n  <div id=\"collapsefour\" class=\"collapse position-absolute cont-text-token \" data-parent=\"#accordion\">\n    <div class=\"card-body\">\n    <p className=\"\">{t('MapaApp.SunshineToken.Items.3')}</p>\n    </div>\n  </div>\n</div>\n\n<div class=\"btn card-token card\">\n  <div class=\"\">\n    <a class=\"collapsed card-link\" data-toggle=\"collapse\" href=\"#collapsefive\">\n    <img src={Boton5token} className=\" btn-img-token btn-img-token5 \" />\n    </a>\n  </div>\n  <div id=\"collapsefive\" class=\"collapse position-absolute cont-text-token \" data-parent=\"#accordion\">\n    <div class=\"card-body\">\n    <p className=\"\">{t('MapaApp.SunshineToken.Items.4')}</p>\n    </div>\n  </div>\n</div>\n\n</div>\n                    \n                    \n                </div>\n            </div>\n\n            <div className=\"row textappcon \">\n                <div className=\"col-12\">\n                    <p className=\" text-titu-app\">{t('MapaApp.AppDownload.Title')}<h2 className=\"text-center\">{t('MapaApp.AppDownload.Subtitle')}</h2></p>\n                    <div className=\" ventajas-app d-none d-md-block\">\n                        <ul className=\"\">\n                            <li>{t('MapaApp.AppDownload.Items.0')}</li>\n                            <li>{t('MapaApp.AppDownload.Items.1')}</li>\n                            <li>{t('MapaApp.AppDownload.Items.2')}</li>\n                        </ul>\n                    </div>\n                    <p className=\"  disponible-text\">{t('MapaApp.AppDownload.Avaliable')}:</p>\n                    <img src={Nuestraapp} className=\" text-App-g \"/>\n                    \n\n                </div>\n                <div className=\"col-12 goo-aple\">\n\n                    <img src={Google} className=\"img-goo\"/>\n                </div>\n                <div className=\"col-12 goo-aple\">\n\n                    <img src={Apple} className=\"img-aple d-flex \"/>\n                </div>\n                <p className=\" constru-cartera \">¡{t('MapaApp.AppDownload.Footer')}!</p>\n            </div>\n            </Fade>\n        </>\n    );\n};\n\nexport default MapaApp;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PasswordRecoveryModal.jsx",["390"],"import React, {useState, useEffect} from 'react';\nimport \"firebase/auth\";\nimport swal from 'sweetalert';\nimport \"./css/styles.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\n\n\nconst PasswordRecoveryModal = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n\n    const submitRecovery = async e => {\n        e.preventDefault();\n        try{\n            setLoading(true);\n            const response = await axios.post(\"https://sunshine-ico.uc.r.appspot.com/password-recovery\", {\n                email\n            });\n            sendMessage(response.data.codeResponse);\n        } catch (e) {\n            console.log(e);\n        }\n        setLoading(false);\n    }\n\n    const sendMessage = (res) => {\n        switch (res) {\n            case 'send':\n                swal({\n                    title: \"Revisa tu correo electrónico!\",\n                    text: \"Se envio un enlace a tu correo para reestablecer tu contraseña\",\n                    icon: \"success\",\n                    button: \"Entendido!\",\n                    closeOnClickOutside: false\n                }).then(async confirm => {\n                    if(confirm){\n                        await document.getElementById(\"closeRecoveryModal\").click();\n                        await history.push(\"/Home\");\n                    }\n                });\n                break;\n\n            case 'auth/user-not-found':\n                swal({\n                    title: \"Revisa bien tu correo!\",\n                    text: \"No se tiene un registro con el correo electrónico proporcionado\",\n                    icon: \"warning\",\n                    button: \"Entendido!\",\n                    closeOnClickOutside: false\n                });\n                break;\n\n            case 'not-send':\n                swal({\n                    title: \"No se pudo enviar el correo!\",\n                    text: \"Prueba recargando la página o intentando de nuevo más tarde\",\n                    icon: \"warning\",\n                    button: \"Entendido!\",\n                    closeOnClickOutside: false\n                });\n                break;\n\n            default:\n                console.log(res);\n                swal({\n                    title: \"Oops!\",\n                    text: \"Ocurrio un error inesperado, recarga la página o intenta de nuevo más tarde\",\n                    icon: \"error\",\n                    button: \"Entendido!\",\n                    closeOnClickOutside: false\n                });\n        }\n    }\n\n    return (\n\n        <div className=\"modal fade \" id=\"recoveryModal\" data-backdrop=\"static\" data-keyboard=\"false\"\n             tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-xl modal-dialog-centered pl-xl-5 pr-xl-5\">\n                <div className=\"modal-content registrobody pl-xl-5 pr-xl-5 \">\n\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title col-12\" id=\"staticBackdropLabel\">Recuperar contraseña</h5>\n                        <button type=\"button\" id=\"closeRecoveryModal\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n                    <div className=\"modal-body col-12 pl-xl-5 pr-xl-5\">\n\n                        <form className=\"form\" onSubmit={submitRecovery}>\n                            <div className=\"container mt-5 pl-xl-5 pr-xl-5\">\n                                <div className=\"row pl-xl-5 pr-xl-5\">\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"email\"\n                                                   name=\"email\"\n                                                   value={email}\n                                                   label=\"Correo electrónico\"\n                                                   type=\"text\"\n                                                   onChange={e => setEmail(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"form-group col-12 mt-4 mb-5\">\n                                        <button type=\"submit\"\n                                                className=\"btn btn-registro\"\n                                                id=\"signInButton\"\n                                                disabled={loading}>\n                                            {loading ? (\n                                                <div className=\"spinner-border text-dark\" role=\"status\">\n                                                    <span className=\"sr-only\">Entrando...</span>\n                                                </div>\n                                            ) : \"ENTRAR\"}\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n                    <div className=\"modal-footer col-12 btn-footer\"></div>\n                </div>\n\n            </div>\n        </div>\n\n    );\n};\n\nexport default PasswordRecoveryModal;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\SignInModal.jsx",["391","392","393","394"],"import React, {useState} from 'react';\nimport \"firebase/auth\";\nimport swal from 'sweetalert';\nimport {useAuth} from \"../contexts/AuthContext\";\nimport {NavLink, useHistory} from 'react-router-dom';\nimport \"./css/styles.css\";\nimport GoogleButton from 'react-google-button'\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport firebase from 'firebase';\nimport {auth, db} from \"../config/firebase\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FilledInput from '@material-ui/core/FilledInput';\n\nconst SignInModal = () => {\n\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [pass, setPass] = useState(\"\");\n    const {login, currentUser, logout} = useAuth();\n    const [verifiedCaptcha, setVerifiedCaptcha] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n\n    const searchDataInFirestore = async id => {\n        let result = null;\n        await db.collection('credentials').doc(id).get().then(doc => {\n            result = doc.exists ? \"exists\" : \"not-exists\";\n        }).catch(error => {\n            result = \"error\";\n            console.log(\"ERROR AL BUSCAR EL UID\");\n        });\n        return result;\n    }\n\n    const saveDataInFirestore = (uid, data = {}) => {\n        if (Object.keys(data).length > 0) {\n            /*============GUARDAR DATOS EN FIRESTORE CON GOOGLE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: data.city.replace(/<[^>]+>/g, ''),\n                doc: \"Pending\".replace(/<[^>]+>/g, ''),\n                email: data.email.replace(/<[^>]+>/g, ''),\n                name: data.name.replace(/<[^>]+>/g, ''),\n                phone: data.phone === null ? \"Pending\".replace(/<[^>]+>/g, '') : data.phone.replace(/<[^>]+>/g, ''),\n                authType: data.authType.replace(/<[^>]+>/g, ''),\n                birthday: data.birthday.replace(/<[^>]+>/g, ''),\n                country: data.country.replace(/<[^>]+>/g, ''),\n                state: data.state.replace(/<[^>]+>/g, ''),\n                address: data.address.replace(/<[^>]+>/g, ''),\n                suns: 0,\n                countryComplete: data.countryComplete.replace(/<[^>]+>/g, ''),\n                profileStatus: data.profileStatus,\n                addressToken: \"\",\n                privateKey: \"\",\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n            }).then(docRef => {\n                history.push(\"/\");\n                window.location.reload();\n            }).catch((error) => {\n                console.log(error);\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        }\n    }\n\n    const signUpWithGoogle = () => {\n\n        let provider = new firebase.auth.GoogleAuthProvider();\n        provider.addScope('https://www.googleapis.com/auth/userinfo.profile');\n        auth.languageCode = 'es';\n        auth.signInWithPopup(provider).then(async (result) => {\n            console.log(result);\n            let user = result.user;\n            console.log(user.uid);\n            if (user.emailVerified) {\n\n                let userStatus = await searchDataInFirestore(user.uid);\n                if (userStatus === \"exists\") {\n                    history.push(\"/\");\n                    window.location.reload();\n                } else if (userStatus === \"not-exists\") {\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\"\n                    });\n                } else {\n                    swal({\n                        title: \"Ocurrió un error\",\n                        text: \"Ocurrió un error inesperado, inténtalo de nuevo más tarde\",\n                        icon: \"error\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                user.sendEmailVerification().then(r => {\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\"\n                    });\n                }, (error) => {\n                    console.log(error.code, error.message);\n                });\n                auth.signOut();\n            }\n        }).catch((error) => {\n            auth.signOut();\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            console.log(errorCode, errorMessage);\n\n            switch (errorCode) {\n                case \"auth/network-request-failed\":\n                    swal({\n                        title: \"Error de red\",\n                        text: \"Un error de red (como tiempo de espera, conexión interrumpida o host inalcanzable) ocurrió\",\n                        icon: \"error\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n            }\n        })\n\n    }\n\n    const sendReCAPTCHAValue = async (value) => {\n        const response = await axios.post(\"https://sunshine-ico.uc.r.appspot.com/api/recaptcha\", {\n            captchaValue: value\n        });\n\n        if (response.data.status === \"success\") {\n            setVerifiedCaptcha(true);\n        }\n\n    }\n\n    const signIn = async (e) => {\n        e.preventDefault();\n\n        try {\n            await setLoading(true);\n            await login(email, pass).then(r => {\n\n                if (r.user.emailVerified) {\n                    if (verifiedCaptcha) {\n                        setTimeout(() => {\n                            history.push(\"/\");\n                            window.location.reload();\n                        }, 2000);\n                    } else {\n                        let error = new Error(\"captcha_not_verified\");\n                        error.code = \"captcha_not_verified\";\n                        throw error;\n                    }\n\n                } else {\n                    logout();\n                    let error = new Error(\"email_not_verified\");\n                    error.code = \"email_not_verified\";\n                    throw error;\n                }\n            });\n        } catch (error) {\n            setLoading(false);\n            let errorCode = error.code;\n            logout();\n            switch (errorCode) {\n                case \"auth/user-not-found\":\n                    swal(\"Usuario no encontrado\", \"La cuenta de correo proporcionada no está registrada\", \"warning\");\n                    break;\n\n                case \"auth/wrong-password\":\n                    swal(\"Datos incorrectos\", \"Contraseña incorrecta\", \"warning\");\n                    break;\n\n                case \"auth/invalid-email\":\n                    swal(\"Datos incorrectos\", \"Solo puedes ingresar una cuenta de correo válida\", \"warning\");\n                    break;\n\n                case \"email_not_verified\":\n                    swal(\"Correo no verificado\", \"Revisa tu bandeja de entrada de tu correo y verifica tu cuenta\", \"warning\");\n                    break;\n\n                case \"auth/too-many-requests\":\n                    swal(\"Cuenta desactivada\", \"El acceso a esta cuenta ha sido desactivado temporalmente debido a los intentos de inicio de sesión fallidos, puedes recuperarla reestableciendo tu contraseña o intentarlo más tarde\", \"warning\");\n                    break;\n\n                case \"captcha_not_verified\":\n                    swal(\"Verifica el CAPTCHA\", \"Verifica el CAPTCHA de nuevo para poder continuar\", \"warning\");\n                    break;\n\n                default:\n                    let errorMessage = error.message;\n                    console.log(errorCode, errorMessage);\n            }\n        }\n\n        //setLoading(false);\n    }\n\n    const [values, setValues] = useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n\n    const handleClickShowPassword = () => {\n        setValues({...values, showPassword: !values.showPassword});\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const openForgetPass = async () => {\n        await document.getElementById(\"closeSignInModal\").click();\n    }\n\n    return (\n\n        <div className=\"modal fade\" id=\"signInModal\" data-backdrop=\"static\"\n             data-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\"\n             aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-xl modal-dialog-centered pl-xl-5 pr-xl-5 \">\n                <div className=\"modal-content registrobody   pl-xl-5 pr-xl-5 \">\n\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title col-12 text-light\" id=\"staticBackdropLabel\">Tu cuenta</h5>\n                        <button type=\"button\" id=\"closeSignInModal\" className=\"close\" data-dismiss=\"modal\"\n                                aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n                    <div className=\"modal-body col-12 pl-xl-5 pr-xl-5\">\n\n                        <div className=\"form-group col-12 d-flex justify-content-center\">\n                            <GoogleButton\n                                label='Iniciar sesión con Google'\n                                onClick={signUpWithGoogle}\n                                style={{width: 500, borderRadius: 3}}\n                            />\n                        </div>\n\n                        <hr/>\n\n                        <form className=\"form\" onSubmit={signIn}>\n                            <div className=\"container mt-5 pl-xl-5 pr-xl-5\">\n                                <div className=\"row pl-xl-5 pr-xl-5\">\n\n                                    <div\n                                        className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"email\"\n                                                   name=\"email\"\n                                                   value={email}\n                                                   label=\"Correo electrónico\"\n                                                   type=\"text\"\n                                                   onChange={e => setEmail(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Contraseña *</InputLabel>\n                                            <FilledInput\n                                                id=\"signin-password\"\n                                                type={values.showPassword ? 'text' : 'password'}\n                                                value={pass}\n                                                onChange={e => setPass(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={handleClickShowPassword}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div\n                                        className=\"input-group col-12 d-flex justify-content-center pl-xl-5 pr-xl-5 mt-3\">\n                                        <ReCAPTCHA sitekey=\"6LceM4oaAAAAAJhirPQbyXB2KERNzwHUyoAspql-\"\n                                                   onChange={sendReCAPTCHAValue}/>\n                                    </div>\n\n                                    <div className=\"form-group col-12 mt-4 mb-5\">\n                                        <button type=\"submit\"\n                                                className=\"btn btn-registro\"\n                                                id=\"signInButton\"\n                                                disabled={loading}>\n                                            {loading ? (\n                                                <div className=\"spinner-border text-dark\" role=\"status\">\n                                                    <span className=\"sr-only\">Entrando...</span>\n                                                </div>\n                                            ) : \"ENTRAR\"}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n\n                        <div className=\"container pl-xl-5 pr-xl-5\">\n                            <div className=\"row pl-xl-5 pr-xl-5\">\n                                <div className=\"col-12 mb-5\">\n\n                                    <a style={{color: \"white\"}} href=\"#\" onClick={openForgetPass} data-toggle=\"modal\"\n                                       data-target=\"#recoveryModal\">\n                                        <h6>\n                                            ¿Olvidaste la contraseña?\n                                        </h6>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"modal-footer col-12 btn-footer\"></div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default SignInModal;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\SignUpModal.jsx",["395","396","397","398","399","400"],"import React, {useState, useEffect} from 'react';\nimport \"../navbar/css/styles.css\"\nimport axios from \"axios\";\nimport 'react-phone-number-input/style.css'\nimport {db, auth} from \"../config/firebase\";\nimport swal from \"sweetalert\";\nimport swal2 from '@sweetalert/with-react';\nimport firebase from 'firebase';\nimport \"firebase/auth\";\nimport GoogleButton from \"react-google-button\";\nimport passwordValidator from \"password-validator\";\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {useHistory} from \"react-router-dom\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst SignUpModal = () => {\n\n    const sendReCAPTCHAValue = async (value) => {\n        const response = await axios.post(\"https://sunshine-ico.uc.r.appspot.com/api/recaptcha\", {\n            captchaValue: value\n        });\n\n        if (response.data.status === \"success\") {\n            setVerifiedCaptcha(true);\n        }\n\n    }\n\n    const [countries, setCountries] = useState([]);\n    const [uploadValue, setUploadValue] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [apellido, setApellido] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repeatedPassword, setRepeteadPassword] = useState(\"\");\n    const [checkedValue, setCheckedValue] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [verifiedCaptcha, setVerifiedCaptcha] = useState(false);\n    const history = useHistory();\n\n    //VALIDATIONS\n    const validations = {\n        requiredFields: () => {\n            return (name !== '' && email !== '' && password !== '' && apellido !== '')\n        }\n    }\n\n    const handleCheckboxState = (e) => {\n        setCheckedValue(e.target.checked);\n    }\n\n    const saveDataInFirestore = (uid, data = {}) => {\n        if (Object.keys(data).length > 0) {\n            /*============GUARDAR DATOS EN FIRESTORE CON GOOGLE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: data.city.replace(/<[^>]+>/g, ''),\n                doc: \"\".replace(/<[^>]+>/g, ''),\n                email: data.email.replace(/<[^>]+>/g, ''),\n                name: data.name.replace(/<[^>]+>/g, ''),\n                phone: data.phone === null ? \"\".replace(/<[^>]+>/g, '') : data.phone.replace(/<[^>]+>/g, ''),\n                authType: data.authType.replace(/<[^>]+>/g, ''),\n                birthday: data.birthday.replace(/<[^>]+>/g, ''),\n                country: data.country.replace(/<[^>]+>/g, ''),\n                state: data.state.replace(/<[^>]+>/g, ''),\n                address: data.address.replace(/<[^>]+>/g, ''),\n                suns: 0,\n                countryComplete: data.countryComplete.replace(/<[^>]+>/g, ''),\n                profileStatus: data.profileStatus,\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n                addressToken: \"\",\n                privateKey: \"\"\n            }).then(docRef => {\n                history.push(\"/\");\n                window.location.reload();\n                clearStates();\n            }).catch((error) => {\n                console.log(error);\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        } else {\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n            db.collection(\"credentials\").doc(uid).set({\n                UUID: uid,\n                city: \"\".replace(/<[^>]+>/g, ''),\n                doc: \"\".replace(/<[^>]+>/g, ''),\n                email: email.replace(/<[^>]+>/g, ''),\n                name: name.replace(/<[^>]+>/g, ''),\n                lastname: apellido.replace(/<[^>]+>/g, ''),\n                phone: \"\".replace(/<[^>]+>/g, ''),\n                authType: \"EMAIL\".replace(/<[^>]+>/g, ''),\n                birthday: \"\".replace(/<[^>]+>/g, ''),\n                country: \"\".replace(/<[^>]+>/g, ''),\n                state: \"\".replace(/<[^>]+>/g, ''),\n                address: \"\".replace(/<[^>]+>/g, ''),\n                profileStatus: 0,\n                suns: 0,\n                countryComplete: \"\".replace(/<[^>]+>/g, ''),\n                fileType: \"\".replace(/<[^>]+>/g, ''),\n                profilePicture: \"\".replace(/<[^>]+>/g, ''),\n                profilePictureStatus: 0,\n                addressToken: \"\",\n                privateKey: \"\"\n            }).then(docRef => {\n                swal({\n                    title: \"¡Registro exitoso!\",\n                    text: \"Enviamos un enlace al correo electrónico que proporcionaste para verificar tu cuenta.\",\n                    icon: \"success\",\n                    button: \"¡Entendido!\",\n                    closeOnClickOutside: false\n                }).then(confirm => {\n                    if (confirm) {\n                        document.getElementById(\"closeModalSignUp\").click();\n                        document.getElementById(\"signInButton\").click();\n                    }\n                });\n                clearStates();\n                setLoading(false);\n            }).catch((error) => {\n                setLoading(false);\n                console.log(error);\n            });\n            /*============GUARDAR DATOS EN FIRESTORE===========*/\n        }\n    }\n\n    const searchDataInFirestore = async id => {\n        let result = null;\n        await db.collection('credentials').doc(id).get().then(doc => {\n            result = doc.exists ? \"exists\" : \"not-exists\";\n        }).catch(error => {\n            result = \"error\";\n            console.log(\"ERROR AL BUSCAR EL UID\");\n        });\n        return result;\n    }\n\n    const clearStates = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n        setRepeteadPassword('');\n        setApellido('');\n        setUploadValue(0);\n        setCheckedValue(false);\n        setVerifiedCaptcha(false);\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validations.requiredFields()) {\n\n            let schema = new passwordValidator();\n            schema\n                .is().min(8)\n                .is().max(100)\n                .has().uppercase()\n                .has().lowercase()\n                .has().digits(1)\n                .has().not().spaces();\n\n            if (schema.validate(password)) {\n                if (password === repeatedPassword) {\n                    if (checkedValue) {\n                        if (verifiedCaptcha) {\n                            setLoading(true);\n                            auth.createUserWithEmailAndPassword(email, password)\n                                .then((user) => {\n\n                                    user.user.sendEmailVerification().then(r => {\n                                        saveDataInFirestore(user.user.uid);\n                                    }, (error) => {\n                                        console.log(error.code, error.message);\n                                    })\n\n                                    auth.signOut();\n\n                                }).catch((error) => {\n                                setLoading(false);\n                                let errorCode = error.code;\n                                let errorMessage = error.message;\n                                console.log(errorCode, errorMessage);\n\n                                /*============== EL CORREO YA SE USA POR OTRA CUENTA ==================*/\n                                if (errorCode === \"auth/email-already-in-use\") {\n                                    swal({\n                                        title: \"Oops\",\n                                        text: \"La dirección de correo ya se encuentra en uso\",\n                                        icon: \"warning\",\n                                        button: \"¡Entendido!\",\n                                        closeOnClickOutside: false\n                                    });\n                                } else if (errorCode === \"auth/weak-password\") {\n                                    swal({\n                                        title: \"Oops\",\n                                        text: \"La contraseña debe tener al menos 8 caracteres!\",\n                                        icon: \"warning\",\n                                        button: \"¡Entendido!\"\n                                    });\n                                }\n\n                            });\n                        } else {\n                            swal({\n                                title: \"Verifica el CAPTCHA\",\n                                text: \"Intenta verificar el CAPTCHA de nuevo para poder continuar\",\n                                icon: \"warning\",\n                                button: \"¡Entendido!\"\n                            });\n                        }\n                    } else {\n                        swal({\n                            title: \"Advertencia\",\n                            text: \"Debes aceptar los términos y condiciones para poder registrarte\",\n                            icon: \"warning\",\n                            button: \"¡Entendido!\",\n                            closeOnClickOutside: false\n                        });\n                    }\n                } else {\n                    swal({\n                        title: \"Las contraseñas no coinciden\",\n                        text: \"Asegurate de escribir las mismas contraseñas en los campos correspondientes\",\n                        icon: \"warning\",\n                        button: \"¡Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                swal2({\n                    text: \"Tu contraseña debe cumplir con los siguientes requisitos\",\n                    closeOnClickOutside: false,\n                    buttons: {\n                        cancel: \"Entendido\",\n                    },\n                    content: (\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <ul>\n                                    {\n                                        schema.validate(password, {list: true}).map((element, index) => {\n                                            console.log(element);\n                                            switch (element) {\n                                                case 'min':\n\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 8 caracteres</p></li>\n                                                    )\n\n                                                case 'max':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Máximo 100 caracteres</p></li>\n                                                    )\n\n                                                case 'uppercase':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo una letra mayuscula</p></li>\n                                                    )\n\n                                                case 'lowercase':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 1 letra minuscula</p></li>\n                                                    )\n\n                                                case 'spaces':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">No debe contener espacios</p></li>\n                                                    )\n\n                                                case 'digits':\n                                                    return (\n                                                        <li key={index} className=\"text-dark text-justify\"><p\n                                                            className=\"text-danger\">Mínimo 1 número</p></li>\n                                                    )\n\n                                            }\n\n                                        })\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                    )\n                })\n            }\n\n        } else {\n            swal({\n                title: \"Advertencia\",\n                text: \"Debes llenar todos los campos\",\n                icon: \"warning\",\n                button: \"¡Entendido!\",\n                closeOnClickOutside: false\n            });\n        }\n    };\n\n    const signUpWithGoogle = () => {\n\n        let provider = new firebase.auth.GoogleAuthProvider();\n        provider.addScope('https://www.googleapis.com/auth/userinfo.profile');\n        auth.languageCode = 'es';\n        auth.signInWithPopup(provider).then(async (result) => {\n            console.log(result);\n            let user = result.user;\n            console.log(user.uid);\n            if (user.emailVerified) {\n\n                let userStatus = await searchDataInFirestore(user.uid);\n                if(userStatus === \"exists\"){\n                    history.push(\"/\");\n                    window.location.reload();\n                    clearStates();\n                } else if (userStatus === \"not-exists\"){\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\",\n                        addressToken: \"\",\n                        privateKey: \"\"\n                    });\n                } else {\n                    swal({\n                        title: \"Ocurrió un error\",\n                        text: \"Ocurrió un error inesperado, inténtalo de nuevo más tarde\",\n                        icon: \"error\",\n                        button: \"Entendido!\",\n                        closeOnClickOutside: false\n                    });\n                }\n\n            } else {\n                user.sendEmailVerification().then(r => {\n                    saveDataInFirestore(user.uid, {\n                        city: \"\",\n                        email: user.email,\n                        name: user.displayName,\n                        phone: user.phoneNumber,\n                        authType: \"GOOGLE\",\n                        birthday: \"\",\n                        country: \"\",\n                        state: \"\",\n                        address: \"\",\n                        profileStatus: 0,\n                        countryComplete: \"\",\n                        addressToken: \"\",\n                        privateKey: \"\"\n                    });\n                }, (error) => {\n                    console.log(error.code, error.message);\n                });\n                auth.signOut();\n            }\n        }).catch((error) => {\n            auth.signOut();\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            console.log(errorCode, errorMessage);\n        })\n\n    }\n\n    const [values, setValues] = useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword1: false,\n        showPassword2: false\n    });\n\n    const handleClickShowPassword = (id) => {\n        if (id === 1) {\n            setValues({...values, showPassword1: !values.showPassword1});\n        } else if (id === 2) {\n            setValues({...values, showPassword2: !values.showPassword2});\n        }\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n\n        <div className=\"modal fade \" id=\"signUpModal\" data-backdrop=\"static\" data-keyboard=\"false\"\n             tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-xl modal-dialog-centered pl-xl-5 pr-xl-5\">\n                <div className=\"modal-content  registrobody pl-xl-5 pr-xl-5\">\n\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title col-12 text-light\" id=\"staticBackdropLabel\">Crea tu cuenta</h5>\n                        <button type=\"button\" id=\"closeModalSignUp\" className=\"close\" data-dismiss=\"modal\"\n                                aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n\n                    <div className=\"modal-body col-12 pl-xl-5 pr-xl-5\">\n\n\n                        <div className=\"form-group col-12 d-flex justify-content-center\">\n                            <GoogleButton\n                                label='Iniciar sesión con Google'\n                                onClick={signUpWithGoogle}\n                                style={{width: 500, borderRadius: 3}}\n                            />\n                        </div>\n\n                        <form className=\"form\" onSubmit={handleSubmit}>\n                            <div className=\"container mt-5 pl-xl-5 pr-xl-5\">\n                                <div className=\"row pl-xl-5 pr-xl-5\">\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"name\"\n                                                   name=\"name\"\n                                                   value={name}\n                                                   label=\"Nombre\"\n                                                   type=\"text\"\n                                                   onChange={(e) => setName(e.target.value)} variant=\"filled\"/>\n\n\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"lastname\"\n                                                   name=\"lastnane\"\n                                                   label=\"Apellido\"\n                                                   value={apellido}\n                                                   type=\"text\"\n                                                   onChange={(e) => setApellido(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <TextField required={true}\n                                                   fullWidth\n                                                   style={{backgroundColor: \"#FFFFFF\", fontWeight: \"bold\"}}\n                                                   className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                   id=\"outlined-basic\" label=\"Email\"\n                                                   value={email}\n                                                   type=\"email\"\n                                                   onChange={(e) => setEmail(e.target.value)} variant=\"filled\"/>\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Contraseña *</InputLabel>\n                                            <FilledInput\n                                                id=\"signup-password\"\n                                                type={values.showPassword1 ? 'text' : 'password'}\n                                                value={password}\n                                                onChange={(e) => setPassword(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={() => handleClickShowPassword(1)}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword1 ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div className=\"input-group input-group-lg col-12 mb-3 pl-xl-5 pr-xl-5\">\n\n                                        <FormControl fullWidth className=\"ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5\"\n                                                     variant=\"filled\">\n                                            <InputLabel htmlFor=\"filled-adornment-password\">Repite tu contraseña\n                                                *</InputLabel>\n                                            <FilledInput\n                                                id=\"signup-password\"\n                                                type={values.showPassword2 ? 'text' : 'password'}\n                                                value={repeatedPassword}\n                                                onChange={(e) => setRepeteadPassword(e.target.value)}\n                                                style={{backgroundColor: \"#FFFFFF\"}}\n                                                endAdornment={\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={() => handleClickShowPassword(2)}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                            edge=\"end\"\n                                                        >\n                                                            {values.showPassword2 ? <Visibility/> : <VisibilityOff/>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                }\n                                            />\n                                        </FormControl>\n\n                                    </div>\n\n                                    <div className=\"form-group form-check col-12 mb-3 pl-xl-5 pr-xl-5\">\n                                                    <span\n                                                        className=\"btn form-check ml-lg-5 mr-lg-5 ml-xl-5 mr-xl-5 form-regi\">\n\n                                                        <FormControlLabel\n                                                            control={\n                                                                <Checkbox className=\"form-check-input form-regi\"\n                                                                          checked={checkedValue}\n                                                                          onChange={handleCheckboxState}\n                                                                          required={true}\n                                                                          name=\"terminosyCondiciones\"/>}\n                                                            label=\"Aceptar términos y condiciones\" required\n                                                            name=\"terminosYCondiciones\"\n                                                        />\n                                                    </span>\n                                    </div>\n\n                                    <div className=\"form-group col-12 d-flex justify-content-center\">\n                                        <ReCAPTCHA sitekey=\"6LceM4oaAAAAAJhirPQbyXB2KERNzwHUyoAspql-\"\n                                                   onChange={sendReCAPTCHAValue}/>\n                                    </div>\n\n                                    <div className=\"form-group col-12 mt-3\" id=\"signUpButtonDiv\">\n                                        <button type=\"submit\"\n                                                className=\"btn btn-registro\"\n                                                id=\"signUpButton\"\n                                                disabled={loading}>\n                                            {loading ? (\n                                                <div className=\"spinner-border text-dark\" role=\"status\">\n                                                    <span className=\"sr-only\">Registrando...</span>\n                                                </div>\n                                            ) : \"REGISTRATE\"}\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </form>\n\n                    </div>\n\n                    <div className=\"modal-footer col-12 btn-footer\"></div>\n\n                </div>\n\n            </div>\n        </div>\n\n    );\n};\n\nexport default SignUpModal;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\Review.jsx",["401","402","403"],"import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport {loadStripe} from \"@stripe/stripe-js\";\nimport {CardElement, Elements, useElements, useStripe} from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst stripePromise = loadStripe('pk_test_51IUDGUD9LA3P3AmKfFAk32py2vEcZs0LEw7FWhU8Ebp1YgNqJK09LkJyo11b5dCXWk6ZluCo3JBmTTdbSTc61EKq00EqsKyM49');\n\nconst CheckoutForm = ({getStates, uid, handleNext, email, currencyType}) => {\n    const classes = useStyles();\n    const stripe = useStripe();\n    const elements = useElements();\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [cardComplete, setCardComplete] = useState(false);\n    const [readyStripe, setReadyStripe] = useState(false);\n\n    const buyToken = async (e) => {\n        e.preventDefault();\n        if(cardComplete){\n            setLoading(true);\n            if (getStates(\"currency\") >= 1) {\n                setOpen(true);\n                const {error, paymentMethod} = await stripe.createPaymentMethod({\n                    type: 'card',\n                    card: elements.getElement(CardElement),\n                    billing_details: {\n                        email,\n                        name: getStates('name') + \" \" + getStates('lastname'),\n                        address: {\n                            state: getStates('stateLocation'),\n                            country: getStates('country'),\n                            city: getStates('city'),\n                            line1: getStates('address')\n                        }\n                }\n                });\n\n                if (!error) {\n                    setLoading(true);\n                    const {id} = paymentMethod;\n                    console.log(\"TIPO DE DIVISA = \" + (currencyType.trim()===\"MX\" ? \"MXN\" : \"USD\"));\n                    try {\n                        const {data} = await axios.post('https://sunshine-ico.uc.r.appspot.com/api/checkout', {\n                            id,\n                            amount: getStates(\"currency\") * 100,\n                            uid,\n                            currency: (currencyType.trim()===\"MX\" ? \"MXN\" : \"USD\"),\n                            exchange: {\n                                usdToMxn: getStates(\"usdToMxn\"),\n                                mxnToUsd: getStates(\"mxnToUsd\")\n                            }\n                        });\n                        console.log(data);\n                        console.log(getStates(\"paymentDone\"))\n                        if (data.codeResponse === 'succeeded') {\n                            handleNext(true);\n                            console.log(getStates(\"paymentDone\"));\n                        } else if (data.codeResponse.code === 'card_declined') {\n                            setOpen(false);\n                            handleNext(false);\n                            switch (data.codeResponse.decline_code) {\n                                case 'generic_decline':\n                                    swal(\"Tarjeta rechazada\", \"Comunicate con tu banco para resolver el problema o inténtalo más tarde\", \"warning\");\n                                    break;\n                                case 'insufficient_funds':\n                                    swal(\"Tarjeta rechazada\", \"Parece que tu tarjeta no tiene fondos suficientes\", \"warning\");\n                                    break;\n                                case 'lost_card':\n                                case 'stolen_card':\n                                    swal(\"Tarjeta rechazada\", \"Parece que tu tarjeta tiene reporte de robo, comunicate con tu banco para resolver el problema\", \"warning\");\n                                    break;\n                                case \"card_not_supported\":\n                                    swal(\"Tarjeta rechazada\", \"Tu tarjeta no es soportada. Por favor usa Visa o Mastercard\", \"warning\");\n                                    break;\n                                default:\n                                    swal(\"Tarjeta rechazada\", \"Ocurrió un error al procesar el pago con la tarjeta indicada, intenta con otra\", \"warning\");\n                                    break;\n                            }\n                        } else {\n                            setOpen(false);\n                            handleNext(false);\n                            switch (data.codeResponse.code) {\n                                case 'expired_card':\n                                    swal(\"Tarjeta expirada\", \"Parece que tu tarjeta expiró, comunicate con tu banco\", \"warning\");\n                                    break;\n                                case 'incorrect_cvc':\n                                    swal(\"CVC Incorrecto\", \"Revisa el código CVC de tu tarjeta e inténtalo de nuevo, de lo contrario, comunicate con tu banco\", \"warning\");\n                                    break;\n                                case 'incorrect_number':\n                                    swal(\"Datos incorrectos\", \"Verifica que los datos de tu tarjeta sean correctos, de ser así, comunicate con tu banco para resolver el problema\", \"warning\");\n                                    break;\n                                case 'amount_too_small':\n                                    swal(\"Monto muy pequeño\", \"El monto ingresado de compra es muy pequeño para poder ser procesado\", \"warning\");\n                                    break;\n                                case 'parameter_invalid_integer':\n                                    swal(\"Verifica el monto\", \"El monto debe tener centavos válidos\", \"warning\");\n                                    break;\n                                case 'amount_too_large':\n                                    swal(\"Cantidad muy grande\", \"El monto no debe ser mayor a $999,999.99\", \"warning\");\n                                    break;\n                            }\n                        }\n                    } catch (error) {\n                        setOpen(false);\n                        handleNext(false);\n                        console.log(\"MENSAJE\");\n                        console.log(error);\n                    }\n                    setLoading(false);\n                } else {\n                    swal(\"No se pudo procesar el pago\", \"Verifica que los datos que pusiste sean correctos o intenta de nuevo más tarde!\", \"error\");\n                }\n                setOpen(false);\n            } else {\n                setLoading(false);\n            }\n            setLoading(false);\n        }\n\n    }\n\n    const buyTokenWithOxxo = async () => {\n        console.log(\"ENTRO A LA FUNCION\");\n        setOpen(true);\n        try{\n            console.log(\"ENTRO AL TRY\");\n            const {data} = await axios.post('https://sunshine-ico.uc.r.appspot.com/create-payment-intent', {\n                id: \"holaoxxo\",\n                amount: getStates(\"currency\"),\n                uid,\n                exchange: {\n                    usdToMxn: getStates(\"usdToMxn\"),\n                    mxnToUsd: getStates(\"mxnToUsd\")\n                }\n            });\n            \n            if(data.statusCode === \"successful\"){\n                stripe.confirmOxxoPayment(\n                    data.clientSecret,\n                    {\n                        payment_method: {\n                            billing_details: {\n                                name: getStates('name') + \" \" + getStates('lastname'),\n                                email,\n                            },\n                        },\n                    })// Stripe.js will open a modal to display the OXXO voucher to your customer\n                    .then(function(result) {\n                        // This promise resolves when the customer closes the modal\n                        console.log(\"EL USUARIO CERRO EL MODAL\");\n                        if (result.error) {\n                            // Display error to your customer\n                            console.log(result.error);\n                        }\n                    });\n                handleNext(true);\n            } else if (data.statusCode === \"amount-exceeded\"){\n                swal(\"Monto inválido\", \"El monto máximo que puedes pagar en oxxo son de $10,000 MXN\", \"warning\");\n            }\n\n\n            \n        } catch (e) {\n            console.log(\"ERROR AL INTENTAR PAGAR CON OXXO, INFO: \");\n            console.log(e.code, e.message);\n        }\n        console.log(\"AQUI YA DEBIO ACABAR LA FUNCION\");\n        setOpen(false);\n    }\n\n\n    return (\n        <div>\n            {\n                getStates(\"paymentMethod\") === \"card\" ? (\n                    <form onSubmit={buyToken}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <CardElement onReady={() => setReadyStripe(true)} onChange={e => setCardComplete(e.complete)} options={{\n                                    style: {\n                                        base: {\n                                            fontSize: '17px',\n                                            color: '#424770',\n                                            '::placeholder': {\n                                                color: '#aab7c4',\n                                            },\n                                        },\n                                        invalid: {\n                                            color: '#9e2146',\n                                        },\n                                    },\n                                }}/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button disabled={!readyStripe} variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\">\n                                    {readyStripe ? \"COMPRAR TOKEN\" : \"CARGANDO...\"}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                ) : (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={buyTokenWithOxxo}>\n                                {open ? \"PROCESANDO...\" : \"GENERAR PAGO CON OXXO\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                )\n            }\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n\n    );\n}\n\nexport default function Review({getStates, uid, handleNext, email}) {\n    const classes = useStyles();\n    const products = [\n        {name: 'Sun Token', desc: (getStates(\"currencyType\") === \"MX\" ? getStates(\"currency\") * getStates(\"mxnToUsd\") : getStates(\"currency\")), price: getStates(\"currency\") + ' ' + (getStates(\"currencyType\") === \"MX\" ? \"MXN\" : \"USD\")},\n    ];\n    const addresses = [getStates(\"address\"), getStates(\"city\"), getStates(\"stateLocation\"), getStates(\"country\")];\n    const payments = [\n        {name: 'Método de pago', detail: 'Tarjeta débito/crédito'},\n    ];\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Datos del pago\n            </Typography>\n\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography gutterBottom>{getStates(\"name\")} {getStates(\"lastname\")}</Typography>\n                    <Typography gutterBottom>{addresses.join(', ')}</Typography>\n                </Grid>\n            </Grid>\n\n            <List disablePadding>\n                {products.map((product) => (\n                    <ListItem className={classes.listItem} key={product.name}>\n                        <ListItemText primary={product.name} secondary={product.desc}/>\n                        <Typography variant=\"body2\">{product.price}</Typography>\n                    </ListItem>\n                ))}\n                <ListItem className={classes.listItem}>\n                    <ListItemText primary=\"Total\"/>\n                    <Typography variant=\"subtitle1\" className={classes.total}>\n                        {getStates(\"currency\")}\n                    </Typography>\n                </ListItem>\n            </List>\n            <Grid container spacing={2}>\n                <Grid item xs={12} className=\"mt-3 mb-3\">\n                    <Elements stripe={stripePromise}>\n                        <CheckoutForm getStates={getStates} uid={uid} handleNext={handleNext} email={email} currencyType={getStates(\"currencyType\")}/>\n                    </Elements>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    listItem: {\n        padding: theme.spacing(1, 0),\n    },\n    total: {\n        fontWeight: 700,\n    },\n    title: {\n        marginTop: theme.spacing(2),\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\TokenAmount.jsx",["404","405","406","407","408","409"],"import React, {useState, useEffect} from 'react';\nimport finalCoin from \"../../../images/monedafinal.png\";\nimport NumberFormat from 'react-number-format';\nimport TextField from '@material-ui/core/TextField';\n\nconst currencies = [\n    {\n        value: \"USD\",\n        label: \"USD\",\n    },\n    {\n        value: \"MX\",\n        label: \"MX\",\n    },\n    {\n        value: \"SUN\",\n        label: \"SUN\",\n    },\n];\n\nconst TokenAmount = ({currency, setCurrency, setStates, getStates}) => {\n\n    const conversor = (type, amount = \"USD\") => {\n        switch (type) {\n            case \"USD\":\n                return `${amount || 0} USD - ${amount * 1 || 0} SUNI - ${(amount * getStates(\"usdToMxn\")).toFixed(2) || 0} MXN`;\n                break;\n\n            case \"SUN\":\n                return `${amount * 1 || 0} USD - ${amount || 0} SUNI - ${(amount * getStates(\"usdToMxn\")).toFixed(2) || 0} MXN`;\n                break;\n\n            case \"MX\":\n                return `${(amount * getStates(\"mxnToUsd\")) || 0} USD - ${(amount * getStates(\"mxnToUsd\")) || 0} SUN - ${amount || 0} MXN`;\n                break;\n            default:\n                return `${amount || 0} USD - ${amount * 1 || 0} SUNI - ${(amount * getStates(\"usdToMxn\").toFixed(2))} MXN`;\n        }\n    }\n\n    const typeCurrency = (val) => {\n        setCurrency(val);\n        let dollar = parseFloat(getStates(\"usdToMxn\").toFixed(2));\n        val = parseFloat(val);\n        if ( (val >= 1 && val<=999999 && getStates(\"currencyType\") === \"USD\") || (val >= dollar && val<=999999 && getStates(\"currencyType\") === \"MX\") || (val >= 1 && val<=999999 && getStates(\"currencyType\") === \"SUN\")) {\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.remove(\"is-invalid\");\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.add(\"is-valid\");\n        } else {\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.remove(\"is-valid\");\n            document.getElementById(\"inlineFormInputGroupCurrency\").classList.add(\"is-invalid\");\n        }\n    }\n\n    const handleChange = (event) => {\n        setStates(\"setCurrencyType\", event.target.value);\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <img src={finalCoin} style={{width: 150}} className=\"img-fluid\" alt=\"SUNSHINE COIN IMAGE\"/>\n                        <h5 className=\"currency-value-title font-weight-bold mt-3\">{conversor(getStates(\"currencyType\"), currency)}</h5>\n                    </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                    <div className=\"col-12 col-md-3 mb-3 mb-md-0\">\n                        <TextField\n                            id=\"outlined-select-currency-native\"\n                            select\n                            value={getStates(\"currencyType\")}\n                            onChange={handleChange}\n                            SelectProps={{\n                                native: true,\n                            }}\n                            fullWidth\n                            helperText=\"Selecciona tu divisa\"\n                        >\n                            {currencies.map((option) => (\n                                <option key={option.value} value={option.value}>\n                                    {option.label}\n                                </option>\n                            ))}\n                        </TextField>\n                    </div>\n\n                    <div className=\"col-12 col-md-9\">\n                        <NumberFormat\n                            className=\"form-control\"\n                            id=\"inlineFormInputGroupCurrency\"\n                            name=\"input-name\"\n                            placeholder=\"Cantidad en dolares\"\n                            value={currency}\n                            thousandSeparator={getStates(\"currencyType\") !== \"SUN\"}\n                            onValueChange={(values) => typeCurrency(values.value)}\n                            prefix={getStates(\"currencyType\") === \"SUN\" ? '' : '$'}\n                        />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default TokenAmount;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\PaymentForm.jsx",["410"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport CREDIT from './../../../images/credit_card.png'\nimport OXXO from './../../../images/store.png';\nimport Link from '@material-ui/core/Link';\n\nexport default function PaymentForm({handleNext}) {\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Método de pago\n            </Typography>\n\n            <Grid container spacing={5} className=\"mt-3\">\n\n                <Grid item xs={12} md={12}>\n\n                    <Link onClick={() => handleNext(false, \"card\")} style={{cursor: \"pointer\", textDecoration: \"none\"}}>\n                        <Paper elevation={5}>\n                            <img src={CREDIT} className=\"img-fluid\" width=\"10%\" alt=\"\"/>\n                            <Typography variant=\"h6\">Tarjeta crédito / débito</Typography>\n                        </Paper>\n                    </Link>\n\n                </Grid>\n\n                <Grid item xs={12} md={12}>\n                    <Link onClick={() => handleNext(false, \"oxxo\")} style={{cursor: \"pointer\", textDecoration: \"none\"}}>\n                        <Paper elevation={5}>\n                            <img src={OXXO} className=\"img-fluid\" width=\"10%\" alt=\"\"/>\n                            <Typography variant=\"h6\">Pago en oxxo</Typography>\n                        </Paper>\n                    </Link>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\checkout\\AddressForm.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\ExpansionComponent.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\UploadImage.jsx",["411","412"],"import React, {useState, useCallback, useEffect} from 'react'\nimport Cropper from 'react-easy-crop'\nimport Slider from '@material-ui/core/Slider'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport {getCroppedImg} from '../js/canvasUtils'\nimport {makeStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\nconst UploadImage = ({ uploadProfilePicture, getStates, setStates, profilePictureStatus}) => {\n    const classes = useStyles();\n    const [imageSrc, setImageSrc] = useState(null);\n    const [crop, setCrop] = useState({x: 0, y: 0});\n    const [rotation, setRotation] = useState(0);\n    const [zoom, setZoom] = useState(1);\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n    const [hideButton, setHideButton] = useState(true);\n\n    useEffect(() => {\n        setHideButton(!(profilePictureStatus === 0));\n    }, []);\n\n\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n        setCroppedAreaPixels(croppedAreaPixels);\n    }, []);\n\n    const showCroppedImage = useCallback(async () => {\n        try {\n            const croppedImage = await getCroppedImg(\n                imageSrc,\n                croppedAreaPixels,\n                rotation\n            )\n            setStates(\"setCroppedImage\", URL.createObjectURL(croppedImage))\n            setStates(\"setImage\", croppedImage);\n        } catch (e) {\n            console.error(e);\n        }\n    }, [imageSrc, croppedAreaPixels, rotation]);\n\n    const onFileChange = async (e) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const file = e.target.files[0];\n            let imageDataUrl = await readFile(file);\n            setImageSrc(imageDataUrl);\n        }\n    }\n\n    const choiceImage = () => {\n        if (!imageSrc) {\n            document.getElementById(\"choiceImage\").click();\n        }\n    }\n\n    return (\n        <div>\n\n            {\n                profilePictureStatus === 0 ? (\n                    <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n                        <Button disabled={hideButton} variant=\"contained\" color=\"primary\" component=\"span\" data-toggle=\"modal\"\n                                data-target=\"#uploadImage\"\n                                data-backdrop='static' data-keyboard='false' onClick={!hideButton ? choiceImage : null}>\n                            Elegir foto\n                        </Button>\n                        {getStates(\"croppedImage\" && getStates(\"image\")) ? (<Button onClick={uploadProfilePicture}>Subir foto</Button>) : null}\n                    </ButtonGroup>\n                ) : null\n            }\n\n            <div className=\"modal fade\" id=\"uploadImage\" tabIndex=\"-1\" role=\"dialog\"\n                 aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                    <div className=\"modal-content py-0\">\n\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title-dashboard\" id=\"exampleModalLabel\">Adapta tu imagen</h5>\n                            <button type=\"button\" className=\"close-modal\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n\n                        <div className=\"modal-body\">\n                            <React.Fragment>\n                                <div className={classes.cropContainer}>\n                                    <Cropper\n                                        image={imageSrc}\n                                        crop={crop}\n                                        rotation={rotation}\n                                        zoom={zoom}\n                                        aspect={4 / 4}\n                                        onCropChange={setCrop}\n                                        onRotationChange={setRotation}\n                                        onCropComplete={onCropComplete}\n                                        onZoomChange={setZoom}\n                                    />\n                                </div>\n                                <div className={classes.controls}>\n                                    <div className={classes.sliderContainer}>\n                                        <Typography\n                                            variant=\"overline\"\n                                            classes={{root: classes.sliderLabel}}\n                                        >\n                                            Zoom\n                                        </Typography>\n                                        <Slider\n                                            value={zoom}\n                                            min={1}\n                                            max={3}\n                                            step={0.1}\n                                            aria-labelledby=\"Zoom\"\n                                            classes={{root: classes.slider}}\n                                            onChange={(e, zoom) => setZoom(zoom)}\n                                        />\n                                    </div>\n                                    <Button\n                                        onClick={showCroppedImage}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        classes={{root: classes.cropButton}}\n                                        data-dismiss=\"modal\" aria-label=\"Close\"\n                                    >\n                                        Finalizar\n                                    </Button>\n                                </div>\n                                <input type=\"file\" hidden id=\"choiceImage\" onChange={onFileChange} accept=\"image/*\"/>\n                                <label htmlFor=\"choiceImage\">\n                                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                        <PhotoCamera/>\n                                    </IconButton>\n                                </label>\n                            </React.Fragment>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst readFile = file => {\n    return new Promise(resolve => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => resolve(reader.result), false);\n        reader.readAsDataURL(file);\n    });\n}\n\nconst useStyles = makeStyles((theme) => ({\n    cropContainer: {\n        position: 'relative',\n        width: '100%',\n        height: 200,\n        background: '#333',\n        [theme.breakpoints.up('sm')]: {\n            height: 400,\n        },\n    },\n    cropButton: {\n        flexShrink: 0,\n        marginLeft: 16,\n    },\n    controls: {\n        padding: 16,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'stretch',\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n    },\n    sliderContainer: {\n        display: 'flex',\n        flex: '1',\n        alignItems: 'center',\n    },\n    sliderLabel: {\n        [theme.breakpoints.down('xs')]: {\n            minWidth: 65,\n        },\n    },\n    slider: {\n        padding: '22px 0px',\n        marginLeft: 16,\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            margin: '0 16px',\n        },\n    },\n}))\n\n\nexport default UploadImage;\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\footer\\Footer.jsx",["413","414","415","416"],"import React, {useState} from \"react\";\nimport '../../App.css';\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Sol from '../../images/sol.svg';\nimport Face from '../../images/face.svg';\nimport Gmail from '../../images/gmail.svg';\nimport Insta from '../../images/insta.svg';\nimport Linke from '../../images/linke.svg';\nimport Twiter from '../../images/twiter.svg';\nimport Youtube from '../../images/youtube.svg';\nimport Moneda2 from '../../images/modenasun2.svg';\nimport moneda from \"../../images/moneda.png\";\nimport {db} from '../config/firebase';\nimport 'firebase/firestore';\nimport * as emailjs from 'emailjs-com';\nimport monedafinal from \"../../images/monedafinal.png\";\nimport {useTranslation} from 'react-i18next';\n\n\nconst Footer = () => {\n\n    const {t} = useTranslation();\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        emailjs.sendForm(\n            \"service_ndmas34\",\n            \"template_jxdqfp9\",\n            \".form-cont\",\n            \"user_At37nmOGM1SpkVgtRqHq2\"\n        );\n\n        db.collection('contactos').add({\n            nombre: name,\n            email: email,\n            comentarios: message,\n\n        })\n            .then(() => {\n                alert('Gracias por contactarnos');\n            })\n            .catch((error) => {\n                alert(error.message);\n            });\n        setName('');\n        setEmail('');\n        setMessage('');\n    };\n\n    return (\n\n        <div className=\"  row  con-footer con-conecta\">\n            <div className=\"col-12 \">\n                <a href=\"https://sunshine-imagine.com/\">\n\n                <img src={Sol} alt=\"\"/>\n                </a>\n\n                <a href=\"https://www.facebook.com/Sunshine-Imagine-Cripto-115833410321279\">\n                    <img src={Face} alt=\"\"/>\n                </a>\n               \n                <a href=\"https://www.instagram.com/sunshine.imagine.cripto/\">\n\n                    <img src={Insta} alt=\"\"/>\n                </a>\n                \n\n                <a href=\"https://twitter.com/ImagineCripto\">\n                    <img src={Twiter} alt=\"\"/>\n                </a>\n\n               {/* <img src={Youtube} alt=\"\"/>*/}\n\n                <div className=\" col-12 foottitulo\">\n\n                    <button type=\"button\" className=\"btn\" data-toggle=\"modal\"\n                            data-target=\"#staticBackdropcon\">\n                        <h1>{t('ContactUs.Title')}\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\n                                <br/>\n                            </svg>\n                        </h1>\n                    </button>\n\n                    {/*---------------------------------------------------------------------------------------modal*------------------------------*/}\n                    <div className=\"modal fade modal-fullscreen\" id=\"staticBackdropcon\" data-backdrop=\"static\"\n                         data-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\"\n                         aria-hidden=\"true\">\n                        <div className=\"modal-dialog modal-xl modal-dialog-centered\">\n                            <div className=\"modal-content modalfootcont\">\n                                <div className=\"modal-header \">\n                                    <h5 className=\" modal-title col-12 \" id=\"staticBackdropLabel\">{t('ContactUs.Extra.0')} <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\" width=\"484.203\" height=\"7.402\"\n                                        viewBox=\"0 0 484.203 7.402\">\n                                        <rect id=\"Rectángulo_187\" data-name=\"Rectángulo 187\" width=\"484.203\"\n                                              height=\"7.402\" fill=\"#dbb80b\"/>\n                                    </svg> <p className=\"conectate \"><br/>{t('ContactUs.Extra.1')}</p></h5>\n\n\n                                    <button type=\"button\" className=\"close\" id=\"closeEmailModal\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div className=\"container\">\n                                    <div className=\"row \">\n                                        <div className=\"col-md-6 modal-body\">\n                                            <img src={monedafinal} className=\"img-fluid d-none d-lg-block\" alt=\"\"/>\n                                        </div>\n                                        <div className=\"col-lg-4\">\n                                            <form className=\"form-cont\" onSubmit={handleSubmit}>\n                                                <div className=\"form-group\">\n                                                    <input type=\"text\" className=\"form-control\"\n                                                           name=\"name\"\n                                                           value={name}\n                                                           onChange={(e) => setName(e.target.value)}\n                                                           placeholder={t('ContactUs.Form.Name')}/>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <input type=\"email\" className=\"form-control\"\n                                                           name=\"email\"\n                                                           value={email}\n                                                           onChange={(e) => setEmail(e.target.value)}\n                                                           id=\"mail\"\n                                                           placeholder={t('ContactUs.Form.Email')}/>\n\n                                                </div>\n                                                <div className=\"form-group\">\n                                                  <textarea className=\"form-control\"\n                                                            name=\"message\"\n                                                            value={message}\n                                                            onChange={(e) => setMessage(e.target.value)}\n                                                            id=\"message\"\n                                                            placeholder={t('ContactUs.Form.Coments')}\n                                                            rows=\"10\"></textarea>\n\n                                                </div>\n                                                <div className=\"modal-footer\">\n                                                    <button type=\"button\" className=\"btn btn-secondary\"\n                                                            data-dismiss=\"modal\">{t('ContactUs.Form.Close')}\n                                                    </button>\n                                                    <button type=\"submit\" className=\"btn btn-primary\">{t('ContactUs.Form.Send')}</button>\n                                                </div>\n                                            </form>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                    {/*--------------------------------------------------------------------------------------------*/}\n                </div>\n\n\n                <img src={Moneda2} className=\"img-fluid\" alt=\"\"/>\n            </div>\n\n\n        </div>\n\n\n    )\n\n}\n\nexport default Footer;\n","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\cuentaregresiva.js",["417","418","419","420"],"import '../../App.css';\nimport React, {Component} from 'react';\nimport Lineadias from '../../images/lineadias.svg';\n\n\nconst d = document;\n\n\nexport default function contador(id, limitDate, finalMessage) {\n    const $contador = document.getElementById(id),\n        contadorDate = new Date(limitDate).getTime();\n    let contadorTempo = setInterval(() => {\n        let now = new Date().getTime(),\n            limitTime = contadorDate - now,\n            days = (Math.floor(limitTime / (1000 * 60 * 60 * 24))),\n            hours = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60 * 24) / (1000 * 60 * 60))).slice(-2),\n            minutes = (\"0\" + Math.floor(limitTime % (1000 * 60 * 60) / (1000 * 60))).slice(-2),\n            seconds = (\"0\" + Math.floor(limitTime % (1000 * 60) / (1000))).slice(-2);\n\n        $contador.innerHTML = `<button class=\" btn contador-fap fap-dias fap-btn \"><p class=\"num-conta\"> ${days}</p> <img src=${Lineadias} alt=\"linea\" class=\"linea-dias\"/></button> <i class=\"texto-contenedor\">\n    <br/>dias</i> \n    \n    <button class=\"btn contador-fap fap-horas fap-btn\"><p class=\"num-conta\"> ${hours}</p></button> <br/><i class=\"texto-contenedor texto-horas\">\n    <br/>horas</i>\n     <button class=\"btn contador-fap fap-minutos fap-btn \"><p class=\"num-conta\">${minutes}</p></button><br/><i class=\"texto-contenedor texto-min\">\n     <br/>minutos</i>\n    <button class=\"btn contador-fap fap-seg fap-btn\"><p class=\"num-conta\">${seconds}</p></button><br/><i class=\"texto-contenedor texto-seg\">\n    <br/>segundos</i> `\n\n        if (limitTime < 0) {\n            clearInterval(contadorTempo);\n            $contador.innerHTML = `<h1 class=\"fintokens\">${finalMessage}</h1>  `\n        }\n\n\n    }, 1000);\n\n\n}\n\n{/*window.onload = function()  { */\n}","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\js\\canvasUtils.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\CheckConnection.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PaymentComponent.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\PurchaseHistory.jsx",["421"],"import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {db} from \"../config/firebase\";\nimport NumberFormat from \"react-number-format\";\n\nconst createData = (id, tokens, price, datetime, cardDetails) => {\n    return {id, tokens, price, datetime, cardDetails};\n}\n\nconst descendingComparator = (a, b, orderBy) => {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nconst getComparator = (order, orderBy) => {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nconst stableSort = (array, comparator) => {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {id: 'id', numeric: false, disablePadding: true, label: 'ID'},\n    {id: 'tokens', numeric: true, disablePadding: false, label: 'Tokens'},\n    {id: 'price', numeric: true, disablePadding: false, label: 'Precio (USD)'},\n    {id: 'datetime', numeric: true, disablePadding: false, label: 'Fecha'},\n    {id: 'cardDetails', numeric: true, disablePadding: false, label: 'Forma de pago'},\n];\n\nconst EnhancedTableHead = (props) => {\n    const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{'aria-label': 'select all desserts'}}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const {numSelected} = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} {numSelected === 1 ? \"seleccionado\" : \"seleccionados\"}\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    Historial de compra\n                </Typography>\n            )}\n\n        </Toolbar>\n    );\n}\n\n\nexport default function PurchaseHistory({uid}) {\n    const classes = useStyles();\n    const [order, setOrder] = useState('desc');\n    const [orderBy, setOrderBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rows, setRows] = useState([]);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    useEffect(() => {\n        getData(uid);\n    }, []);\n\n    const timeConverter = (UNIX_timestamp) => {\n        let a = new Date(UNIX_timestamp * 1000);\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let year = a.getFullYear();\n        let month = months[a.getMonth()];\n        let date = a.getDate();\n        let hour = a.getHours();\n        let min = a.getMinutes();\n        let sec = a.getSeconds();\n        let time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n        return time;\n    }\n\n    const getData = (id) => {\n        let docRef = db.collection('credentials').doc(id).collection('transactions');\n        docRef\n            .orderBy(\"dateField\", 'desc')\n            .onSnapshot((querySnapshot) => {\n                let elements = [];\n                querySnapshot.forEach((doc) => {\n                    try {\n                        let id = null;\n                        let tokens = null;\n                        let price = null;\n                        let date = null;\n                        let paymentMethod = null;\n                        if (doc.data().payment_method_types[0] === \"card\") {\n                            if (doc.data().currency === \"usd\") {\n                                price = \"$\" + (doc.data().amount / 100) || \"PENDING\";\n                            } else if (doc.data().currency === \"mxn\") {\n                                price = \"$\" + doc.data().final_amount || \"PENDING\";\n                            }\n                            id = doc.data().charges.data[0].id || \"PENDING\";\n                            tokens = doc.data().tokens_number || \"PENDING\";\n                            date = timeConverter(doc.data().created) || \"PENDING\";\n                            paymentMethod = doc.data().charges.data[0].payment_method_details.card.network + \" \" + doc.data().charges.data[0].payment_method_details.type + \" \" + \"*\".repeat(12) + doc.data().charges.data[0].payment_method_details.card.last4 || \"PENDING\";\n                        } else if (doc.data().payment_method_types[0] === \"oxxo\") {\n                            id = doc.data().charges.data[0].id || \"PENDING\";\n                            tokens = doc.data().tokens_number || \"PENDING\";\n                            price = \"$\" + doc.data().final_amount || \"PENDING\";\n                            date = timeConverter(doc.data().created) || \"PENDING\";\n                            paymentMethod = doc.data().payment_method_types[0] || \"PENDING\";\n                        }\n                        elements.push(createData(id, tokens, price, date, paymentMethod));\n                    } catch (e) {\n                        console.log(e.code);\n                    }\n                });\n                setRows(elements);\n            })\n    }\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length}/>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size='medium'\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.id);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.id)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.id}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{'aria-labelledby': labelId}}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.tokens}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <NumberFormat\n                                                    type=\"text\"\n                                                    displayType=\"text\"\n                                                    value={row.price}\n                                                    thousandSeparator={true}\n                                                    prefix='$'\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.datetime}</TableCell>\n                                            <TableCell align=\"right\">{row.cardDetails}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{height: 53 * emptyRows}}>\n                                    <TableCell colSpan={6}/>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'dark'\n            ? {\n                color: theme.palette.success.main,\n                backgroundColor: lighten(theme.palette.success.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.success.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\DollarMarktComponent.jsx",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\VerifiedProfile.jsx",["422"],"import React, {useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport Camaraine from \"../../../images/camaraine.svg\";\nimport Pdfine from \"../../../images/pdfine.svg\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport swal from \"sweetalert\";\nimport {db, useStorage} from \"../../config/firebase\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {encryptData} from \"../js/encrypt\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nconst VerifiedProfile = ({getStates, setStates, uid, showFile, setFile}) => {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const masterCondition = getStates(\"profileStatus\") === 1 || getStates(\"profileStatus\") === 2 || getStates(\"profileStatus\") === 5 || getStates(\"profileStatus\") === 7;\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n\n            if (masterCondition) {\n                if (getStates(\"address\") !== \"\") {\n                    if (getStates(\"fileFirestore\") !== null) {\n                        swal({\n                            title: \"¿Estas seguro de subir la información?\",\n                            text: \"Una vez enviada la información no se podrá modificar\",\n                            icon: \"warning\",\n                            buttons: true,\n                            dangerMode: true,\n                        })\n                            .then((willDelete) => {\n                                if (willDelete) {\n                                    setOpen(true);\n                                    const storageRef = useStorage.ref(`id/${encryptData(uid)}`);\n                                    const task = storageRef.put(getStates(\"fileFirestore\"));\n                                    task.on('state_changed', snapshot => {\n                                        let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                                        setStates(\"setUploadValue\", percentage);\n                                    }, error => {\n                                        console.log(error);\n                                    }, () => {\n                                        storageRef.getDownloadURL().then(url => {\n                                            db.collection('credentials').doc(uid).update({\n                                                profileStatus: 3,\n                                                doc: url,\n                                                fileType: getStates(\"fileObject\"),\n                                            }).then(() => {\n                                                setOpen(false);\n                                                swal(\"Información actualizada\", \"¡La información de tu perfil fue actualizada con éxito!\", \"success\");\n                                            });\n                                        })\n                                    })\n                                }\n                            });\n                    } else {\n                        swal(\"Te falta subir tu identifiación oficial\", \"Para poder continuar con la verificación de tus datos debes subir una foto o pdf de tu identifiacaión oficial de ambos lados!\", \"warning\");\n                    }\n\n                } else {\n                    swal(\"Información faltante\", \"Llena todos los campos correspondientes para poder continuar!\", \"warning\");\n                }\n            }\n\n        } catch (e) {\n            console.log(\"Profile.jsx - handleSubmit() -> \" + e);\n        }\n    }\n\n    return (\n        <div>\n            <form className={classes.root}\n                  id={(masterCondition) ? \"profileform\" : \"\"}\n                  onSubmit={(masterCondition) ? handleSubmit : () => false}>\n\n                <div className=\"col-12\">\n                    <Typography className={classes.title} variant=\"h4\" component=\"h4\">\n                        Sube un documento oficial (INE, Pasaporte, Licencia de conducir...)\n                    </Typography>\n                </div>\n\n                <Typography className={classes.title} variant=\"subtitle2\" component=\"h2\"\n                            color=\"textSecondary\">\n                    Verifica que tus datos coincidan con los datos personales que nos proporcionaste previamente\n                </Typography>\n\n\n                <div className=\"row mb-5 mt-5\">\n\n                    <div className=\"col-12\">\n                        <Typography className={classes.title} variant=\"h6\" component=\"h6\">\n                            Identificación oficial\n                        </Typography>\n                    </div>\n\n                    <div className=\"col-12 mt-5 px-5\">\n                        {\n                            !(masterCondition) ? showFile() :\n                                <span className=\"form-regi col-xl-5 col-lg-7 text-dark\">ID\n                                                        <label className=\"btn form-regi\" htmlFor=\"cameraine\">\n                                                            <img src={Camaraine} alt=\"\" className=\"\"/>\n                                                        </label>\n\n                                                        <label htmlFor=\"pdfine\" className=\"btn form-regi\">\n                                                            <img src={Pdfine} alt=\"\" className=\"\"/>\n                                                        </label>\n                                                        <div className=\" form-group  form-registro col-12 \">\n\n                                                            <input type=\"file\" id=\"cameraine\" className=\" d-none\"\n                                                                   accept=\"image/*\"\n                                                                   onChange={e => setFile(e.target.files[0])}>\n                                                            </input>\n\n                                                            <input type=\"file\" id=\"pdfine\"\n                                                                   accept=\"application/pdf\" className=\"d-none\"\n                                                                   onChange={e => setFile(e.target.files[0])}>\n                                                            </input>\n\n                                                            <div style={{\n                                                                position: 'absolute',\n                                                                justifycontent: \"center\",\n                                                                bottom: '10px',\n                                                                left: '50vw'\n                                                            }}>\n                                                            </div>\n\n                                                            <div className=\"container\">\n                                                                {showFile()}\n                                                            </div>\n\n                                                            {/*}\n                                                            <div>\n                                                                <progress value={uploadValue} max=\"100\">\n                                                                    {uploadValue}%\n                                                                </progress>\n                                                                <p className=\"btn form-regi\">{`${uploadValue}%`}</p>\n                                                            </div>\n                                                            {*/}\n\n                                                        </div>\n                                                    </span>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justify-content-center\">\n                        <Button\n                            disabled={!(masterCondition)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            className={classes.button}\n                            startIcon={<SaveIcon/>}\n                            type={(masterCondition) ? \"submit\" : \"button\"}\n                        >\n                            Enviar verificación\n                        </Button>\n                    </div>\n                </div>\n            </form>\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n};\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        marginTop: 20,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    cardActions: {},\n    large: {\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nexport default VerifiedProfile;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\profile\\PersonalData.jsx",["423","424","425","426"],"import 'date-fns';\nimport React, {useEffect, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button, TextField, Avatar} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport SaveIcon from '@material-ui/icons/Save';\nimport swal from \"sweetalert\";\nimport {db, useStorage} from \"../../config/firebase\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PhoneInput from 'react-phone-input-2';\nimport UploadImage from \"./UploadImage\";\nimport 'react-phone-input-2/lib/material.css'\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\n\nconst PersonalData = ({getStates, setStates, uid, profilePictureStatus}) => {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const masterCondition = getStates(\"profileStatus\") === 0 || getStates(\"profileStatus\") === 6 || getStates(\"profileStatus\") === 7;\n\n    const getAge = (birthDateString) => {\n        let today = new Date();\n        let birthDate = new Date(birthDateString);\n        let age = today.getFullYear() - birthDate.getFullYear();\n        let m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        return age;\n    }\n\n    const handleDateChange = (date) => {\n        setStates(\"setBirthday\", date);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (masterCondition) {\n                if (getStates(\"name\") !== \"\" && getStates(\"lastname\") !== \"\" && getStates(\"birthday\") !== \"\" && getStates(\"country\") !== \"\" && getStates(\"stateLocation\") !== \"\" && getStates(\"city\") !== \"\" && getStates(\"phone\") !== \"\" && getStates(\"address\") !== \"\") {\n                    if (getAge(getStates(\"birthday\")) >= 18) {\n                        swal({\n                            title: \"¿Estas seguro de subir la información?\",\n                            text: \"Una vez enviada la información no se podrá modificar\",\n                            icon: \"warning\",\n                            buttons: true,\n                            dangerMode: true,\n                        })\n                            .then((willConfirm) => {\n                                if (willConfirm) {\n                                    setOpen(true);\n                                    db.collection('credentials').doc(uid).update({\n                                        birthday: getStates(\"birthday\"),\n                                        city: getStates(\"city\"),\n                                        country: getStates(\"country\"),\n                                        lastname: getStates(\"lastname\"),\n                                        name: getStates(\"name\"),\n                                        phone: getStates(\"phone\"),\n                                        state: getStates(\"stateLocation\"),\n                                        countryComplete: getStates(\"countryCompleteName\"),\n                                        address: getStates(\"address\"),\n                                        profileStatus: 1,\n                                    }).then(() => {\n                                        swal(\"Información actualizada\", \"¡La información de tu perfil ha sido actualizada con éxito!\", \"success\");\n                                        setOpen(false);\n                                    });\n                                }\n                            });\n\n                    } else {\n                        swal(\"Debes ser mayor de edad\", \"Para poder continuar con la verificación de tus datos debes contar con la mayoria de edad\", \"warning\");\n                    }\n\n                } else {\n                    swal(\"Información incompleta\", \"Llena todos los campos correspondientes para poder continuar\", \"warning\");\n                }\n\n            }\n\n        } catch (e) {\n            console.log(\"Profile.jsx - handleSubmit() -> \" + e);\n        }\n    }\n\n    return (\n        <div>\n\n            <Typography className={classes.title} variant=\"h4\" component=\"h4\">\n                Datos personales\n            </Typography>\n            <form className={classes.root}\n                  id={(masterCondition) ? \"profileform\" : \"\"}\n                  onSubmit={(masterCondition) ? handleSubmit : () => false}>\n                <Typography className={classes.title} variant=\"subtitle2\" component=\"h2\"\n                            color=\"textSecondary\">\n                    Verifica que tus datos y foto coincidan con tu identificación oficial\n                </Typography>\n                <div className=\"row mt-3\">\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <TextField variant=\"outlined\" required\n                                   disabled={!(masterCondition)}\n                                   fullWidth id=\"outlined-basic\" label=\"Nombre(s)\"\n                                   style={{alignContent: \"center\"}} value={getStates(\"name\")}\n                                   onChange={(masterCondition) ? e => setStates(\"setName\", e.target.value) : () => false}/>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <TextField variant=\"outlined\" required\n                                   disabled={!(masterCondition)}\n                                   fullWidth id=\"outlined-basic\" label=\"Apellido(s)\" value={getStates(\"lastname\")}\n                                   onChange={(masterCondition) ? e => setStates(\"setLastname\", e.target.value) : () => false}/>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                inputVariant=\"outlined\"\n                                required\n                                id=\"date-picker-dialog\"\n                                disabled={!(masterCondition)}\n                                fullWidth\n                                label=\"Fecha nacimiento\"\n                                format=\"dd/MM/yyyy\"\n                                value={getStates(\"birthday\") ? getStates(\"birthday\") : null}\n                                onChange={(masterCondition) ? handleDateChange : () => false}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n                            {\n                                (masterCondition) ? (\n                                    <>\n                                        <InputLabel id=\"demo-simple-select-label\">País</InputLabel>\n                                        <Select\n                                            required\n                                            disabled={!(masterCondition)}\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select\"\n                                            value={(masterCondition) ? getStates(\"country\") : false}\n                                            onChange={\n                                                (masterCondition) ?\n                                                    e => {\n                                                        setStates(\"setCountry\", e.target.value)\n                                                        setStates(\"setStateLocation\", \"\")\n                                                        setStates(\"setCity\", \"\")\n                                                        setStates(\"getStatesAPI\", e.currentTarget.id)\n                                                        setStates(\"setCountryCompleteName\", e.currentTarget.id)\n                                                    } : () => false}>\n                                            {\n                                                getStates(\"countriesAPI\").map((value, index) => (\n                                                    <MenuItem key={index} id={value.country_name}\n                                                              value={value.country_short_name}>{value.country_name}</MenuItem>\n                                                ))\n                                            }\n                                        </Select>\n                                    </>\n                                ) : (\n                                    <TextField variant=\"outlined\" required\n                                               disabled={!(masterCondition)}\n                                               fullWidth id=\"outlined-basic\" label=\"País\" value={getStates(\"country\")}\n                                    />\n                                )\n                            }\n\n                        </FormControl>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <FormControl variant=\"outlined\" fullWidth className={classes.formControl}>\n\n                            {\n                                (masterCondition) ? (\n                                    <>\n                                        <InputLabel id=\"demo-simple-select-label\">Estado</InputLabel>\n                                        <Select\n                                            required\n                                            disabled={!(masterCondition)}\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"demo-simple-select-state\"\n                                            value={(masterCondition) ? getStates(\"stateLocation\") : false}\n                                            onChange={\n                                                (masterCondition) ?\n                                                    e => {\n                                                        setStates(\"setStateLocation\", e.target.value)\n                                                        setStates(\"setCity\", \"\")\n                                                    } : () => false}>\n                                            {\n                                                getStates(\"statesAPI\").map((value, index) => (\n                                                    <MenuItem key={index}\n                                                              value={value.state_name}>{value.state_name}</MenuItem>\n                                                ))\n                                            }\n                                        </Select>\n                                    </>\n                                ) : (\n                                    <TextField variant=\"outlined\" required\n                                               disabled={!(masterCondition)}\n                                               fullWidth id=\"outlined-basic\" label=\"Estado\"\n                                               value={getStates(\"stateLocation\")}\n                                    />\n                                )\n                            }\n\n                        </FormControl>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        <TextField variant=\"outlined\" required\n                                   disabled={!(masterCondition)}\n                                   fullWidth id=\"outlined-basic\" label=\"Ciudad\" value={getStates(\"city\")}\n                                   onChange={(masterCondition) ? e => setStates(\"setCity\", e.target.value) : () => false}/>\n                    </div>\n\n                    <div className=\"col-12 col-sm-12 col-md-6 col-lg-4 px-5 mt-5\">\n                        {!(masterCondition) ?\n                            <TextField required variant=\"outlined\"\n                                       disabled={!(masterCondition)}\n                                       fullWidth id=\"outlined-basic\" label=\"Número telefonico\"\n                                       value={\"+\" + getStates(\"phone\")}\n                                       onChange={(masterCondition) ? e => setStates(\"setPhone\", e.target.value) : () => false}/> :\n                            <PhoneInput\n                                disabled={!(masterCondition)}\n                                country={'mx'}\n                                inputStyle={{height: 56, width: \"100%\"}}\n                                value={getStates(\"phone\")}\n                                onChange={(masterCondition) ? e => setStates(\"setPhone\", e) : () => false}\n                            />}\n\n                    </div>\n\n                    <div className=\"row mt-5 mb-5 px-5 mt-5\">\n                        <div className=\"col-12\">\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                disabled={!(masterCondition)}\n                                fullWidth\n                                id=\"standard-multiline-static\"\n                                label=\"Dirección\"\n                                multiline\n                                rows={4}\n                                value={getStates(\"address\")}\n                                onChange={(masterCondition) ? e => setStates(\"setAddress\", e.target.value) : () => false}\n                            />\n                        </div>\n                    </div>\n\n\n                </div>\n\n\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justify-content-center\">\n                        <Button\n                            disabled={!(masterCondition)}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            className={classes.button}\n                            startIcon={<SaveIcon/>}\n                            type={(masterCondition) ? \"submit\" : \"button\"}\n                        >\n                            Enviar\n                        </Button>\n                    </div>\n                </div>\n            </form>\n            <Backdrop className={classes.backdrop} open={open} >\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 300,\n        paddingBottom: 20,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        marginTop: 20,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    cardActions: {},\n    large: {\n        width: theme.spacing(25),\n        height: theme.spacing(25),\n        marginBottom: 10\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nexport default PersonalData;","C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\js\\encrypt.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\home\\ParticlesBackground.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\config\\Particles-config.js",[],"C:\\Users\\Federico-Sunshine\\Documents\\proyectocomplete\\ico-app\\src\\componentes\\user\\wallet\\HeaderCards.jsx",[],{"ruleId":"427","replacedBy":"428"},{"ruleId":"429","replacedBy":"430"},{"ruleId":"431","severity":1,"message":"432","line":22,"column":8,"nodeType":"433","messageId":"434","endLine":22,"endColumn":19},{"ruleId":"431","severity":1,"message":"435","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":14},{"ruleId":"431","severity":1,"message":"436","line":6,"column":8,"nodeType":"433","messageId":"434","endLine":6,"endColumn":9},{"ruleId":"431","severity":1,"message":"437","line":11,"column":10,"nodeType":"433","messageId":"434","endLine":11,"endColumn":24},{"ruleId":"438","severity":1,"message":"439","line":52,"column":13,"nodeType":"440","endLine":53,"endColumn":52},{"ruleId":"441","severity":1,"message":"442","line":27,"column":42,"nodeType":"443","messageId":"444","endLine":27,"endColumn":54},{"ruleId":"445","severity":1,"message":"446","line":32,"column":1,"nodeType":"440","endLine":32,"endColumn":57},{"ruleId":"431","severity":1,"message":"447","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":22},{"ruleId":"431","severity":1,"message":"448","line":29,"column":12,"nodeType":"433","messageId":"434","endLine":29,"endColumn":16},{"ruleId":"431","severity":1,"message":"449","line":29,"column":18,"nodeType":"433","messageId":"434","endLine":29,"endColumn":25},{"ruleId":"431","severity":1,"message":"450","line":30,"column":12,"nodeType":"433","messageId":"434","endLine":30,"endColumn":28},{"ruleId":"431","severity":1,"message":"451","line":30,"column":30,"nodeType":"433","messageId":"434","endLine":30,"endColumn":49},{"ruleId":"431","severity":1,"message":"452","line":32,"column":11,"nodeType":"433","messageId":"434","endLine":32,"endColumn":20},{"ruleId":"453","severity":1,"message":"454","line":46,"column":21,"nodeType":"455","messageId":"456","endLine":46,"endColumn":25},{"ruleId":"457","severity":1,"message":"458","line":217,"column":45,"nodeType":"440","endLine":217,"endColumn":145},{"ruleId":"459","severity":1,"message":"460","line":230,"column":53,"nodeType":"440","messageId":"461","endLine":230,"endColumn":101,"fix":"462"},{"ruleId":"459","severity":1,"message":"460","line":235,"column":53,"nodeType":"440","messageId":"461","endLine":235,"endColumn":154,"fix":"463"},{"ruleId":"431","severity":1,"message":"464","line":5,"column":26,"nodeType":"433","messageId":"434","endLine":5,"endColumn":35},{"ruleId":"431","severity":1,"message":"465","line":27,"column":20,"nodeType":"433","messageId":"434","endLine":27,"endColumn":29},{"ruleId":"466","severity":1,"message":"467","line":51,"column":9,"nodeType":"468","messageId":"469","endLine":60,"endColumn":10},{"ruleId":"445","severity":1,"message":"446","line":70,"column":29,"nodeType":"440","endLine":70,"endColumn":64},{"ruleId":"470","severity":1,"message":"471","line":85,"column":29,"nodeType":"440","endLine":86,"endColumn":91},{"ruleId":"470","severity":1,"message":"471","line":90,"column":29,"nodeType":"440","endLine":91,"endColumn":91},{"ruleId":"445","severity":1,"message":"446","line":124,"column":29,"nodeType":"440","endLine":124,"endColumn":64},{"ruleId":"470","severity":1,"message":"471","line":166,"column":29,"nodeType":"440","endLine":167,"endColumn":91},{"ruleId":"470","severity":1,"message":"471","line":171,"column":29,"nodeType":"440","endLine":172,"endColumn":91},{"ruleId":"431","severity":1,"message":"472","line":4,"column":16,"nodeType":"433","messageId":"434","endLine":4,"endColumn":25},{"ruleId":"431","severity":1,"message":"464","line":4,"column":27,"nodeType":"433","messageId":"434","endLine":4,"endColumn":36},{"ruleId":"431","severity":1,"message":"473","line":4,"column":38,"nodeType":"433","messageId":"434","endLine":4,"endColumn":46},{"ruleId":"431","severity":1,"message":"474","line":7,"column":8,"nodeType":"433","messageId":"434","endLine":7,"endColumn":12},{"ruleId":"431","severity":1,"message":"475","line":29,"column":12,"nodeType":"433","messageId":"434","endLine":29,"endColumn":17},{"ruleId":"476","severity":1,"message":"477","line":35,"column":8,"nodeType":"478","endLine":35,"endColumn":10,"suggestions":"479"},{"ruleId":"480","severity":1,"message":"481","line":105,"column":102,"nodeType":"482","messageId":"483","endLine":105,"endColumn":104},{"ruleId":"466","severity":1,"message":"467","line":107,"column":45,"nodeType":"468","messageId":"469","endLine":139,"endColumn":46},{"ruleId":"431","severity":1,"message":"484","line":6,"column":5,"nodeType":"433","messageId":"434","endLine":6,"endColumn":10},{"ruleId":"431","severity":1,"message":"485","line":37,"column":9,"nodeType":"433","messageId":"434","endLine":37,"endColumn":24},{"ruleId":"431","severity":1,"message":"486","line":43,"column":25,"nodeType":"433","messageId":"434","endLine":43,"endColumn":31},{"ruleId":"431","severity":1,"message":"487","line":55,"column":12,"nodeType":"433","messageId":"434","endLine":55,"endColumn":27},{"ruleId":"431","severity":1,"message":"488","line":55,"column":29,"nodeType":"433","messageId":"434","endLine":55,"endColumn":47},{"ruleId":"431","severity":1,"message":"489","line":59,"column":17,"nodeType":"433","messageId":"434","endLine":59,"endColumn":22},{"ruleId":"476","severity":1,"message":"490","line":72,"column":8,"nodeType":"478","endLine":72,"endColumn":10,"suggestions":"491"},{"ruleId":"431","severity":1,"message":"492","line":119,"column":16,"nodeType":"433","messageId":"434","endLine":119,"endColumn":23},{"ruleId":"431","severity":1,"message":"493","line":119,"column":25,"nodeType":"433","messageId":"434","endLine":119,"endColumn":34},{"ruleId":"494","severity":1,"message":"495","line":152,"column":21,"nodeType":"440","endLine":153,"endColumn":60},{"ruleId":"470","severity":1,"message":"471","line":152,"column":21,"nodeType":"440","endLine":153,"endColumn":60},{"ruleId":"431","severity":1,"message":"496","line":10,"column":8,"nodeType":"433","messageId":"434","endLine":10,"endColumn":23},{"ruleId":"431","severity":1,"message":"486","line":14,"column":25,"nodeType":"433","messageId":"434","endLine":14,"endColumn":31},{"ruleId":"431","severity":1,"message":"497","line":15,"column":12,"nodeType":"433","messageId":"434","endLine":15,"endColumn":23},{"ruleId":"431","severity":1,"message":"498","line":19,"column":12,"nodeType":"433","messageId":"434","endLine":19,"endColumn":22},{"ruleId":"431","severity":1,"message":"499","line":19,"column":24,"nodeType":"433","messageId":"434","endLine":19,"endColumn":37},{"ruleId":"476","severity":1,"message":"500","line":52,"column":7,"nodeType":"478","endLine":52,"endColumn":9,"suggestions":"501"},{"ruleId":"431","severity":1,"message":"502","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":19},{"ruleId":"431","severity":1,"message":"503","line":5,"column":8,"nodeType":"433","messageId":"434","endLine":5,"endColumn":19},{"ruleId":"431","severity":1,"message":"504","line":17,"column":5,"nodeType":"433","messageId":"434","endLine":17,"endColumn":11},{"ruleId":"431","severity":1,"message":"505","line":19,"column":5,"nodeType":"433","messageId":"434","endLine":19,"endColumn":15},{"ruleId":"431","severity":1,"message":"506","line":21,"column":5,"nodeType":"433","messageId":"434","endLine":21,"endColumn":14},{"ruleId":"431","severity":1,"message":"507","line":22,"column":5,"nodeType":"433","messageId":"434","endLine":22,"endColumn":9},{"ruleId":"431","severity":1,"message":"508","line":23,"column":5,"nodeType":"433","messageId":"434","endLine":23,"endColumn":10},{"ruleId":"431","severity":1,"message":"509","line":57,"column":12,"nodeType":"433","messageId":"434","endLine":57,"endColumn":18},{"ruleId":"431","severity":1,"message":"510","line":63,"column":12,"nodeType":"433","messageId":"434","endLine":63,"endColumn":19},{"ruleId":"431","severity":1,"message":"511","line":72,"column":12,"nodeType":"433","messageId":"434","endLine":72,"endColumn":24},{"ruleId":"431","severity":1,"message":"512","line":73,"column":12,"nodeType":"433","messageId":"434","endLine":73,"endColumn":21},{"ruleId":"431","severity":1,"message":"513","line":74,"column":12,"nodeType":"433","messageId":"434","endLine":74,"endColumn":21},{"ruleId":"431","severity":1,"message":"514","line":74,"column":23,"nodeType":"433","messageId":"434","endLine":74,"endColumn":35},{"ruleId":"431","severity":1,"message":"515","line":76,"column":12,"nodeType":"433","messageId":"434","endLine":76,"endColumn":25},{"ruleId":"431","severity":1,"message":"516","line":77,"column":12,"nodeType":"433","messageId":"434","endLine":77,"endColumn":23},{"ruleId":"431","severity":1,"message":"517","line":77,"column":25,"nodeType":"433","messageId":"434","endLine":77,"endColumn":39},{"ruleId":"431","severity":1,"message":"518","line":81,"column":19,"nodeType":"433","messageId":"434","endLine":81,"endColumn":27},{"ruleId":"431","severity":1,"message":"489","line":86,"column":17,"nodeType":"433","messageId":"434","endLine":86,"endColumn":22},{"ruleId":"476","severity":1,"message":"519","line":105,"column":8,"nodeType":"478","endLine":105,"endColumn":22,"suggestions":"520"},{"ruleId":"466","severity":1,"message":"467","line":117,"column":21,"nodeType":"468","messageId":"469","endLine":131,"endColumn":22},{"ruleId":"438","severity":1,"message":"439","line":184,"column":29,"nodeType":"440","endLine":186,"endColumn":75},{"ruleId":"453","severity":1,"message":"454","line":279,"column":16,"nodeType":"455","messageId":"456","endLine":279,"endColumn":20},{"ruleId":"453","severity":1,"message":"454","line":283,"column":9,"nodeType":"455","messageId":"456","endLine":283,"endColumn":13},{"ruleId":"431","severity":1,"message":"472","line":3,"column":16,"nodeType":"433","messageId":"434","endLine":3,"endColumn":25},{"ruleId":"431","severity":1,"message":"521","line":7,"column":8,"nodeType":"433","messageId":"434","endLine":7,"endColumn":19},{"ruleId":"431","severity":1,"message":"522","line":26,"column":12,"nodeType":"433","messageId":"434","endLine":26,"endColumn":20},{"ruleId":"431","severity":1,"message":"523","line":33,"column":12,"nodeType":"433","messageId":"434","endLine":33,"endColumn":19},{"ruleId":"431","severity":1,"message":"524","line":34,"column":12,"nodeType":"433","messageId":"434","endLine":34,"endColumn":21},{"ruleId":"431","severity":1,"message":"525","line":35,"column":12,"nodeType":"433","messageId":"434","endLine":35,"endColumn":23},{"ruleId":"476","severity":1,"message":"526","line":49,"column":8,"nodeType":"478","endLine":49,"endColumn":10,"suggestions":"527"},{"ruleId":"453","severity":1,"message":"454","line":66,"column":9,"nodeType":"455","messageId":"456","endLine":66,"endColumn":13},{"ruleId":"453","severity":1,"message":"454","line":70,"column":16,"nodeType":"455","messageId":"456","endLine":70,"endColumn":20},{"ruleId":"466","severity":1,"message":"467","line":90,"column":9,"nodeType":"468","messageId":"469","endLine":178,"endColumn":10},{"ruleId":"431","severity":1,"message":"447","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":22},{"ruleId":"431","severity":1,"message":"528","line":5,"column":8,"nodeType":"433","messageId":"434","endLine":5,"endColumn":14},{"ruleId":"431","severity":1,"message":"474","line":21,"column":8,"nodeType":"433","messageId":"434","endLine":21,"endColumn":12},{"ruleId":"431","severity":1,"message":"529","line":22,"column":10,"nodeType":"433","messageId":"434","endLine":22,"endColumn":17},{"ruleId":"431","severity":1,"message":"530","line":23,"column":20,"nodeType":"433","messageId":"434","endLine":23,"endColumn":30},{"ruleId":"431","severity":1,"message":"531","line":23,"column":42,"nodeType":"433","messageId":"434","endLine":23,"endColumn":53},{"ruleId":"431","severity":1,"message":"448","line":29,"column":12,"nodeType":"433","messageId":"434","endLine":29,"endColumn":16},{"ruleId":"431","severity":1,"message":"449","line":29,"column":18,"nodeType":"433","messageId":"434","endLine":29,"endColumn":25},{"ruleId":"431","severity":1,"message":"450","line":30,"column":12,"nodeType":"433","messageId":"434","endLine":30,"endColumn":28},{"ruleId":"431","severity":1,"message":"451","line":30,"column":30,"nodeType":"433","messageId":"434","endLine":30,"endColumn":49},{"ruleId":"431","severity":1,"message":"452","line":32,"column":11,"nodeType":"433","messageId":"434","endLine":32,"endColumn":20},{"ruleId":"453","severity":1,"message":"454","line":46,"column":21,"nodeType":"455","messageId":"456","endLine":46,"endColumn":25},{"ruleId":"431","severity":1,"message":"532","line":56,"column":11,"nodeType":"433","messageId":"434","endLine":56,"endColumn":22},{"ruleId":"445","severity":1,"message":"446","line":152,"column":11,"nodeType":"440","endLine":152,"endColumn":63},{"ruleId":"459","severity":1,"message":"460","line":159,"column":53,"nodeType":"440","messageId":"461","endLine":159,"endColumn":101,"fix":"533"},{"ruleId":"459","severity":1,"message":"460","line":164,"column":53,"nodeType":"440","messageId":"461","endLine":164,"endColumn":154,"fix":"534"},{"ruleId":"431","severity":1,"message":"535","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":16},{"ruleId":"431","severity":1,"message":"521","line":3,"column":8,"nodeType":"433","messageId":"434","endLine":3,"endColumn":19},{"ruleId":"431","severity":1,"message":"473","line":13,"column":16,"nodeType":"433","messageId":"434","endLine":13,"endColumn":24},{"ruleId":"431","severity":1,"message":"536","line":14,"column":8,"nodeType":"433","messageId":"434","endLine":14,"endColumn":16},{"ruleId":"431","severity":1,"message":"530","line":17,"column":20,"nodeType":"433","messageId":"434","endLine":17,"endColumn":30},{"ruleId":"445","severity":1,"message":"446","line":30,"column":17,"nodeType":"440","endLine":30,"endColumn":63},{"ruleId":"445","severity":1,"message":"446","line":36,"column":21,"nodeType":"440","endLine":36,"endColumn":69},{"ruleId":"445","severity":1,"message":"446","line":40,"column":21,"nodeType":"440","endLine":40,"endColumn":69},{"ruleId":"445","severity":1,"message":"446","line":44,"column":21,"nodeType":"440","endLine":44,"endColumn":70},{"ruleId":"445","severity":1,"message":"446","line":48,"column":21,"nodeType":"440","endLine":48,"endColumn":69},{"ruleId":"445","severity":1,"message":"446","line":52,"column":21,"nodeType":"440","endLine":52,"endColumn":69},{"ruleId":"445","severity":1,"message":"446","line":57,"column":21,"nodeType":"440","endLine":57,"endColumn":59},{"ruleId":"445","severity":1,"message":"446","line":62,"column":21,"nodeType":"440","endLine":62,"endColumn":69},{"ruleId":"431","severity":1,"message":"537","line":1,"column":8,"nodeType":"433","messageId":"434","endLine":1,"endColumn":13},{"ruleId":"431","severity":1,"message":"472","line":1,"column":16,"nodeType":"433","messageId":"434","endLine":1,"endColumn":25},{"ruleId":"431","severity":1,"message":"436","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":9},{"ruleId":"431","severity":1,"message":"538","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":16},{"ruleId":"431","severity":1,"message":"539","line":7,"column":48,"nodeType":"433","messageId":"434","endLine":7,"endColumn":56},{"ruleId":"445","severity":1,"message":"446","line":33,"column":21,"nodeType":"440","endLine":33,"endColumn":72},{"ruleId":"445","severity":1,"message":"446","line":44,"column":25,"nodeType":"440","endLine":44,"endColumn":74},{"ruleId":"431","severity":1,"message":"540","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":16},{"ruleId":"431","severity":1,"message":"472","line":1,"column":27,"nodeType":"433","messageId":"434","endLine":1,"endColumn":36},{"ruleId":"431","severity":1,"message":"536","line":3,"column":8,"nodeType":"433","messageId":"434","endLine":3,"endColumn":16},{"ruleId":"431","severity":1,"message":"541","line":11,"column":8,"nodeType":"433","messageId":"434","endLine":11,"endColumn":12},{"ruleId":"445","severity":1,"message":"446","line":41,"column":21,"nodeType":"440","endLine":41,"endColumn":84},{"ruleId":"542","severity":1,"message":"543","line":49,"column":25,"nodeType":"440","endLine":50,"endColumn":67},{"ruleId":"445","severity":1,"message":"446","line":62,"column":17,"nodeType":"440","endLine":62,"endColumn":60},{"ruleId":"445","severity":1,"message":"446","line":80,"column":29,"nodeType":"440","endLine":80,"endColumn":104},{"ruleId":"445","severity":1,"message":"446","line":29,"column":21,"nodeType":"440","endLine":29,"endColumn":75},{"ruleId":"445","severity":1,"message":"446","line":30,"column":21,"nodeType":"440","endLine":30,"endColumn":79},{"ruleId":"445","severity":1,"message":"446","line":46,"column":25,"nodeType":"440","endLine":46,"endColumn":80},{"ruleId":"445","severity":1,"message":"446","line":57,"column":21,"nodeType":"440","endLine":57,"endColumn":89},{"ruleId":"445","severity":1,"message":"446","line":64,"column":5,"nodeType":"440","endLine":64,"endColumn":58},{"ruleId":"445","severity":1,"message":"446","line":77,"column":5,"nodeType":"440","endLine":77,"endColumn":59},{"ruleId":"445","severity":1,"message":"446","line":90,"column":5,"nodeType":"440","endLine":90,"endColumn":59},{"ruleId":"445","severity":1,"message":"446","line":103,"column":5,"nodeType":"440","endLine":103,"endColumn":73},{"ruleId":"445","severity":1,"message":"446","line":116,"column":5,"nodeType":"440","endLine":116,"endColumn":73},{"ruleId":"445","severity":1,"message":"446","line":143,"column":21,"nodeType":"440","endLine":143,"endColumn":69},{"ruleId":"445","severity":1,"message":"446","line":149,"column":21,"nodeType":"440","endLine":149,"endColumn":60},{"ruleId":"445","severity":1,"message":"446","line":153,"column":21,"nodeType":"440","endLine":153,"endColumn":68},{"ruleId":"431","severity":1,"message":"464","line":1,"column":26,"nodeType":"433","messageId":"434","endLine":1,"endColumn":35},{"ruleId":"431","severity":1,"message":"544","line":5,"column":9,"nodeType":"433","messageId":"434","endLine":5,"endColumn":16},{"ruleId":"431","severity":1,"message":"545","line":26,"column":19,"nodeType":"433","messageId":"434","endLine":26,"endColumn":30},{"ruleId":"466","severity":1,"message":"467","line":140,"column":13,"nodeType":"468","messageId":"469","endLine":149,"endColumn":14},{"ruleId":"470","severity":1,"message":"471","line":350,"column":37,"nodeType":"440","endLine":351,"endColumn":69},{"ruleId":"431","severity":1,"message":"464","line":1,"column":26,"nodeType":"433","messageId":"434","endLine":1,"endColumn":35},{"ruleId":"431","severity":1,"message":"546","line":38,"column":12,"nodeType":"433","messageId":"434","endLine":38,"endColumn":21},{"ruleId":"431","severity":1,"message":"547","line":38,"column":23,"nodeType":"433","messageId":"434","endLine":38,"endColumn":35},{"ruleId":"431","severity":1,"message":"516","line":39,"column":12,"nodeType":"433","messageId":"434","endLine":39,"endColumn":23},{"ruleId":"480","severity":1,"message":"481","line":254,"column":102,"nodeType":"482","messageId":"483","endLine":254,"endColumn":104},{"ruleId":"466","severity":1,"message":"467","line":256,"column":45,"nodeType":"468","messageId":"469","endLine":294,"endColumn":46},{"ruleId":"431","severity":1,"message":"523","line":22,"column":12,"nodeType":"433","messageId":"434","endLine":22,"endColumn":19},{"ruleId":"466","severity":1,"message":"467","line":92,"column":29,"nodeType":"468","messageId":"469","endLine":111,"endColumn":30},{"ruleId":"431","severity":1,"message":"548","line":235,"column":11,"nodeType":"433","messageId":"434","endLine":235,"endColumn":19},{"ruleId":"431","severity":1,"message":"473","line":1,"column":16,"nodeType":"433","messageId":"434","endLine":1,"endColumn":24},{"ruleId":"431","severity":1,"message":"464","line":1,"column":26,"nodeType":"433","messageId":"434","endLine":1,"endColumn":35},{"ruleId":"549","severity":1,"message":"550","line":27,"column":17,"nodeType":"551","messageId":"552","endLine":27,"endColumn":23},{"ruleId":"549","severity":1,"message":"550","line":31,"column":17,"nodeType":"551","messageId":"552","endLine":31,"endColumn":23},{"ruleId":"549","severity":1,"message":"550","line":35,"column":17,"nodeType":"551","messageId":"552","endLine":35,"endColumn":23},{"ruleId":"457","severity":1,"message":"458","line":63,"column":25,"nodeType":"440","endLine":63,"endColumn":116},{"ruleId":"431","severity":1,"message":"473","line":1,"column":16,"nodeType":"433","messageId":"434","endLine":1,"endColumn":24},{"ruleId":"476","severity":1,"message":"553","line":24,"column":8,"nodeType":"478","endLine":24,"endColumn":10,"suggestions":"554"},{"ruleId":"476","severity":1,"message":"555","line":43,"column":8,"nodeType":"478","endLine":43,"endColumn":47,"suggestions":"556"},{"ruleId":"431","severity":1,"message":"557","line":7,"column":8,"nodeType":"433","messageId":"434","endLine":7,"endColumn":13},{"ruleId":"431","severity":1,"message":"558","line":9,"column":8,"nodeType":"433","messageId":"434","endLine":9,"endColumn":13},{"ruleId":"431","severity":1,"message":"559","line":11,"column":8,"nodeType":"433","messageId":"434","endLine":11,"endColumn":15},{"ruleId":"431","severity":1,"message":"560","line":13,"column":8,"nodeType":"433","messageId":"434","endLine":13,"endColumn":14},{"ruleId":"431","severity":1,"message":"537","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":13},{"ruleId":"431","severity":1,"message":"472","line":2,"column":16,"nodeType":"433","messageId":"434","endLine":2,"endColumn":25},{"ruleId":"431","severity":1,"message":"561","line":6,"column":7,"nodeType":"433","messageId":"434","endLine":6,"endColumn":8},{"ruleId":"562","severity":1,"message":"563","line":41,"column":1,"nodeType":"564","messageId":"565","endLine":42,"endColumn":2},{"ruleId":"476","severity":1,"message":"566","line":137,"column":8,"nodeType":"478","endLine":137,"endColumn":10,"suggestions":"567"},{"ruleId":"431","severity":1,"message":"568","line":3,"column":17,"nodeType":"433","messageId":"434","endLine":3,"endColumn":26},{"ruleId":"431","severity":1,"message":"464","line":2,"column":16,"nodeType":"433","messageId":"434","endLine":2,"endColumn":25},{"ruleId":"431","severity":1,"message":"569","line":4,"column":28,"nodeType":"433","messageId":"434","endLine":4,"endColumn":34},{"ruleId":"431","severity":1,"message":"570","line":10,"column":13,"nodeType":"433","messageId":"434","endLine":10,"endColumn":23},{"ruleId":"431","severity":1,"message":"571","line":16,"column":8,"nodeType":"433","messageId":"434","endLine":16,"endColumn":19},"no-native-reassign",["572"],"no-negated-in-lhs",["573"],"no-unused-vars","'Watsappicon' is defined but never used.","Identifier","unusedVar","'Docpdf' is defined but never used.","'$' is defined but never used.","'StartValueType' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'EquipoSunshine' is defined but never used.","'team' is assigned a value but never used.","'setTeam' is assigned a value but never used.","'differencesItems' is assigned a value but never used.","'setDifferencesItems' is assigned a value but never used.","'fetchData' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"574","text":"575"},{"range":"576","text":"575"},"'useEffect' is defined but never used.","'setLogged' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'useState' is defined but never used.","'Roll' is defined but never used.","'ready' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["577"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Table' is defined but never used.","'generateAccount' is defined but never used.","'logout' is assigned a value but never used.","'tokenPrivateKey' is assigned a value but never used.","'setTokenPrivateKey' is assigned a value but never used.","'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.uid', 'history', and 'userInfo'. Either include them or remove the dependency array.",["578"],"'facing2' is assigned a value but never used.","'setFacing' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'CheckConnection' is defined but never used.","'signinEmail' is assigned a value but never used.","'cryptoData' is assigned a value but never used.","'setCryptoData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.uid', and 'history'. Either include them or remove the dependency array.",["579"],"'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'CardHeader' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'logged' is assigned a value but never used.","'country' is assigned a value but never used.","'countriesAPI' is assigned a value but never used.","'statesAPI' is assigned a value but never used.","'citiesAPI' is assigned a value but never used.","'setCitiesAPI' is assigned a value but never used.","'fileFirestore' is assigned a value but never used.","'uploadValue' is assigned a value but never used.","'setUploadValue' is assigned a value but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.emailVerified', 'currentUser.uid', 'getCountriesAPI', 'getUserData', 'history', and 'logout'. Either include them or remove the dependency array.",["580"],"'monedafinal' is defined but never used.","'mxnToUsd' is assigned a value but never used.","'loading' is assigned a value but never used.","'paymentID' is assigned a value but never used.","'paymentDone' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allData.address', 'allData.city', 'allData.country', 'allData.lastname', 'allData.name', and 'allData.state'. Either include them or remove the dependency array. If 'setName' needs the current value of 'allData.name', you can also switch to useReducer instead of useState and read 'allData.name' in the reducer.",["581"],"'Footer' is defined but never used.","'Divider' is defined but never used.","'showArrows' is defined but never used.","'onClickItem' is defined but never used.","'differences' is assigned a value but never used.",{"range":"582","text":"575"},{"range":"583","text":"575"},"'maparoad' is defined but never used.","'ReactDOM' is defined but never used.","'React' is defined but never used.","'Engrane1' is defined but never used.","'setScale' is assigned a value but never used.","'Openzepp' is defined but never used.","'Fade' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","'NavLink' is defined but never used.","'currentUser' is assigned a value but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","'payments' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has a missing dependency: 'profilePictureStatus'. Either include it or remove the dependency array. If 'setHideButton' needs the current value of 'profilePictureStatus', you can also switch to useReducer instead of useState and read 'profilePictureStatus' in the reducer.",["584"],"React Hook useCallback has a missing dependency: 'setStates'. Either include it or remove the dependency array. If 'setStates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["585"],"'Gmail' is defined but never used.","'Linke' is defined but never used.","'Youtube' is defined but never used.","'moneda' is defined but never used.","'d' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'getData' and 'uid'. Either include them or remove the dependency array.",["586"],"'TextField' is defined but never used.","'Avatar' is defined but never used.","'useStorage' is defined but never used.","'UploadImage' is defined but never used.","no-global-assign","no-unsafe-negation",[9849,9849]," rel=\"noreferrer\"",[10280,10280],{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},[6542,6542],[7000,7000],{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},"Update the dependencies array to be: [id]",{"range":"603","text":"604"},"Update the dependencies array to be: [currentUser.email, currentUser.uid, history, userInfo]",{"range":"605","text":"606"},"Update the dependencies array to be: [currentUser.email, currentUser.uid, history]",{"range":"607","text":"608"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",{"range":"609","text":"610"},"Update the dependencies array to be: [allData.address, allData.city, allData.country, allData.lastname, allData.name, allData.state]",{"range":"611","text":"612"},"Update the dependencies array to be: [profilePictureStatus]",{"range":"613","text":"614"},"Update the dependencies array to be: [imageSrc, croppedAreaPixels, rotation, setStates]",{"range":"615","text":"616"},"Update the dependencies array to be: [getData, uid]",{"range":"617","text":"618"},[1348,1350],"[id]",[2264,2266],"[currentUser.email, currentUser.uid, history, userInfo]",[1835,1837],"[currentUser.email, currentUser.uid, history]",[3650,3664],"[currentUser.email, currentUser.emailVerified, currentUser.uid, getCountriesAPI, getUserData, history, jalaPorfavor, logout]",[2104,2106],"[allData.address, allData.city, allData.country, allData.lastname, allData.name, allData.state]",[1051,1053],"[profilePictureStatus]",[1614,1653],"[imageSrc, croppedAreaPixels, rotation, setStates]",[5140,5142],"[getData, uid]"]